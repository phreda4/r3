SDL_WINDOW_FULLSCREEN = 0x00000001,         /**< fullscreen window */
SDL_WINDOW_OPENGL = 0x00000002,             /**< window usable with OpenGL context */
SDL_WINDOW_SHOWN = 0x00000004,              /**< window is visible */
SDL_WINDOW_HIDDEN = 0x00000008,             /**< window is not visible */
SDL_WINDOW_BORDERLESS = 0x00000010,         /**< no window decoration */
SDL_WINDOW_RESIZABLE = 0x00000020,          /**< window can be resized */
SDL_WINDOW_MINIMIZED = 0x00000040,          /**< window is minimized */
SDL_WINDOW_MAXIMIZED = 0x00000080,          /**< window is maximized */
SDL_WINDOW_MOUSE_GRABBED = 0x00000100,      /**< window has grabbed mouse input */
SDL_WINDOW_INPUT_FOCUS = 0x00000200,        /**< window has input focus */
SDL_WINDOW_MOUSE_FOCUS = 0x00000400,        /**< window has mouse focus */
SDL_WINDOW_FULLSCREEN_DESKTOP = ( SDL_WINDOW_FULLSCREEN | 0x00001000 ),
SDL_WINDOW_FOREIGN = 0x00000800,            /**< window not created by SDL */
SDL_WINDOW_ALLOW_HIGHDPI = 0x00002000,      /**< window should be created in high-DPI mode if supported.
                                                     On macOS NSHighResolutionCapable must be set true in the
                                                     application's Info.plist for this to have any effect. */
SDL_WINDOW_MOUSE_CAPTURE    = 0x00004000,   /**< window has mouse captured (unrelated to MOUSE_GRABBED) */
SDL_WINDOW_ALWAYS_ON_TOP    = 0x00008000,   /**< window should always be above others */
SDL_WINDOW_SKIP_TASKBAR     = 0x00010000,   /**< window should not be added to the taskbar */
SDL_WINDOW_UTILITY          = 0x00020000,   /**< window should be treated as a utility window */
SDL_WINDOW_TOOLTIP          = 0x00040000,   /**< window should be treated as a tooltip */
SDL_WINDOW_POPUP_MENU       = 0x00080000,   /**< window should be treated as a popup menu */
SDL_WINDOW_KEYBOARD_GRABBED = 0x00100000,   /**< window has grabbed keyboard input */
SDL_WINDOW_VULKAN           = 0x10000000,   /**< window usable for Vulkan surface */
SDL_WINDOW_METAL            = 0x20000000,   /**< window usable for Metal view */
SDL_WINDOW_INPUT_GRABBED = SDL_WINDOW_MOUSE_GRABBED /**< equivalent to SDL_WINDOW_MOUSE_GRABBED for compatibility */
} SDL_WindowFlags;

/**
 *  \brief Used to indicate that you don't care what the window position is.
 */
#define SDL_WINDOWPOS_UNDEFINED_MASK    0x1FFF0000u
#define SDL_WINDOWPOS_UNDEFINED_DISPLAY(X)  (SDL_WINDOWPOS_UNDEFINED_MASK|(X))
#define SDL_WINDOWPOS_UNDEFINED         SDL_WINDOWPOS_UNDEFINED_DISPLAY(0)
#define SDL_WINDOWPOS_ISUNDEFINED(X) (((X)&0xFFFF0000) == SDL_WINDOWPOS_UNDEFINED_MASK)

/**
 *  \brief Used to indicate that the window position should be centered.
 */
#define SDL_WINDOWPOS_CENTERED_MASK    0x2FFF0000u
#define SDL_WINDOWPOS_CENTERED_DISPLAY(X)  (SDL_WINDOWPOS_CENTERED_MASK|(X))
#define SDL_WINDOWPOS_CENTERED         SDL_WINDOWPOS_CENTERED_DISPLAY(0)
#define SDL_WINDOWPOS_ISCENTERED(X) (((X)&0xFFFF0000) == SDL_WINDOWPOS_CENTERED_MASK)

/**
 *  \brief Event subtype for window events
 */
typedef enum
{
    SDL_WINDOWEVENT_NONE,           /**< Never used */
    SDL_WINDOWEVENT_SHOWN,          /**< Window has been shown */
    SDL_WINDOWEVENT_HIDDEN,         /**< Window has been hidden */
    SDL_WINDOWEVENT_EXPOSED,        /**< Window has been exposed and should be redrawn */
    SDL_WINDOWEVENT_MOVED,          /**< Window has been moved to data1, data2  */
    SDL_WINDOWEVENT_RESIZED,        /**< Window has been resized to data1xdata2 */
    SDL_WINDOWEVENT_SIZE_CHANGED,   /**< The window size has changed, either asa result of an API call or through the
                                         system or user changing the window size. */
    SDL_WINDOWEVENT_MINIMIZED,      /**< Window has been minimized */
    SDL_WINDOWEVENT_MAXIMIZED,      /**< Window has been maximized */
    SDL_WINDOWEVENT_RESTORED,       /**< Window has been restored to normal size and position */
    SDL_WINDOWEVENT_ENTER,          /**< Window has gained mouse focus */
    SDL_WINDOWEVENT_LEAVE,          /**< Window has lost mouse focus */
    SDL_WINDOWEVENT_FOCUS_GAINED,   /**< Window has gained keyboard focus */
    SDL_WINDOWEVENT_FOCUS_LOST,     /**< Window has lost keyboard focus */
    SDL_WINDOWEVENT_CLOSE,          /**< The window manager requests that the window be closed */
    SDL_WINDOWEVENT_TAKE_FOCUS,     /**< Window is being offered a focus (should SetWindowInputFocus() on itself or a subwindow, or ignore) */
    SDL_WINDOWEVENT_HIT_TEST,       /**< Window had a hit test that wasn't SDL_HITTEST_NORMAL. */
    SDL_WINDOWEVENT_ICCPROF_CHANGED,/**< The ICC profile of the window's display has changed. */
    SDL_WINDOWEVENT_DISPLAY_CHANGED /**< Window has been moved to display data1. */
} SDL_WindowEventID;

/**
 *  \brief Event subtype for display events
 */
typedef enum
{
    SDL_DISPLAYEVENT_NONE,          /**< Never used */
    SDL_DISPLAYEVENT_ORIENTATION,   /**< Display orientation has changed to data1 */
    SDL_DISPLAYEVENT_CONNECTED,     /**< Display has been added to the system */
    SDL_DISPLAYEVENT_DISCONNECTED   /**< Display has been removed from the system */
} SDL_DisplayEventID;

/**
 *  \brief Display orientation
 */
typedef enum
{
    SDL_ORIENTATION_UNKNOWN,            /**< The display orientation can't be determined */
    SDL_ORIENTATION_LANDSCAPE,          /**< The display is in landscape mode, with the right side up, relative to portrait mode */
    SDL_ORIENTATION_LANDSCAPE_FLIPPED,  /**< The display is in landscape mode, with the left side up, relative to portrait mode */
    SDL_ORIENTATION_PORTRAIT,           /**< The display is in portrait mode */
    SDL_ORIENTATION_PORTRAIT_FLIPPED    /**< The display is in portrait mode, upside down */
} SDL_DisplayOrientation;

/**
 *  \brief Window flash operation
 */
typedef enum
{
    SDL_FLASH_CANCEL,                   /**< Cancel any window flash state */
    SDL_FLASH_BRIEFLY,                  /**< Flash the window briefly to get attention */
    SDL_FLASH_UNTIL_FOCUSED             /**< Flash the window until it gets focus */
} SDL_FlashOperation;

/**
 *  \brief An opaque handle to an OpenGL context.
 */
typedef void *SDL_GLContext;

/**
 *  \brief OpenGL configuration attributes
 */
typedef enum
{
    SDL_GL_RED_SIZE,
    SDL_GL_GREEN_SIZE,
    SDL_GL_BLUE_SIZE,
    SDL_GL_ALPHA_SIZE,
    SDL_GL_BUFFER_SIZE,
    SDL_GL_DOUBLEBUFFER,
    SDL_GL_DEPTH_SIZE,
    SDL_GL_STENCIL_SIZE,
    SDL_GL_ACCUM_RED_SIZE,
    SDL_GL_ACCUM_GREEN_SIZE,
    SDL_GL_ACCUM_BLUE_SIZE,
    SDL_GL_ACCUM_ALPHA_SIZE,
    SDL_GL_STEREO,
    SDL_GL_MULTISAMPLEBUFFERS,
    SDL_GL_MULTISAMPLESAMPLES,
    SDL_GL_ACCELERATED_VISUAL,
    SDL_GL_RETAINED_BACKING,
    SDL_GL_CONTEXT_MAJOR_VERSION,
    SDL_GL_CONTEXT_MINOR_VERSION,
    SDL_GL_CONTEXT_EGL,
    SDL_GL_CONTEXT_FLAGS,
    SDL_GL_CONTEXT_PROFILE_MASK,
    SDL_GL_SHARE_WITH_CURRENT_CONTEXT,
    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR,
    SDL_GL_CONTEXT_RESET_NOTIFICATION,
    SDL_GL_CONTEXT_NO_ERROR
} SDL_GLattr;

typedef enum
{
    SDL_GL_CONTEXT_PROFILE_CORE           = 0x0001,
    SDL_GL_CONTEXT_PROFILE_COMPATIBILITY  = 0x0002,
    SDL_GL_CONTEXT_PROFILE_ES             = 0x0004 /**< GLX_CONTEXT_ES2_PROFILE_BIT_EXT */
} SDL_GLprofile;

typedef enum
{
    SDL_GL_CONTEXT_DEBUG_FLAG              = 0x0001,
    SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002,
    SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG      = 0x0004,
    SDL_GL_CONTEXT_RESET_ISOLATION_FLAG    = 0x0008
} SDL_GLcontextFlag;

typedef enum
{
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE   = 0x0000,
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH  = 0x0001
} SDL_GLcontextReleaseFlag;

typedef enum
{
    SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000,
    SDL_GL_CONTEXT_RESET_LOSE_CONTEXT    = 0x0001
} SDL_GLContextResetNotification;

#GL_ACTIVE_ATTRIBUTES $8B89
GL_ACTIVE_TEXTURE $84E0
GL_ACTIVE_UNIFORM_BLOCKS $8A36
GL_ACTIVE_UNIFORMS $8B86
GL_ALIASED_LINE_WIDTH_RANGE $846E
GL_ALIASED_POINT_SIZE_RANGE $846D
GL_ALPHA $1906
GL_ALPHA_BITS $0D55
GL_ALWAYS $0207
GL_ANY_SAMPLES_PASSED $8C2F
GL_ANY_SAMPLES_PASSED_CONSERVATIVE $8D6A
GL_ARRAY_BUFFER $8892
GL_ARRAY_BUFFER_BINDING $8894
GL_ATTACHED_SHADERS $8B85
GL_BACK $0405
GL_BLEND $0BE2
GL_BLEND_COLOR $8005
GL_BLEND_DST_ALPHA $80CA
GL_BLEND_DST_RGB $80C8
GL_BLEND_EQUATION $8009
GL_BLEND_EQUATION_ALPHA $883D
GL_BLEND_EQUATION_RGB $8009
GL_BLEND_SRC_ALPHA $80CB
GL_BLEND_SRC_RGB $80C9
GL_BLUE_BITS $0D54
GL_BOOL $8B56
GL_BOOL_VEC2 $8B57
GL_BOOL_VEC3 $8B58
GL_BOOL_VEC4 $8B59
GL_BROWSER_DEFAULT_WEBGL $9244 
GL_BUFFER_SIZE $8764
GL_BUFFER_USAGE $8765
GL_BYTE $1400
GL_CCW $0901
GL_CLAMP_TO_EDGE $812F
GL_CLEAR_ALL GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT
GL_COLOR $1800
GL_COLOR_ATTACHMENT0 $8CE0
GL_COLOR_ATTACHMENT1 $8CE1
GL_COLOR_ATTACHMENT10 $8CEA
GL_COLOR_ATTACHMENT11 $8CEB
GL_COLOR_ATTACHMENT12 $8CEC
GL_COLOR_ATTACHMENT13 $8CED
GL_COLOR_ATTACHMENT14 $8CEE
GL_COLOR_ATTACHMENT15 $8CEF
GL_COLOR_ATTACHMENT2 $8CE2
GL_COLOR_ATTACHMENT3 $8CE3
GL_COLOR_ATTACHMENT4 $8CE4
GL_COLOR_ATTACHMENT5 $8CE5
GL_COLOR_ATTACHMENT6 $8CE6
GL_COLOR_ATTACHMENT7 $8CE7
GL_COLOR_ATTACHMENT8 $8CE8
GL_COLOR_ATTACHMENT9 $8CE9
GL_COLOR_BUFFER_BIT $00004000
GL_COLOR_CLEAR_VALUE $0C22
GL_COLOR_WRITEMASK $0C23
GL_COMPARE_REF_TO_TEXTURE $884E
GL_COMPILE_STATUS $8B81
GL_CONDITION_SATISFIED $911C
GL_CONSTANT_ALPHA $8003
GL_CONSTANT_COLOR $8001
GL_CONTEXT_LOST_WEBGL $9242
GL_COPY_READ_BUFFER $8F36
GL_COPY_READ_BUFFER_BINDING $8F36
GL_COPY_WRITE_BUFFER $8F37
GL_COPY_WRITE_BUFFER_BINDING $8F37
GL_CULL_FACE $0B44
GL_CULL_FACE_MODE $0B45
GL_CURRENT_PROGRAM $8B8D
GL_CURRENT_QUERY $8865
GL_CURRENT_VERTEX_ATTRIB $8626
GL_CW $0900
GL_DECR $1E03
GL_DECR_WRAP $8508
GL_DELETE_STATUS $8B80
GL_DEPTH $1801
GL_DEPTH24_STENCIL8 $88F0
GL_DEPTH32F_STENCIL8 $8CAD
GL_DEPTH_ATTACHMENT $8D00
GL_DEPTH_BITS $0D56
GL_DEPTH_BUFFER_BIT $00000100
GL_DEPTH_CLEAR_VALUE $0B73
GL_DEPTH_COMPONENT $1902
GL_DEPTH_COMPONENT16 $81A5
GL_DEPTH_COMPONENT24 $81A6
GL_DEPTH_COMPONENT32F $8CAC
GL_DEPTH_FUNC $0B74
GL_DEPTH_RANGE $0B70
GL_DEPTH_STENCIL $84F9
GL_DEPTH_STENCIL_ATTACHMENT $821A
GL_DEPTH_TEST $0B71
GL_DEPTH_WRITEMASK $0B72
GL_DITHER $0BD0
GL_DRAW_BUFFER0 $8825
GL_DRAW_BUFFER1 $8826
GL_DRAW_BUFFER10 $882F
GL_DRAW_BUFFER11 $8830
GL_DRAW_BUFFER12 $8831
GL_DRAW_BUFFER13 $8832
GL_DRAW_BUFFER14 $8833
GL_DRAW_BUFFER15 $8834
GL_DRAW_BUFFER2 $8827
GL_DRAW_BUFFER3 $8828
GL_DRAW_BUFFER4 $8829
GL_DRAW_BUFFER5 $882A
GL_DRAW_BUFFER6 $882B
GL_DRAW_BUFFER7 $882C
GL_DRAW_BUFFER8 $882D
GL_DRAW_BUFFER9 $882E
GL_DRAW_FRAMEBUFFER $8CA9
GL_DRAW_FRAMEBUFFER_BINDING $8CA6
GL_DST_ALPHA $0304
GL_DST_COLOR $0306
GL_DYNAMIC_COPY $88EA
GL_DYNAMIC_DRAW $88E8
GL_DYNAMIC_READ $88E9
GL_ELEMENT_ARRAY_BUFFER $8893
GL_ELEMENT_ARRAY_BUFFER_BINDING $8895
GL_EQUAL $0202
GL_FASTEST $1101
GL_FLOAT $1406
GL_FLOAT_32_UNSIGNED_INT_24_8_REV $8DAD
GL_FLOAT_MAT2 $8B5A
GL_FLOAT_MAT2x3 $8B65
GL_FLOAT_MAT2x4 $8B66
GL_FLOAT_MAT3 $8B5B
GL_FLOAT_MAT3x2 $8B67
GL_FLOAT_MAT3x4 $8B68
GL_FLOAT_MAT4 $8B5C
GL_FLOAT_MAT4x2 $8B69
GL_FLOAT_MAT4x3 $8B6A
GL_FLOAT_VEC2 $8B50
GL_FLOAT_VEC3 $8B51
GL_FLOAT_VEC4 $8B52
GL_FRAGMENT_SHADER $8B30
GL_FRAGMENT_SHADER_DERIVATIVE_HINT $8B8B
GL_FRAMEBUFFER $8D40
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE $8215
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE $8214
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING $8210
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE $8211
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE $8216
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE $8213
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME $8CD1
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE $8CD0
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE $8212
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE $8217
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE $8CD3
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER $8CD4
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL $8CD2
GL_FRAMEBUFFER_BINDING $8CA6
GL_FRAMEBUFFER_COMPLETE $8CD5
GL_FRAMEBUFFER_DEFAULT $8218
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT $8CD6
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS $8CD9
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT $8CD7
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE $8D56
GL_FRAMEBUFFER_UNSUPPORTED $8CDD
GL_FRONT $0404
GL_FRONT_AND_BACK $0408
GL_FRONT_FACE $0B46
GL_FUNC_ADD $8006
GL_FUNC_REVERSE_SUBTRACT $800B
GL_FUNC_SUBTRACT $800A
GL_GEQUAL $0206
GL_GREATER $0204
GL_GREEN_BITS $0D53
GL_HALF_FLOAT $140B
GL_HIGH_FLOAT $8DF2
GL_HIGH_INT $8DF5
GL_IMPLEMENTATION_COLOR_READ_FORMAT $8B9B
GL_IMPLEMENTATION_COLOR_READ_TYPE $8B9A
GL_INCR $1E02
GL_INCR_WRAP $8507
GL_INT $1404
GL_INT_2_10_10_10_REV $8D9F
GL_INT_SAMPLER_2D $8DCA
GL_INT_SAMPLER_2D_ARRAY $8DCF
GL_INT_SAMPLER_3D $8DCB
GL_INT_SAMPLER_CUBE $8DCC
GL_INT_VEC2 $8B53
GL_INT_VEC3 $8B54
GL_INT_VEC4 $8B55
GL_INTERLEAVED_ATTRIBS $8C8C
GL_INVALID_ENUM $0500
GL_INVALID_FRAMEBUFFER_OPERATION $0506
GL_INVALID_INDEX $FFFFFFFF
GL_INVALID_OPERATION $0502
GL_INVALID_VALUE $0501
GL_INVERT $150A
GL_KEEP $1E00
GL_LEQUAL $0203
GL_LESS $0201
GL_LINE_LOOP $0002
GL_LINE_STRIP $0003
GL_LINE_WIDTH $0B21
GL_LINEAR $2601
GL_LINEAR_MIPMAP_LINEAR $2703
GL_LINEAR_MIPMAP_NEAREST $2701
GL_LINES $0001
GL_LINK_STATUS $8B82
GL_LOW_FLOAT $8DF0
GL_LOW_INT $8DF3
GL_LUMINANCE $1909
GL_LUMINANCE_ALPHA $190A
GL_MAX $8008
GL_MAX_3D_TEXTURE_SIZE $8073
GL_MAX_ARRAY_TEXTURE_LAYERS $88FF
GL_MAX_COLOR_ATTACHMENTS $8CDF
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS $8A33
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS $8B4D
GL_MAX_COMBINED_UNIFORM_BLOCKS $8A2E
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS $8A31
GL_MAX_CUBE_MAP_TEXTURE_SIZE $851C
GL_MAX_DRAW_BUFFERS $8824
GL_MAX_ELEMENT_INDEX $8D6B
GL_MAX_ELEMENTS_INDICES $80E9
GL_MAX_ELEMENTS_VERTICES $80E8
GL_MAX_FRAGMENT_INPUT_COMPONENTS $9125
GL_MAX_FRAGMENT_UNIFORM_BLOCKS $8A2D
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS $8B49
GL_MAX_FRAGMENT_UNIFORM_VECTORS $8DFD
GL_MAX_PROGRAM_TEXEL_OFFSET $8905
GL_MAX_RENDERBUFFER_SIZE $84E8
GL_MAX_SAMPLES $8D57
GL_MAX_SERVER_WAIT_TIMEOUT $9111
GL_MAX_TEXTURE_IMAGE_UNITS $8872
GL_MAX_TEXTURE_LOD_BIAS $84FD
GL_MAX_TEXTURE_SIZE $0D33
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS $8C8A
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS $8C8B
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS $8C80
GL_MAX_UNIFORM_BLOCK_SIZE $8A30
GL_MAX_UNIFORM_BUFFER_BINDINGS $8A2F
GL_MAX_VARYING_COMPONENTS $8B4B
GL_MAX_VARYING_VECTORS $8DFC
GL_MAX_VERTEX_ATTRIBS $8869
GL_MAX_VERTEX_OUTPUT_COMPONENTS $9122
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS $8B4C
GL_MAX_VERTEX_UNIFORM_BLOCKS $8A2B
GL_MAX_VERTEX_UNIFORM_COMPONENTS $8B4A
GL_MAX_VERTEX_UNIFORM_VECTORS $8DFB
GL_MAX_VIEWPORT_DIMS $0D3A
GL_MEDIUM_FLOAT $8DF1
GL_MEDIUM_INT $8DF4
GL_MIN $8007
GL_MIN_PROGRAM_TEXEL_OFFSET $8904
GL_MIRRORED_REPEAT $8370
GL_NEAREST $2600
GL_NEAREST_MIPMAP_LINEAR $2702
GL_NEAREST_MIPMAP_NEAREST $2700
GL_NEVER $0200
GL_NICEST $1102
GL_NO_ERROR 0
GL_NONE 0
GL_NOTEQUAL $0205
GL_OBJECT_TYPE $9112
GL_ONE 1
GL_ONE_MINUS_CONSTANT_ALPHA $8004
GL_ONE_MINUS_CONSTANT_COLOR $8002
GL_ONE_MINUS_DST_ALPHA $0305
GL_ONE_MINUS_DST_COLOR $0307
GL_ONE_MINUS_SRC_ALPHA $0303
GL_ONE_MINUS_SRC_COLOR $0301
GL_OUT_OF_MEMORY $0505
GL_PACK_ALIGNMENT $0D05
GL_PACK_ROW_LENGTH $0D02
GL_PACK_SKIP_PIXELS $0D04
GL_PACK_SKIP_ROWS $0D03
GL_PIXEL_PACK_BUFFER $88EB
GL_PIXEL_PACK_BUFFER_BINDING $88ED
GL_PIXEL_UNPACK_BUFFER $88EC
GL_PIXEL_UNPACK_BUFFER_BINDING $88EF
GL_POINTS $0000
GL_POLYGON_OFFSET_FACTOR $8038
GL_POLYGON_OFFSET_FILL $8037
GL_POLYGON_OFFSET_UNITS $2A00
GL_QUERY_RESULT $8866
GL_QUERY_RESULT_AVAILABLE $8867
GL_R11F_G11F_B10F $8C3A
GL_R16F $822D
GL_R16I $8233
GL_R16UI $8234
GL_R32F $822E
GL_R32I $8235
GL_R32UI $8236
GL_R8 $8229
GL_R8_SNORM $8F94
GL_R8I $8231
GL_R8UI $8232
GL_RASTERIZER_DISCARD $8C89
GL_READ_BUFFER $0C02
GL_READ_FRAMEBUFFER $8CA8
GL_READ_FRAMEBUFFER_BINDING $8CAA
GL_RED $1903
GL_RED_BITS $0D52
GL_RED_INTEGER $8D94
GL_RENDERBUFFER $8D41
GL_RENDERBUFFER_ALPHA_SIZE $8D53
GL_RENDERBUFFER_BINDING $8CA7
GL_RENDERBUFFER_BLUE_SIZE $8D52
GL_RENDERBUFFER_DEPTH_SIZE $8D54
GL_RENDERBUFFER_GREEN_SIZE $8D51
GL_RENDERBUFFER_HEIGHT $8D43
GL_RENDERBUFFER_INTERNAL_FORMAT $8D44
GL_RENDERBUFFER_RED_SIZE $8D50
GL_RENDERBUFFER_SAMPLES $8CAB
GL_RENDERBUFFER_STENCIL_SIZE $8D55
GL_RENDERBUFFER_WIDTH $8D42
GL_RENDERER $1F01
GL_REPEAT $2901
GL_REPLACE $1E01
GL_RG $8227
GL_RG16F $822F
GL_RG16I $8239
GL_RG16UI $823A
GL_RG32F $8230
GL_RG32I $823B
GL_RG32UI $823C
GL_RG8 $822B
GL_RG8_SNORM $8F95
GL_RG8I $8237
GL_RG8UI $8238
GL_RG_INTEGER $8228
GL_RGB $1907
GL_RGB10_A2 $8059
GL_RGB10_A2UI $906F
GL_RGB16F $881B
GL_RGB16I $8D89
GL_RGB16UI $8D77
GL_RGB32F $8815
GL_RGB32I $8D83
GL_RGB32UI $8D71
GL_RGB565 $8D62
GL_RGB5_A1 $8057
GL_RGB8 $8051
GL_RGB8_SNORM $8F96
GL_RGB8I $8D8F
GL_RGB8UI $8D7D
GL_RGB9_E5 $8C3D
GL_RGB_INTEGER $8D98
GL_RGBA $1908
GL_RGBA16F $881A
GL_RGBA16I $8D88
GL_RGBA16UI $8D76
GL_RGBA32F $8814
GL_RGBA32I $8D82
GL_RGBA32UI $8D70
GL_RGBA4 $8056
GL_RGBA8 $8058
GL_RGBA8_SNORM $8F97
GL_RGBA8I $8D8E
GL_RGBA8UI $8D7C
GL_RGBA_INTEGER $8D99
GL_SAMPLE_ALPHA_TO_COVERAGE $809E
GL_SAMPLE_BUFFERS $80A8
GL_SAMPLE_COVERAGE $80A0
GL_SAMPLE_COVERAGE_INVERT $80AB
GL_SAMPLE_COVERAGE_VALUE $80AA
GL_SAMPLER_2D $8B5E
GL_SAMPLER_2D_ARRAY $8DC1
GL_SAMPLER_2D_ARRAY_SHADOW $8DC4
GL_SAMPLER_2D_SHADOW $8B62
GL_SAMPLER_3D $8B5F
GL_SAMPLER_BINDING $8919
GL_SAMPLER_CUBE $8B60
GL_SAMPLER_CUBE_SHADOW $8DC5
GL_SAMPLES $80A9
GL_SCISSOR_BOX $0C10
GL_SCISSOR_TEST $0C11
GL_SEPARATE_ATTRIBS $8C8D
GL_SHADER_TYPE $8B4F
GL_SHADING_LANGUAGE_VERSION $8B8C
GL_SHORT $1402
GL_SIGNALED $9119
GL_SIGNED_NORMALIZED $8F9C
GL_SRC_ALPHA $0302
GL_SRC_ALPHA_SATURATE $0308
GL_SRC_COLOR $0300
GL_SRGB $8C40
GL_SRGB8 $8C41
GL_SRGB8_ALPHA8 $8C43
GL_STATIC_COPY $88E6
GL_STATIC_DRAW $88E4
GL_STATIC_READ $88E5
GL_STENCIL $1802
GL_STENCIL_ATTACHMENT $8D20
GL_STENCIL_BACK_FAIL $8801
GL_STENCIL_BACK_FUNC $8800
GL_STENCIL_BACK_PASS_DEPTH_FAIL $8802
GL_STENCIL_BACK_PASS_DEPTH_PASS $8803
GL_STENCIL_BACK_REF $8CA3
GL_STENCIL_BACK_VALUE_MASK $8CA4
GL_STENCIL_BACK_WRITEMASK $8CA5
GL_STENCIL_BITS $0D57
GL_STENCIL_BUFFER_BIT $00000400
GL_STENCIL_CLEAR_VALUE $0B91
GL_STENCIL_FAIL $0B94
GL_STENCIL_FUNC $0B92
GL_STENCIL_INDEX $1901
GL_STENCIL_INDEX8 $8D48
GL_STENCIL_PASS_DEPTH_FAIL $0B95
GL_STENCIL_PASS_DEPTH_PASS $0B96
GL_STENCIL_REF $0B97
GL_STENCIL_TEST $0B90
GL_STENCIL_VALUE_MASK $0B93
GL_STENCIL_WRITEMASK $0B98
GL_STREAM_COPY $88E2
GL_STREAM_DRAW $88E0
GL_STREAM_READ $88E1
GL_SUBPIXEL_BITS $0D50
GL_SYNC_CONDITION $9113
GL_SYNC_FENCE $9116
GL_SYNC_FLAGS $9115
GL_SYNC_FLUSH_COMMANDS_BIT $00000001
GL_SYNC_GPU_COMMANDS_COMPLETE $9117
GL_SYNC_STATUS $9114
GL_TEXTURE $1702
GL_TEXTURE0 $84C0
GL_TEXTURE_2D $0DE1
GL_TEXTURE_2D_ARRAY $8C1A
GL_TEXTURE_3D $806F
GL_TEXTURE_BASE_LEVEL $813C
GL_TEXTURE_BINDING_2D $8069
GL_TEXTURE_BINDING_2D_ARRAY $8C1D
GL_TEXTURE_BINDING_3D $806A
GL_TEXTURE_BINDING_CUBE_MAP $8514
GL_TEXTURE_COMPARE_FUNC $884D
GL_TEXTURE_COMPARE_MODE $884C
GL_TEXTURE_CUBE_MAP $8513
GL_TEXTURE_CUBE_MAP_NEGATIVE_X $8516
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y $8518
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z $851A
GL_TEXTURE_CUBE_MAP_POSITIVE_X $8515
GL_TEXTURE_CUBE_MAP_POSITIVE_Y $8517
GL_TEXTURE_CUBE_MAP_POSITIVE_Z $8519
GL_TEXTURE_IMMUTABLE_FORMAT $912F
GL_TEXTURE_IMMUTABLE_LEVELS $82DF
GL_TEXTURE_MAG_FILTER $2800
GL_TEXTURE_MAX_ANISOTROPY_EXT $84FE
GL_TEXTURE_MAX_LEVEL $813D
GL_TEXTURE_MAX_LOD $813B
GL_TEXTURE_MIN_FILTER $2801
GL_TEXTURE_MIN_LOD $813A
GL_TEXTURE_WRAP_R $8072
GL_TEXTURE_WRAP_S $2802
GL_TEXTURE_WRAP_T $2803
GL_TIMEOUT_EXPIRED $911B
GL_TRANSFORM_FEEDBACK $8E22
GL_TRANSFORM_FEEDBACK_ACTIVE $8E24
GL_TRANSFORM_FEEDBACK_BINDING $8E25
GL_TRANSFORM_FEEDBACK_BUFFER $8C8E
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING $8C8F
GL_TRANSFORM_FEEDBACK_BUFFER_MODE $8C7F
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE $8C85
GL_TRANSFORM_FEEDBACK_BUFFER_START $8C84
GL_TRANSFORM_FEEDBACK_PAUSED $8E23
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN $8C88
GL_TRANSFORM_FEEDBACK_VARYINGS $8C83
GL_TRIANGLE_FAN $0006
GL_TRIANGLE_STRIP $0005
GL_TRIANGLES $0004
GL_UNIFORM_ARRAY_STRIDE $8A3C
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES $8A43
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS $8A42
GL_UNIFORM_BLOCK_BINDING $8A3F
GL_UNIFORM_BLOCK_DATA_SIZE $8A40
GL_UNIFORM_BLOCK_INDEX $8A3A
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER $8A46
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER $8A44
GL_UNIFORM_BUFFER $8A11
GL_UNIFORM_BUFFER_BINDING $8A28
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT $8A34
GL_UNIFORM_BUFFER_SIZE $8A2A
GL_UNIFORM_BUFFER_START $8A29
GL_UNIFORM_IS_ROW_MAJOR $8A3E
GL_UNIFORM_MATRIX_STRIDE $8A3D
GL_UNIFORM_OFFSET $8A3B
GL_UNIFORM_SIZE $8A38
GL_UNIFORM_TYPE $8A37
GL_UNMASKED_RENDERER_WEBGL $9246
GL_UNMASKED_VENDOR_WEBGL $9245
GL_UNPACK_ALIGNMENT $0CF5
GL_UNPACK_COLORSPACE_CONVERSION_WEBGL $9243
GL_UNPACK_FLIP_Y_WEBGL $9240
GL_UNPACK_IMAGE_HEIGHT $806E
GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL $9241
GL_UNPACK_ROW_LENGTH $0CF2
GL_UNPACK_SKIP_IMAGES $806D
GL_UNPACK_SKIP_PIXELS $0CF4
GL_UNPACK_SKIP_ROWS $0CF3
GL_UNSIGNALED $9118
GL_UNSIGNED_BYTE $1401
GL_UNSIGNED_INT $1405
GL_UNSIGNED_INT_10F_11F_11F_REV $8C3B
GL_UNSIGNED_INT_24_8 $84FA
GL_UNSIGNED_INT_2_10_10_10_REV $8368
GL_UNSIGNED_INT_5_9_9_9_REV $8C3E
GL_UNSIGNED_INT_SAMPLER_2D $8DD2
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY $8DD7
GL_UNSIGNED_INT_SAMPLER_3D $8DD3
GL_UNSIGNED_INT_SAMPLER_CUBE $8DD4
GL_UNSIGNED_INT_VEC2 $8DC6
GL_UNSIGNED_INT_VEC3 $8DC7
GL_UNSIGNED_INT_VEC4 $8DC8
GL_UNSIGNED_NORMALIZED $8C17
GL_UNSIGNED_SHORT $1403
GL_UNSIGNED_SHORT_4_4_4_4 $8033
GL_UNSIGNED_SHORT_5_5_5_1 $8034
GL_UNSIGNED_SHORT_5_6_5 $8363
GL_VALIDATE_STATUS $8B83
GL_VENDOR $1F00
GL_VERSION $1F02
GL_VERTEX_ARRAY_BINDING $85B5
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING $889F
GL_VERTEX_ATTRIB_ARRAY_DIVISOR $88FE
GL_VERTEX_ATTRIB_ARRAY_ENABLED $8622
GL_VERTEX_ATTRIB_ARRAY_INTEGER $88FD
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED $886A
GL_VERTEX_ATTRIB_ARRAY_POINTER $8645
GL_VERTEX_ATTRIB_ARRAY_SIZE $8623
GL_VERTEX_ATTRIB_ARRAY_STRIDE $8624
GL_VERTEX_ATTRIB_ARRAY_TYPE $8625
GL_VERTEX_SHADER $8B31
GL_VIEWPORT $0BA2
GL_WAIT_FAILED $911D
GL_ZERO 0
