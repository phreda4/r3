ypedef enum
{
    SDL_WINDOW_FULLSCREEN = 0x00000001,         /**< fullscreen window */
    SDL_WINDOW_OPENGL = 0x00000002,             /**< window usable with OpenGL context */
    SDL_WINDOW_SHOWN = 0x00000004,              /**< window is visible */
    SDL_WINDOW_HIDDEN = 0x00000008,             /**< window is not visible */
    SDL_WINDOW_BORDERLESS = 0x00000010,         /**< no window decoration */
    SDL_WINDOW_RESIZABLE = 0x00000020,          /**< window can be resized */
    SDL_WINDOW_MINIMIZED = 0x00000040,          /**< window is minimized */
    SDL_WINDOW_MAXIMIZED = 0x00000080,          /**< window is maximized */
    SDL_WINDOW_MOUSE_GRABBED = 0x00000100,      /**< window has grabbed mouse input */
    SDL_WINDOW_INPUT_FOCUS = 0x00000200,        /**< window has input focus */
    SDL_WINDOW_MOUSE_FOCUS = 0x00000400,        /**< window has mouse focus */
    SDL_WINDOW_FULLSCREEN_DESKTOP = ( SDL_WINDOW_FULLSCREEN | 0x00001000 ),
    SDL_WINDOW_FOREIGN = 0x00000800,            /**< window not created by SDL */
    SDL_WINDOW_ALLOW_HIGHDPI = 0x00002000,      /**< window should be created in high-DPI mode if supported.
                                                     On macOS NSHighResolutionCapable must be set true in the
                                                     application's Info.plist for this to have any effect. */
    SDL_WINDOW_MOUSE_CAPTURE    = 0x00004000,   /**< window has mouse captured (unrelated to MOUSE_GRABBED) */
    SDL_WINDOW_ALWAYS_ON_TOP    = 0x00008000,   /**< window should always be above others */
    SDL_WINDOW_SKIP_TASKBAR     = 0x00010000,   /**< window should not be added to the taskbar */
    SDL_WINDOW_UTILITY          = 0x00020000,   /**< window should be treated as a utility window */
    SDL_WINDOW_TOOLTIP          = 0x00040000,   /**< window should be treated as a tooltip */
    SDL_WINDOW_POPUP_MENU       = 0x00080000,   /**< window should be treated as a popup menu */
    SDL_WINDOW_KEYBOARD_GRABBED = 0x00100000,   /**< window has grabbed keyboard input */
    SDL_WINDOW_VULKAN           = 0x10000000,   /**< window usable for Vulkan surface */
    SDL_WINDOW_METAL            = 0x20000000,   /**< window usable for Metal view */

    SDL_WINDOW_INPUT_GRABBED = SDL_WINDOW_MOUSE_GRABBED /**< equivalent to SDL_WINDOW_MOUSE_GRABBED for compatibility */
} SDL_WindowFlags;

/**
 *  \brief Used to indicate that you don't care what the window position is.
 */
#define SDL_WINDOWPOS_UNDEFINED_MASK    0x1FFF0000u
#define SDL_WINDOWPOS_UNDEFINED_DISPLAY(X)  (SDL_WINDOWPOS_UNDEFINED_MASK|(X))
#define SDL_WINDOWPOS_UNDEFINED         SDL_WINDOWPOS_UNDEFINED_DISPLAY(0)
#define SDL_WINDOWPOS_ISUNDEFINED(X)    \
            (((X)&0xFFFF0000) == SDL_WINDOWPOS_UNDEFINED_MASK)

/**
 *  \brief Used to indicate that the window position should be centered.
 */
#define SDL_WINDOWPOS_CENTERED_MASK    0x2FFF0000u
#define SDL_WINDOWPOS_CENTERED_DISPLAY(X)  (SDL_WINDOWPOS_CENTERED_MASK|(X))
#define SDL_WINDOWPOS_CENTERED         SDL_WINDOWPOS_CENTERED_DISPLAY(0)
#define SDL_WINDOWPOS_ISCENTERED(X)    \
            (((X)&0xFFFF0000) == SDL_WINDOWPOS_CENTERED_MASK)

/**
 *  \brief Event subtype for window events
 */
typedef enum
{
    SDL_WINDOWEVENT_NONE,           /**< Never used */
    SDL_WINDOWEVENT_SHOWN,          /**< Window has been shown */
    SDL_WINDOWEVENT_HIDDEN,         /**< Window has been hidden */
    SDL_WINDOWEVENT_EXPOSED,        /**< Window has been exposed and should be
                                         redrawn */
    SDL_WINDOWEVENT_MOVED,          /**< Window has been moved to data1, data2
                                     */
    SDL_WINDOWEVENT_RESIZED,        /**< Window has been resized to data1xdata2 */
    SDL_WINDOWEVENT_SIZE_CHANGED,   /**< The window size has changed, either as
                                         a result of an API call or through the
                                         system or user changing the window size. */
    SDL_WINDOWEVENT_MINIMIZED,      /**< Window has been minimized */
    SDL_WINDOWEVENT_MAXIMIZED,      /**< Window has been maximized */
    SDL_WINDOWEVENT_RESTORED,       /**< Window has been restored to normal size
                                         and position */
    SDL_WINDOWEVENT_ENTER,          /**< Window has gained mouse focus */
    SDL_WINDOWEVENT_LEAVE,          /**< Window has lost mouse focus */
    SDL_WINDOWEVENT_FOCUS_GAINED,   /**< Window has gained keyboard focus */
    SDL_WINDOWEVENT_FOCUS_LOST,     /**< Window has lost keyboard focus */
    SDL_WINDOWEVENT_CLOSE,          /**< The window manager requests that the window be closed */
    SDL_WINDOWEVENT_TAKE_FOCUS,     /**< Window is being offered a focus (should SetWindowInputFocus() on itself or a subwindow, or ignore) */
    SDL_WINDOWEVENT_HIT_TEST,       /**< Window had a hit test that wasn't SDL_HITTEST_NORMAL. */
    SDL_WINDOWEVENT_ICCPROF_CHANGED,/**< The ICC profile of the window's display has changed. */
    SDL_WINDOWEVENT_DISPLAY_CHANGED /**< Window has been moved to display data1. */
} SDL_WindowEventID;

/**
 *  \brief Event subtype for display events
 */
typedef enum
{
    SDL_DISPLAYEVENT_NONE,          /**< Never used */
    SDL_DISPLAYEVENT_ORIENTATION,   /**< Display orientation has changed to data1 */
    SDL_DISPLAYEVENT_CONNECTED,     /**< Display has been added to the system */
    SDL_DISPLAYEVENT_DISCONNECTED   /**< Display has been removed from the system */
} SDL_DisplayEventID;

/**
 *  \brief Display orientation
 */
typedef enum
{
    SDL_ORIENTATION_UNKNOWN,            /**< The display orientation can't be determined */
    SDL_ORIENTATION_LANDSCAPE,          /**< The display is in landscape mode, with the right side up, relative to portrait mode */
    SDL_ORIENTATION_LANDSCAPE_FLIPPED,  /**< The display is in landscape mode, with the left side up, relative to portrait mode */
    SDL_ORIENTATION_PORTRAIT,           /**< The display is in portrait mode */
    SDL_ORIENTATION_PORTRAIT_FLIPPED    /**< The display is in portrait mode, upside down */
} SDL_DisplayOrientation;

/**
 *  \brief Window flash operation
 */
typedef enum
{
    SDL_FLASH_CANCEL,                   /**< Cancel any window flash state */
    SDL_FLASH_BRIEFLY,                  /**< Flash the window briefly to get attention */
    SDL_FLASH_UNTIL_FOCUSED             /**< Flash the window until it gets focus */
} SDL_FlashOperation;

/**
 *  \brief An opaque handle to an OpenGL context.
 */
typedef void *SDL_GLContext;

/**
 *  \brief OpenGL configuration attributes
 */
typedef enum
{
    SDL_GL_RED_SIZE,
    SDL_GL_GREEN_SIZE,
    SDL_GL_BLUE_SIZE,
    SDL_GL_ALPHA_SIZE,
    SDL_GL_BUFFER_SIZE,
    SDL_GL_DOUBLEBUFFER,
    SDL_GL_DEPTH_SIZE,
    SDL_GL_STENCIL_SIZE,
    SDL_GL_ACCUM_RED_SIZE,
    SDL_GL_ACCUM_GREEN_SIZE,
    SDL_GL_ACCUM_BLUE_SIZE,
    SDL_GL_ACCUM_ALPHA_SIZE,
    SDL_GL_STEREO,
    SDL_GL_MULTISAMPLEBUFFERS,
    SDL_GL_MULTISAMPLESAMPLES,
    SDL_GL_ACCELERATED_VISUAL,
    SDL_GL_RETAINED_BACKING,
    SDL_GL_CONTEXT_MAJOR_VERSION,
    SDL_GL_CONTEXT_MINOR_VERSION,
    SDL_GL_CONTEXT_EGL,
    SDL_GL_CONTEXT_FLAGS,
    SDL_GL_CONTEXT_PROFILE_MASK,
    SDL_GL_SHARE_WITH_CURRENT_CONTEXT,
    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR,
    SDL_GL_CONTEXT_RESET_NOTIFICATION,
    SDL_GL_CONTEXT_NO_ERROR
} SDL_GLattr;

typedef enum
{
    SDL_GL_CONTEXT_PROFILE_CORE           = 0x0001,
    SDL_GL_CONTEXT_PROFILE_COMPATIBILITY  = 0x0002,
    SDL_GL_CONTEXT_PROFILE_ES             = 0x0004 /**< GLX_CONTEXT_ES2_PROFILE_BIT_EXT */
} SDL_GLprofile;

typedef enum
{
    SDL_GL_CONTEXT_DEBUG_FLAG              = 0x0001,
    SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002,
    SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG      = 0x0004,
    SDL_GL_CONTEXT_RESET_ISOLATION_FLAG    = 0x0008
} SDL_GLcontextFlag;

typedef enum
{
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE   = 0x0000,
    SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH  = 0x0001
} SDL_GLcontextReleaseFlag;

typedef enum
{
    SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000,
    SDL_GL_CONTEXT_RESET_LOSE_CONTEXT    = 0x0001
} SDL_GLContextResetNotification;

GL_ACTIVE_ATTRIBUTES → const int
0x8B89
GL_ACTIVE_TEXTURE → const int
0x84E0
GL_ACTIVE_UNIFORM_BLOCKS → const int
0x8A36
GL_ACTIVE_UNIFORMS → const int
0x8B86
GL_ALIASED_LINE_WIDTH_RANGE → const int
0x846E
GL_ALIASED_POINT_SIZE_RANGE → const int
0x846D
GL_ALPHA → const int
0x1906
GL_ALPHA_BITS → const int
0x0D55
GL_ALWAYS → const int
0x0207
GL_ANY_SAMPLES_PASSED → const int
0x8C2F
GL_ANY_SAMPLES_PASSED_CONSERVATIVE → const int
0x8D6A
GL_ARRAY_BUFFER → const int
0x8892
GL_ARRAY_BUFFER_BINDING → const int
0x8894
GL_ATTACHED_SHADERS → const int
0x8B85
GL_BACK → const int
0x0405
GL_BLEND → const int
0x0BE2
GL_BLEND_COLOR → const int
0x8005
GL_BLEND_DST_ALPHA → const int
0x80CA
GL_BLEND_DST_RGB → const int
0x80C8
GL_BLEND_EQUATION → const int
0x8009
GL_BLEND_EQUATION_ALPHA → const int
0x883D
GL_BLEND_EQUATION_RGB → const int
0x8009
GL_BLEND_SRC_ALPHA → const int
0x80CB
GL_BLEND_SRC_RGB → const int
0x80C9
GL_BLUE_BITS → const int
0x0D54
GL_BOOL → const int
0x8B56
GL_BOOL_VEC2 → const int
0x8B57
GL_BOOL_VEC3 → const int
0x8B58
GL_BOOL_VEC4 → const int
0x8B59
GL_BROWSER_DEFAULT_WEBGL → const int
0x9244
GL_BUFFER_SIZE → const int
0x8764
GL_BUFFER_USAGE → const int
0x8765
GL_BYTE → const int
0x1400
GL_CCW → const int
0x0901
GL_CLAMP_TO_EDGE → const int
0x812F
GL_CLEAR_ALL → const int
GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT
GL_COLOR → const int
0x1800
GL_COLOR_ATTACHMENT0 → const int
0x8CE0
GL_COLOR_ATTACHMENT1 → const int
0x8CE1
GL_COLOR_ATTACHMENT10 → const int
0x8CEA
GL_COLOR_ATTACHMENT11 → const int
0x8CEB
GL_COLOR_ATTACHMENT12 → const int
0x8CEC
GL_COLOR_ATTACHMENT13 → const int
0x8CED
GL_COLOR_ATTACHMENT14 → const int
0x8CEE
GL_COLOR_ATTACHMENT15 → const int
0x8CEF
GL_COLOR_ATTACHMENT2 → const int
0x8CE2
GL_COLOR_ATTACHMENT3 → const int
0x8CE3
GL_COLOR_ATTACHMENT4 → const int
0x8CE4
GL_COLOR_ATTACHMENT5 → const int
0x8CE5
GL_COLOR_ATTACHMENT6 → const int
0x8CE6
GL_COLOR_ATTACHMENT7 → const int
0x8CE7
GL_COLOR_ATTACHMENT8 → const int
0x8CE8
GL_COLOR_ATTACHMENT9 → const int
0x8CE9
GL_COLOR_BUFFER_BIT → const int
0x00004000
GL_COLOR_CLEAR_VALUE → const int
0x0C22
GL_COLOR_WRITEMASK → const int
0x0C23
GL_COMPARE_REF_TO_TEXTURE → const int
0x884E
GL_COMPILE_STATUS → const int
0x8B81
GL_CONDITION_SATISFIED → const int
0x911C
GL_CONSTANT_ALPHA → const int
0x8003
GL_CONSTANT_COLOR → const int
0x8001
GL_CONTEXT_LOST_WEBGL → const int
0x9242
GL_COPY_READ_BUFFER → const int
0x8F36
GL_COPY_READ_BUFFER_BINDING → const int
0x8F36
GL_COPY_WRITE_BUFFER → const int
0x8F37
GL_COPY_WRITE_BUFFER_BINDING → const int
0x8F37
GL_CULL_FACE → const int
0x0B44
GL_CULL_FACE_MODE → const int
0x0B45
GL_CURRENT_PROGRAM → const int
0x8B8D
GL_CURRENT_QUERY → const int
0x8865
GL_CURRENT_VERTEX_ATTRIB → const int
0x8626
GL_CW → const int
0x0900
GL_DECR → const int
0x1E03
GL_DECR_WRAP → const int
0x8508
GL_DELETE_STATUS → const int
0x8B80
GL_DEPTH → const int
0x1801
GL_DEPTH24_STENCIL8 → const int
0x88F0
GL_DEPTH32F_STENCIL8 → const int
0x8CAD
GL_DEPTH_ATTACHMENT → const int
0x8D00
GL_DEPTH_BITS → const int
0x0D56
GL_DEPTH_BUFFER_BIT → const int
0x00000100
GL_DEPTH_CLEAR_VALUE → const int
0x0B73
GL_DEPTH_COMPONENT → const int
0x1902
GL_DEPTH_COMPONENT16 → const int
0x81A5
GL_DEPTH_COMPONENT24 → const int
0x81A6
GL_DEPTH_COMPONENT32F → const int
0x8CAC
GL_DEPTH_FUNC → const int
0x0B74
GL_DEPTH_RANGE → const int
0x0B70
GL_DEPTH_STENCIL → const int
0x84F9
GL_DEPTH_STENCIL_ATTACHMENT → const int
0x821A
GL_DEPTH_TEST → const int
0x0B71
GL_DEPTH_WRITEMASK → const int
0x0B72
GL_DITHER → const int
0x0BD0
GL_DRAW_BUFFER0 → const int
0x8825
GL_DRAW_BUFFER1 → const int
0x8826
GL_DRAW_BUFFER10 → const int
0x882F
GL_DRAW_BUFFER11 → const int
0x8830
GL_DRAW_BUFFER12 → const int
0x8831
GL_DRAW_BUFFER13 → const int
0x8832
GL_DRAW_BUFFER14 → const int
0x8833
GL_DRAW_BUFFER15 → const int
0x8834
GL_DRAW_BUFFER2 → const int
0x8827
GL_DRAW_BUFFER3 → const int
0x8828
GL_DRAW_BUFFER4 → const int
0x8829
GL_DRAW_BUFFER5 → const int
0x882A
GL_DRAW_BUFFER6 → const int
0x882B
GL_DRAW_BUFFER7 → const int
0x882C
GL_DRAW_BUFFER8 → const int
0x882D
GL_DRAW_BUFFER9 → const int
0x882E
GL_DRAW_FRAMEBUFFER → const int
0x8CA9
GL_DRAW_FRAMEBUFFER_BINDING → const int
0x8CA6
GL_DST_ALPHA → const int
0x0304
GL_DST_COLOR → const int
0x0306
GL_DYNAMIC_COPY → const int
0x88EA
GL_DYNAMIC_DRAW → const int
0x88E8
GL_DYNAMIC_READ → const int
0x88E9
GL_ELEMENT_ARRAY_BUFFER → const int
0x8893
GL_ELEMENT_ARRAY_BUFFER_BINDING → const int
0x8895
GL_EQUAL → const int
0x0202
GL_FASTEST → const int
0x1101
GL_FLOAT → const int
0x1406
GL_FLOAT_32_UNSIGNED_INT_24_8_REV → const int
0x8DAD
GL_FLOAT_MAT2 → const int
0x8B5A
GL_FLOAT_MAT2x3 → const int
0x8B65
GL_FLOAT_MAT2x4 → const int
0x8B66
GL_FLOAT_MAT3 → const int
0x8B5B
GL_FLOAT_MAT3x2 → const int
0x8B67
GL_FLOAT_MAT3x4 → const int
0x8B68
GL_FLOAT_MAT4 → const int
0x8B5C
GL_FLOAT_MAT4x2 → const int
0x8B69
GL_FLOAT_MAT4x3 → const int
0x8B6A
GL_FLOAT_VEC2 → const int
0x8B50
GL_FLOAT_VEC3 → const int
0x8B51
GL_FLOAT_VEC4 → const int
0x8B52
GL_FRAGMENT_SHADER → const int
0x8B30
GL_FRAGMENT_SHADER_DERIVATIVE_HINT → const int
0x8B8B
GL_FRAMEBUFFER → const int
0x8D40
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE → const int
0x8215
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE → const int
0x8214
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING → const int
0x8210
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE → const int
0x8211
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE → const int
0x8216
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE → const int
0x8213
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME → const int
0x8CD1
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE → const int
0x8CD0
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE → const int
0x8212
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE → const int
0x8217
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE → const int
0x8CD3
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER → const int
0x8CD4
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL → const int
0x8CD2
GL_FRAMEBUFFER_BINDING → const int
0x8CA6
GL_FRAMEBUFFER_COMPLETE → const int
0x8CD5
GL_FRAMEBUFFER_DEFAULT → const int
0x8218
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT → const int
0x8CD6
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS → const int
0x8CD9
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT → const int
0x8CD7
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE → const int
0x8D56
GL_FRAMEBUFFER_UNSUPPORTED → const int
0x8CDD
GL_FRONT → const int
0x0404
GL_FRONT_AND_BACK → const int
0x0408
GL_FRONT_FACE → const int
0x0B46
GL_FUNC_ADD → const int
0x8006
GL_FUNC_REVERSE_SUBTRACT → const int
0x800B
GL_FUNC_SUBTRACT → const int
0x800A
GL_GEQUAL → const int
0x0206
GL_GREATER → const int
0x0204
GL_GREEN_BITS → const int
0x0D53
GL_HALF_FLOAT → const int
0x140B
GL_HIGH_FLOAT → const int
0x8DF2
GL_HIGH_INT → const int
0x8DF5
GL_IMPLEMENTATION_COLOR_READ_FORMAT → const int
0x8B9B
GL_IMPLEMENTATION_COLOR_READ_TYPE → const int
0x8B9A
GL_INCR → const int
0x1E02
GL_INCR_WRAP → const int
0x8507
GL_INT → const int
0x1404
GL_INT_2_10_10_10_REV → const int
0x8D9F
GL_INT_SAMPLER_2D → const int
0x8DCA
GL_INT_SAMPLER_2D_ARRAY → const int
0x8DCF
GL_INT_SAMPLER_3D → const int
0x8DCB
GL_INT_SAMPLER_CUBE → const int
0x8DCC
GL_INT_VEC2 → const int
0x8B53
GL_INT_VEC3 → const int
0x8B54
GL_INT_VEC4 → const int
0x8B55
GL_INTERLEAVED_ATTRIBS → const int
0x8C8C
GL_INVALID_ENUM → const int
0x0500
GL_INVALID_FRAMEBUFFER_OPERATION → const int
0x0506
GL_INVALID_INDEX → const int
0xFFFFFFFF
GL_INVALID_OPERATION → const int
0x0502
GL_INVALID_VALUE → const int
0x0501
GL_INVERT → const int
0x150A
GL_KEEP → const int
0x1E00
GL_LEQUAL → const int
0x0203
GL_LESS → const int
0x0201
GL_LINE_LOOP → const int
0x0002
GL_LINE_STRIP → const int
0x0003
GL_LINE_WIDTH → const int
0x0B21
GL_LINEAR → const int
0x2601
GL_LINEAR_MIPMAP_LINEAR → const int
0x2703
GL_LINEAR_MIPMAP_NEAREST → const int
0x2701
GL_LINES → const int
0x0001
GL_LINK_STATUS → const int
0x8B82
GL_LOW_FLOAT → const int
0x8DF0
GL_LOW_INT → const int
0x8DF3
GL_LUMINANCE → const int
0x1909
GL_LUMINANCE_ALPHA → const int
0x190A
GL_MAX → const int
0x8008
GL_MAX_3D_TEXTURE_SIZE → const int
0x8073
GL_MAX_ARRAY_TEXTURE_LAYERS → const int
0x88FF
GL_MAX_COLOR_ATTACHMENTS → const int
0x8CDF
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS → const int
0x8A33
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS → const int
0x8B4D
GL_MAX_COMBINED_UNIFORM_BLOCKS → const int
0x8A2E
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS → const int
0x8A31
GL_MAX_CUBE_MAP_TEXTURE_SIZE → const int
0x851C
GL_MAX_DRAW_BUFFERS → const int
0x8824
GL_MAX_ELEMENT_INDEX → const int
0x8D6B
GL_MAX_ELEMENTS_INDICES → const int
0x80E9
GL_MAX_ELEMENTS_VERTICES → const int
0x80E8
GL_MAX_FRAGMENT_INPUT_COMPONENTS → const int
0x9125
GL_MAX_FRAGMENT_UNIFORM_BLOCKS → const int
0x8A2D
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS → const int
0x8B49
GL_MAX_FRAGMENT_UNIFORM_VECTORS → const int
0x8DFD
GL_MAX_PROGRAM_TEXEL_OFFSET → const int
0x8905
GL_MAX_RENDERBUFFER_SIZE → const int
0x84E8
GL_MAX_SAMPLES → const int
0x8D57
GL_MAX_SERVER_WAIT_TIMEOUT → const int
0x9111
GL_MAX_TEXTURE_IMAGE_UNITS → const int
0x8872
GL_MAX_TEXTURE_LOD_BIAS → const int
0x84FD
GL_MAX_TEXTURE_SIZE → const int
0x0D33
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS → const int
0x8C8A
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS → const int
0x8C8B
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS → const int
0x8C80
GL_MAX_UNIFORM_BLOCK_SIZE → const int
0x8A30
GL_MAX_UNIFORM_BUFFER_BINDINGS → const int
0x8A2F
GL_MAX_VARYING_COMPONENTS → const int
0x8B4B
GL_MAX_VARYING_VECTORS → const int
0x8DFC
GL_MAX_VERTEX_ATTRIBS → const int
0x8869
GL_MAX_VERTEX_OUTPUT_COMPONENTS → const int
0x9122
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS → const int
0x8B4C
GL_MAX_VERTEX_UNIFORM_BLOCKS → const int
0x8A2B
GL_MAX_VERTEX_UNIFORM_COMPONENTS → const int
0x8B4A
GL_MAX_VERTEX_UNIFORM_VECTORS → const int
0x8DFB
GL_MAX_VIEWPORT_DIMS → const int
0x0D3A
GL_MEDIUM_FLOAT → const int
0x8DF1
GL_MEDIUM_INT → const int
0x8DF4
GL_MIN → const int
0x8007
GL_MIN_PROGRAM_TEXEL_OFFSET → const int
0x8904
GL_MIRRORED_REPEAT → const int
0x8370
GL_NEAREST → const int
0x2600
GL_NEAREST_MIPMAP_LINEAR → const int
0x2702
GL_NEAREST_MIPMAP_NEAREST → const int
0x2700
GL_NEVER → const int
0x0200
GL_NICEST → const int
0x1102
GL_NO_ERROR → const int
0
GL_NONE → const int
0
GL_NOTEQUAL → const int
0x0205
GL_OBJECT_TYPE → const int
0x9112
GL_ONE → const int
1
GL_ONE_MINUS_CONSTANT_ALPHA → const int
0x8004
GL_ONE_MINUS_CONSTANT_COLOR → const int
0x8002
GL_ONE_MINUS_DST_ALPHA → const int
0x0305
GL_ONE_MINUS_DST_COLOR → const int
0x0307
GL_ONE_MINUS_SRC_ALPHA → const int
0x0303
GL_ONE_MINUS_SRC_COLOR → const int
0x0301
GL_OUT_OF_MEMORY → const int
0x0505
GL_PACK_ALIGNMENT → const int
0x0D05
GL_PACK_ROW_LENGTH → const int
0x0D02
GL_PACK_SKIP_PIXELS → const int
0x0D04
GL_PACK_SKIP_ROWS → const int
0x0D03
GL_PIXEL_PACK_BUFFER → const int
0x88EB
GL_PIXEL_PACK_BUFFER_BINDING → const int
0x88ED
GL_PIXEL_UNPACK_BUFFER → const int
0x88EC
GL_PIXEL_UNPACK_BUFFER_BINDING → const int
0x88EF
GL_POINTS → const int
0x0000
GL_POLYGON_OFFSET_FACTOR → const int
0x8038
GL_POLYGON_OFFSET_FILL → const int
0x8037
GL_POLYGON_OFFSET_UNITS → const int
0x2A00
GL_QUERY_RESULT → const int
0x8866
GL_QUERY_RESULT_AVAILABLE → const int
0x8867
GL_R11F_G11F_B10F → const int
0x8C3A
GL_R16F → const int
0x822D
GL_R16I → const int
0x8233
GL_R16UI → const int
0x8234
GL_R32F → const int
0x822E
GL_R32I → const int
0x8235
GL_R32UI → const int
0x8236
GL_R8 → const int
0x8229
GL_R8_SNORM → const int
0x8F94
GL_R8I → const int
0x8231
GL_R8UI → const int
0x8232
GL_RASTERIZER_DISCARD → const int
0x8C89
GL_READ_BUFFER → const int
0x0C02
GL_READ_FRAMEBUFFER → const int
0x8CA8
GL_READ_FRAMEBUFFER_BINDING → const int
0x8CAA
GL_RED → const int
0x1903
GL_RED_BITS → const int
0x0D52
GL_RED_INTEGER → const int
0x8D94
GL_RENDERBUFFER → const int
0x8D41
GL_RENDERBUFFER_ALPHA_SIZE → const int
0x8D53
GL_RENDERBUFFER_BINDING → const int
0x8CA7
GL_RENDERBUFFER_BLUE_SIZE → const int
0x8D52
GL_RENDERBUFFER_DEPTH_SIZE → const int
0x8D54
GL_RENDERBUFFER_GREEN_SIZE → const int
0x8D51
GL_RENDERBUFFER_HEIGHT → const int
0x8D43
GL_RENDERBUFFER_INTERNAL_FORMAT → const int
0x8D44
GL_RENDERBUFFER_RED_SIZE → const int
0x8D50
GL_RENDERBUFFER_SAMPLES → const int
0x8CAB
GL_RENDERBUFFER_STENCIL_SIZE → const int
0x8D55
GL_RENDERBUFFER_WIDTH → const int
0x8D42
GL_RENDERER → const int
0x1F01
GL_REPEAT → const int
0x2901
GL_REPLACE → const int
0x1E01
GL_RG → const int
0x8227
GL_RG16F → const int
0x822F
GL_RG16I → const int
0x8239
GL_RG16UI → const int
0x823A
GL_RG32F → const int
0x8230
GL_RG32I → const int
0x823B
GL_RG32UI → const int
0x823C
GL_RG8 → const int
0x822B
GL_RG8_SNORM → const int
0x8F95
GL_RG8I → const int
0x8237
GL_RG8UI → const int
0x8238
GL_RG_INTEGER → const int
0x8228
GL_RGB → const int
0x1907
GL_RGB10_A2 → const int
0x8059
GL_RGB10_A2UI → const int
0x906F
GL_RGB16F → const int
0x881B
GL_RGB16I → const int
0x8D89
GL_RGB16UI → const int
0x8D77
GL_RGB32F → const int
0x8815
GL_RGB32I → const int
0x8D83
GL_RGB32UI → const int
0x8D71
GL_RGB565 → const int
0x8D62
GL_RGB5_A1 → const int
0x8057
GL_RGB8 → const int
0x8051
GL_RGB8_SNORM → const int
0x8F96
GL_RGB8I → const int
0x8D8F
GL_RGB8UI → const int
0x8D7D
GL_RGB9_E5 → const int
0x8C3D
GL_RGB_INTEGER → const int
0x8D98
GL_RGBA → const int
0x1908
GL_RGBA16F → const int
0x881A
GL_RGBA16I → const int
0x8D88
GL_RGBA16UI → const int
0x8D76
GL_RGBA32F → const int
0x8814
GL_RGBA32I → const int
0x8D82
GL_RGBA32UI → const int
0x8D70
GL_RGBA4 → const int
0x8056
GL_RGBA8 → const int
0x8058
GL_RGBA8_SNORM → const int
0x8F97
GL_RGBA8I → const int
0x8D8E
GL_RGBA8UI → const int
0x8D7C
GL_RGBA_INTEGER → const int
0x8D99
GL_SAMPLE_ALPHA_TO_COVERAGE → const int
0x809E
GL_SAMPLE_BUFFERS → const int
0x80A8
GL_SAMPLE_COVERAGE → const int
0x80A0
GL_SAMPLE_COVERAGE_INVERT → const int
0x80AB
GL_SAMPLE_COVERAGE_VALUE → const int
0x80AA
GL_SAMPLER_2D → const int
0x8B5E
GL_SAMPLER_2D_ARRAY → const int
0x8DC1
GL_SAMPLER_2D_ARRAY_SHADOW → const int
0x8DC4
GL_SAMPLER_2D_SHADOW → const int
0x8B62
GL_SAMPLER_3D → const int
0x8B5F
GL_SAMPLER_BINDING → const int
0x8919
GL_SAMPLER_CUBE → const int
0x8B60
GL_SAMPLER_CUBE_SHADOW → const int
0x8DC5
GL_SAMPLES → const int
0x80A9
GL_SCISSOR_BOX → const int
0x0C10
GL_SCISSOR_TEST → const int
0x0C11
GL_SEPARATE_ATTRIBS → const int
0x8C8D
GL_SHADER_TYPE → const int
0x8B4F
GL_SHADING_LANGUAGE_VERSION → const int
0x8B8C
GL_SHORT → const int
0x1402
GL_SIGNALED → const int
0x9119
GL_SIGNED_NORMALIZED → const int
0x8F9C
GL_SRC_ALPHA → const int
0x0302
GL_SRC_ALPHA_SATURATE → const int
0x0308
GL_SRC_COLOR → const int
0x0300
GL_SRGB → const int
0x8C40
GL_SRGB8 → const int
0x8C41
GL_SRGB8_ALPHA8 → const int
0x8C43
GL_STATIC_COPY → const int
0x88E6
GL_STATIC_DRAW → const int
0x88E4
GL_STATIC_READ → const int
0x88E5
GL_STENCIL → const int
0x1802
GL_STENCIL_ATTACHMENT → const int
0x8D20
GL_STENCIL_BACK_FAIL → const int
0x8801
GL_STENCIL_BACK_FUNC → const int
0x8800
GL_STENCIL_BACK_PASS_DEPTH_FAIL → const int
0x8802
GL_STENCIL_BACK_PASS_DEPTH_PASS → const int
0x8803
GL_STENCIL_BACK_REF → const int
0x8CA3
GL_STENCIL_BACK_VALUE_MASK → const int
0x8CA4
GL_STENCIL_BACK_WRITEMASK → const int
0x8CA5
GL_STENCIL_BITS → const int
0x0D57
GL_STENCIL_BUFFER_BIT → const int
0x00000400
GL_STENCIL_CLEAR_VALUE → const int
0x0B91
GL_STENCIL_FAIL → const int
0x0B94
GL_STENCIL_FUNC → const int
0x0B92
GL_STENCIL_INDEX → const int
0x1901
GL_STENCIL_INDEX8 → const int
0x8D48
GL_STENCIL_PASS_DEPTH_FAIL → const int
0x0B95
GL_STENCIL_PASS_DEPTH_PASS → const int
0x0B96
GL_STENCIL_REF → const int
0x0B97
GL_STENCIL_TEST → const int
0x0B90
GL_STENCIL_VALUE_MASK → const int
0x0B93
GL_STENCIL_WRITEMASK → const int
0x0B98
GL_STREAM_COPY → const int
0x88E2
GL_STREAM_DRAW → const int
0x88E0
GL_STREAM_READ → const int
0x88E1
GL_SUBPIXEL_BITS → const int
0x0D50
GL_SYNC_CONDITION → const int
0x9113
GL_SYNC_FENCE → const int
0x9116
GL_SYNC_FLAGS → const int
0x9115
GL_SYNC_FLUSH_COMMANDS_BIT → const int
0x00000001
GL_SYNC_GPU_COMMANDS_COMPLETE → const int
0x9117
GL_SYNC_STATUS → const int
0x9114
GL_TEXTURE → const int
0x1702
GL_TEXTURE0 → const int
0x84C0
GL_TEXTURE_2D → const int
0x0DE1
GL_TEXTURE_2D_ARRAY → const int
0x8C1A
GL_TEXTURE_3D → const int
0x806F
GL_TEXTURE_BASE_LEVEL → const int
0x813C
GL_TEXTURE_BINDING_2D → const int
0x8069
GL_TEXTURE_BINDING_2D_ARRAY → const int
0x8C1D
GL_TEXTURE_BINDING_3D → const int
0x806A
GL_TEXTURE_BINDING_CUBE_MAP → const int
0x8514
GL_TEXTURE_COMPARE_FUNC → const int
0x884D
GL_TEXTURE_COMPARE_MODE → const int
0x884C
GL_TEXTURE_CUBE_MAP → const int
0x8513
GL_TEXTURE_CUBE_MAP_NEGATIVE_X → const int
0x8516
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y → const int
0x8518
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z → const int
0x851A
GL_TEXTURE_CUBE_MAP_POSITIVE_X → const int
0x8515
GL_TEXTURE_CUBE_MAP_POSITIVE_Y → const int
0x8517
GL_TEXTURE_CUBE_MAP_POSITIVE_Z → const int
0x8519
GL_TEXTURE_IMMUTABLE_FORMAT → const int
0x912F
GL_TEXTURE_IMMUTABLE_LEVELS → const int
0x82DF
GL_TEXTURE_MAG_FILTER → const int
0x2800
GL_TEXTURE_MAX_ANISOTROPY_EXT → const int
0x84FE
GL_TEXTURE_MAX_LEVEL → const int
0x813D
GL_TEXTURE_MAX_LOD → const int
0x813B
GL_TEXTURE_MIN_FILTER → const int
0x2801
GL_TEXTURE_MIN_LOD → const int
0x813A
GL_TEXTURE_WRAP_R → const int
0x8072
GL_TEXTURE_WRAP_S → const int
0x2802
GL_TEXTURE_WRAP_T → const int
0x2803
GL_TIMEOUT_EXPIRED → const int
0x911B
GL_TRANSFORM_FEEDBACK → const int
0x8E22
GL_TRANSFORM_FEEDBACK_ACTIVE → const int
0x8E24
GL_TRANSFORM_FEEDBACK_BINDING → const int
0x8E25
GL_TRANSFORM_FEEDBACK_BUFFER → const int
0x8C8E
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING → const int
0x8C8F
GL_TRANSFORM_FEEDBACK_BUFFER_MODE → const int
0x8C7F
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE → const int
0x8C85
GL_TRANSFORM_FEEDBACK_BUFFER_START → const int
0x8C84
GL_TRANSFORM_FEEDBACK_PAUSED → const int
0x8E23
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN → const int
0x8C88
GL_TRANSFORM_FEEDBACK_VARYINGS → const int
0x8C83
GL_TRIANGLE_FAN → const int
0x0006
GL_TRIANGLE_STRIP → const int
0x0005
GL_TRIANGLES → const int
0x0004
GL_UNIFORM_ARRAY_STRIDE → const int
0x8A3C
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES → const int
0x8A43
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS → const int
0x8A42
GL_UNIFORM_BLOCK_BINDING → const int
0x8A3F
GL_UNIFORM_BLOCK_DATA_SIZE → const int
0x8A40
GL_UNIFORM_BLOCK_INDEX → const int
0x8A3A
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER → const int
0x8A46
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER → const int
0x8A44
GL_UNIFORM_BUFFER → const int
0x8A11
GL_UNIFORM_BUFFER_BINDING → const int
0x8A28
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT → const int
0x8A34
GL_UNIFORM_BUFFER_SIZE → const int
0x8A2A
GL_UNIFORM_BUFFER_START → const int
0x8A29
GL_UNIFORM_IS_ROW_MAJOR → const int
0x8A3E
GL_UNIFORM_MATRIX_STRIDE → const int
0x8A3D
GL_UNIFORM_OFFSET → const int
0x8A3B
GL_UNIFORM_SIZE → const int
0x8A38
GL_UNIFORM_TYPE → const int
0x8A37
GL_UNMASKED_RENDERER_WEBGL → const int
0x9246
GL_UNMASKED_VENDOR_WEBGL → const int
0x9245
GL_UNPACK_ALIGNMENT → const int
0x0CF5
GL_UNPACK_COLORSPACE_CONVERSION_WEBGL → const int
0x9243
GL_UNPACK_FLIP_Y_WEBGL → const int
0x9240
GL_UNPACK_IMAGE_HEIGHT → const int
0x806E
GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL → const int
0x9241
GL_UNPACK_ROW_LENGTH → const int
0x0CF2
GL_UNPACK_SKIP_IMAGES → const int
0x806D
GL_UNPACK_SKIP_PIXELS → const int
0x0CF4
GL_UNPACK_SKIP_ROWS → const int
0x0CF3
GL_UNSIGNALED → const int
0x9118
GL_UNSIGNED_BYTE → const int
0x1401
GL_UNSIGNED_INT → const int
0x1405
GL_UNSIGNED_INT_10F_11F_11F_REV → const int
0x8C3B
GL_UNSIGNED_INT_24_8 → const int
0x84FA
GL_UNSIGNED_INT_2_10_10_10_REV → const int
0x8368
GL_UNSIGNED_INT_5_9_9_9_REV → const int
0x8C3E
GL_UNSIGNED_INT_SAMPLER_2D → const int
0x8DD2
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY → const int
0x8DD7
GL_UNSIGNED_INT_SAMPLER_3D → const int
0x8DD3
GL_UNSIGNED_INT_SAMPLER_CUBE → const int
0x8DD4
GL_UNSIGNED_INT_VEC2 → const int
0x8DC6
GL_UNSIGNED_INT_VEC3 → const int
0x8DC7
GL_UNSIGNED_INT_VEC4 → const int
0x8DC8
GL_UNSIGNED_NORMALIZED → const int
0x8C17
GL_UNSIGNED_SHORT → const int
0x1403
GL_UNSIGNED_SHORT_4_4_4_4 → const int
0x8033
GL_UNSIGNED_SHORT_5_5_5_1 → const int
0x8034
GL_UNSIGNED_SHORT_5_6_5 → const int
0x8363
GL_VALIDATE_STATUS → const int
0x8B83
GL_VENDOR → const int
0x1F00
GL_VERSION → const int
0x1F02
GL_VERTEX_ARRAY_BINDING → const int
0x85B5
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING → const int
0x889F
GL_VERTEX_ATTRIB_ARRAY_DIVISOR → const int
0x88FE
GL_VERTEX_ATTRIB_ARRAY_ENABLED → const int
0x8622
GL_VERTEX_ATTRIB_ARRAY_INTEGER → const int
0x88FD
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED → const int
0x886A
GL_VERTEX_ATTRIB_ARRAY_POINTER → const int
0x8645
GL_VERTEX_ATTRIB_ARRAY_SIZE → const int
0x8623
GL_VERTEX_ATTRIB_ARRAY_STRIDE → const int
0x8624
GL_VERTEX_ATTRIB_ARRAY_TYPE → const int
0x8625
GL_VERTEX_SHADER → const int
0x8B31
GL_VIEWPORT → const int
0x0BA2
GL_WAIT_FAILED → const int
0x911D
GL_ZERO → const int
0
