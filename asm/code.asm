;---r3 compiler code.asm; r3/plain.r3;--------------------------; :w44  |1080|l     .  | calls:1 niv:0 len:174 (  --  )w44:;---------OPT; A79E22:"KERNEL32.DLL"	; [ ] ; A79E26:LOADLIB	; [ 2F0 ] ; A79E2A:DUP	; [ 2F0 ] ; A79E2E:"AllocConsole"	; [ 2F0 2F0 ] ; A79E32:GETPROC	; [ 2F0 2F0 30B ] ; A79E36:'w0	; [ 2F0 2F0 ] ; A79E3A:!	; [ 2F0 2F0 0 ] ; A79E3E:DUP	; [ 2F0 ] ; A79E42:"ExitProcess"	; [ 2F0 2F0 ] ; A79E46:GETPROC	; [ 2F0 2F0 32C ] ; A79E4A:'w1	; [ 2F0 2F0 ] ; A79E4E:!	; [ 2F0 2F0 1 ] ; A79E52:DUP	; [ 2F0 ] ; A79E56:"GetStdHandle"	; [ 2F0 2F0 ] ; A79E5A:GETPROC	; [ 2F0 2F0 34C ] ; A79E5E:'w2	; [ 2F0 2F0 ] ; A79E62:!	; [ 2F0 2F0 2 ] ; A79E66:DUP	; [ 2F0 ] ; A79E6A:"ReadFile"	; [ 2F0 2F0 ] ; A79E6E:GETPROC	; [ 2F0 2F0 36D ] ; A79E72:'w3	; [ 2F0 2F0 ] ; A79E76:!	; [ 2F0 2F0 3 ] ; A79E7A:DUP	; [ 2F0 ] ; A79E7E:"WriteFile"	; [ 2F0 2F0 ] ; A79E82:GETPROC	; [ 2F0 2F0 38A ] ; A79E86:'w4	; [ 2F0 2F0 ] ; A79E8A:!	; [ 2F0 2F0 4 ] ; A79E8E:DUP	; [ 2F0 ] ; A79E92:"GetConsoleMode"	; [ 2F0 2F0 ] ; A79E96:GETPROC	; [ 2F0 2F0 3A8 ] ; A79E9A:'w5	; [ 2F0 2F0 ] ; A79E9E:!	; [ 2F0 2F0 5 ] ; A79EA2:DUP	; [ 2F0 ] ; A79EA6:"SetConsoleMode"	; [ 2F0 2F0 ] ; A79EAA:GETPROC	; [ 2F0 2F0 3CB ] ; A79EAE:'w6	; [ 2F0 2F0 ] ; A79EB2:!	; [ 2F0 2F0 6 ] ; A79EB6:DUP	; [ 2F0 ] ; A79EBA:"PeekConsoleInputW"	; [ 2F0 2F0 ] ; A79EBE:GETPROC	; [ 2F0 2F0 3EE ] ; A79EC2:'w7	; [ 2F0 2F0 ] ; A79EC6:!	; [ 2F0 2F0 7 ] ; A79ECA:DUP	; [ 2F0 ] ; A79ECE:"ReadConsoleInputW"	; [ 2F0 2F0 ] ; A79ED2:GETPROC	; [ 2F0 2F0 414 ] ; A79ED6:'w8	; [ 2F0 2F0 ] ; A79EDA:!	; [ 2F0 2F0 8 ] ; A79EDE:DUP	; [ 2F0 ] ; A79EE2:"WriteConsole"	; [ 2F0 2F0 ] ; A79EE6:GETPROC	; [ 2F0 2F0 43A ] ; A79EEA:'w9	; [ 2F0 2F0 ] ; A79EEE:!	; [ 2F0 2F0 9 ] ; A79EF2:DUP	; [ 2F0 ] ; A79EF6:"FlushConsoleInputBuffer"	; [ 2F0 2F0 ] ; A79EFA:GETPROC	; [ 2F0 2F0 45B ] ; A79EFE:'wA	; [ 2F0 2F0 ] ; A79F02:!	; [ 2F0 2F0 A ] ; A79F06:DUP	; [ 2F0 ] ; A79F0A:"Sleep"	; [ 2F0 2F0 ] ; A79F0E:GETPROC	; [ 2F0 2F0 487 ] ; A79F12:'wB	; [ 2F0 2F0 ] ; A79F16:!	; [ 2F0 2F0 B ] ; A79F1A:DUP	; [ 2F0 ] ; A79F1E:"WaitForSingleObject"	; [ 2F0 2F0 ] ; A79F22:GETPROC	; [ 2F0 2F0 4A1 ] ; A79F26:'wC	; [ 2F0 2F0 ] ; A79F2A:!	; [ 2F0 2F0 C ] ; A79F2E:DUP	; [ 2F0 ] ; A79F32:"GetLastError"	; [ 2F0 2F0 ] ; A79F36:GETPROC	; [ 2F0 2F0 4C9 ] ; A79F3A:'wD	; [ 2F0 2F0 ] ; A79F3E:!	; [ 2F0 2F0 D ] ; A79F42:DUP	; [ 2F0 ] ; A79F46:"CreateFileA"	; [ 2F0 2F0 ] ; A79F4A:GETPROC	; [ 2F0 2F0 4EA ] ; A79F4E:'wE	; [ 2F0 2F0 ] ; A79F52:!	; [ 2F0 2F0 E ] ; A79F56:DUP	; [ 2F0 ] ; A79F5A:"CloseHandle"	; [ 2F0 2F0 ] ; A79F5E:GETPROC	; [ 2F0 2F0 50A ] ; A79F62:'wF	; [ 2F0 2F0 ] ; A79F66:!	; [ 2F0 2F0 F ] ; A79F6A:DUP	; [ 2F0 ] ; A79F6E:"FlushFileBuffers"	; [ 2F0 2F0 ] ; A79F72:GETPROC	; [ 2F0 2F0 52A ] ; A79F76:'w10	; [ 2F0 2F0 ] ; A79F7A:!	; [ 2F0 2F0 10 ] ; A79F7E:DUP	; [ 2F0 ] ; A79F82:"DeleteFileA"	; [ 2F0 2F0 ] ; A79F86:GETPROC	; [ 2F0 2F0 550 ] ; A79F8A:'w11	; [ 2F0 2F0 ] ; A79F8E:!	; [ 2F0 2F0 11 ] ; A79F92:DUP	; [ 2F0 ] ; A79F96:"MoveFileA"	; [ 2F0 2F0 ] ; A79F9A:GETPROC	; [ 2F0 2F0 571 ] ; A79F9E:'w12	; [ 2F0 2F0 ] ; A79FA2:!	; [ 2F0 2F0 12 ] ; A79FA6:DUP	; [ 2F0 ] ; A79FAA:"SetFilePointer"	; [ 2F0 2F0 ] ; A79FAE:GETPROC	; [ 2F0 2F0 590 ] ; A79FB2:'w13	; [ 2F0 2F0 ] ; A79FB6:!	; [ 2F0 2F0 13 ] ; A79FBA:DUP	; [ 2F0 ] ; A79FBE:"SetEndOfFile"	; [ 2F0 2F0 ] ; A79FC2:GETPROC	; [ 2F0 2F0 5B4 ] ; A79FC6:'w14	; [ 2F0 2F0 ] ; A79FCA:!	; [ 2F0 2F0 14 ] ; A79FCE:DUP	; [ 2F0 ] ; A79FD2:"GetFileSize"	; [ 2F0 2F0 ] ; A79FD6:GETPROC	; [ 2F0 2F0 5D6 ] ; A79FDA:'w15	; [ 2F0 2F0 ] ; A79FDE:!	; [ 2F0 2F0 15 ] ; A79FE2:DUP	; [ 2F0 ] ; A79FE6:"GetProcessHeap"	; [ 2F0 2F0 ] ; A79FEA:GETPROC	; [ 2F0 2F0 5F7 ] ; A79FEE:'w16	; [ 2F0 2F0 ] ; A79FF2:!	; [ 2F0 2F0 16 ] ; A79FF6:DUP	; [ 2F0 ] ; A79FFA:"HeapAlloc"	; [ 2F0 2F0 ] ; A79FFE:GETPROC	; [ 2F0 2F0 61B ] ; A7A002:'w17	; [ 2F0 2F0 ] ; A7A006:!	; [ 2F0 2F0 17 ] ; A7A00A:DUP	; [ 2F0 ] ; A7A00E:"HeapFree"	; [ 2F0 2F0 ] ; A7A012:GETPROC	; [ 2F0 2F0 63A ] ; A7A016:'w18	; [ 2F0 2F0 ] ; A7A01A:!	; [ 2F0 2F0 18 ] ; A7A01E:DUP	; [ 2F0 ] ; A7A022:"HeapReAlloc"	; [ 2F0 2F0 ] ; A7A026:GETPROC	; [ 2F0 2F0 658 ] ; A7A02A:'w19	; [ 2F0 2F0 ] ; A7A02E:!	; [ 2F0 2F0 19 ] ; A7A032:DUP	; [ 2F0 ] ; A7A036:"GetLocalTime"	; [ 2F0 2F0 ] ; A7A03A:GETPROC	; [ 2F0 2F0 679 ] ; A7A03E:'w1B	; [ 2F0 2F0 ] ; A7A042:!	; [ 2F0 2F0 1B ] ; A7A046:DUP	; [ 2F0 ] ; A7A04A:"FindFirstFileA"	; [ 2F0 2F0 ] ; A7A04E:GETPROC	; [ 2F0 2F0 69B ] ; A7A052:'w1C	; [ 2F0 2F0 ] ; A7A056:!	; [ 2F0 2F0 1C ] ; A7A05A:DUP	; [ 2F0 ] ; A7A05E:"FindNextFileA"	; [ 2F0 2F0 ] ; A7A062:GETPROC	; [ 2F0 2F0 6BF ] ; A7A066:'w1D	; [ 2F0 2F0 ] ; A7A06A:!	; [ 2F0 2F0 1D ] ; A7A06E:DUP	; [ 2F0 ] ; A7A072:"FindClose"	; [ 2F0 2F0 ] ; A7A076:GETPROC	; [ 2F0 2F0 6E2 ] ; A7A07A:'w1E	; [ 2F0 2F0 ] ; A7A07E:!	; [ 2F0 2F0 1E ] ; A7A082:DUP	; [ 2F0 ] ; A7A086:"CreateProcessA"	; [ 2F0 2F0 ] ; A7A08A:GETPROC	; [ 2F0 2F0 701 ] ; A7A08E:'w1F	; [ 2F0 2F0 ] ; A7A092:!	; [ 2F0 2F0 1F ] ; A7A096:DUP	; [ 2F0 ] ; A7A09A:"GetTickCount"	; [ 2F0 2F0 ] ; A7A09E:GETPROC	; [ 2F0 2F0 725 ] ; A7A0A2:'w1A	; [ 2F0 2F0 ] ; A7A0A6:!	; [ 2F0 2F0 1A ] ; A7A0AA:DUP	; [ 2F0 ] ; A7A0AE:"GetConsoleScreenBufferInfo"	; [ 2F0 2F0 ] ; A7A0B2:GETPROC	; [ 2F0 2F0 747 ] ; A7A0B6:'w20	; [ 2F0 2F0 ] ; A7A0BA:!	; [ 2F0 2F0 20 ] ; A7A0BE:DUP	; [ 2F0 ] ; A7A0C2:"GetCommandLineA"	; [ 2F0 2F0 ] ; A7A0C6:GETPROC	; [ 2F0 2F0 777 ] ; A7A0CA:'w21	; [ 2F0 2F0 ] ; A7A0CE:!	; [ 2F0 2F0 21 ] ; A7A0D2:DROP	; [ 2F0 ] ; A7A0D6:;	; [ ] ;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str2F0; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str30B; 'w0; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str32C; 'w1; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str34C; 'w2; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str36D; 'w3; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str38A; 'w4; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3A8; 'w5; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3CB; 'w6; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "PeekConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3EE; 'w7; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str414; 'w8; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str43A; 'w9; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str45B; 'wA; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str487; 'wB; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4A1; 'wC; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4C9; 'wD; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4EA; 'wE; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str50A; 'wF; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str52A; 'w10; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str550; 'w11; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str571; 'w12; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str590; 'w13; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5B4; 'w14; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5D6; 'w15; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5F7; 'w16; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str61B; 'w17; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str63A; 'w18; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str658; 'w19; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str679; 'w1B; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str69B; 'w1C; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6BF; 'w1D; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6E2; 'w1E; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str701; 'w1F; OPTAV !mov qword[w1F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str725; 'w1A; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str747; 'w20; OPTAV !mov qword[w20],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetCommandLineA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str777; 'w21; OPTAV !mov qword[w21],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w52  |4080|l     .  | calls:4 niv:0 len:21 ( a -- b )w52:;---------OPT; A7A1A6:$7fff	; [ 0 ] ; A7A1AA:AND	; [ 0 0 ] ; A7A1AE:$4000	; [ 0 ] ; A7A1B2:-	; [ 0 1 ] ; A7A1B6:DUP	; [ 0 ] ; A7A1BA:DUP	; [ 0 0 ] ; A7A1BE:16	; [ 0 0 0 ] ; A7A1C2:*>>	; [ 0 0 0 2 ] ; A7A1C6:DUP	; [ 0 0 ] ; A7A1CA:4876210	; [ 0 0 0 ] ; A7A1CE:16	; [ 0 0 0 3 ] ; A7A1D2:*>>	; [ 0 0 0 3 4 ] ; A7A1D6:2699161	; [ 0 0 0 ] ; A7A1DA:-	; [ 0 0 0 5 ] ; A7A1DE:16	; [ 0 0 0 ] ; A7A1E2:*>>	; [ 0 0 0 6 ] ; A7A1E6:411769	; [ 0 0 ] ; A7A1EA:+	; [ 0 0 7 ] ; A7A1EE:16	; [ 0 0 ] ; A7A1F2:*>>	; [ 0 0 8 ] ; A7A1F6:;	; [ 0 ] ;---------ANA;---------GEN; $7fff; OPTN ANDand rax,32767; $4000; OPTN -sub rax,16384; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 4876210add rbp,8mov [rbp],raxmov rax,4876210; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 2699161; OPTN -sub rax,2699161; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 411769; OPTN +add rax,411769; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; ;ret;--------------------------; :w53  |1002090|l  ;  .  | calls:2 niv:1 len:11 ( a -- b )w53:;---------OPT; A7A1FA:$8000	; [ 0 ] ; A7A1FE:+	; [ 0 0 ] ; A7A202:$8000	; [ 0 ] ; A7A206:nand?	; [ 0 1 ] ; A7A20A:(	; [ 0 ] ; A7A20E:w52	; [ 0 ] ; A7A212:;	; [ 0 ] ; A7A216:)	; [ 0 ] ; A7A21A:w52	; [ 0 ] ; A7A21E:NEG	; [ 0 ] ; A7A222:;	; [ 0 ] ;---------ANA;---------GEN; $8000; OPTN +add rax,32768; $8000; OPTN nand?test rax,32768jnz _o0; (; w52jmp w52; ;; )_o0:; w52call w52; NEGneg rax; ;ret;--------------------------; :w54  |1002090|l  ;  .  | calls:2 niv:1 len:11 ( a -- b )w54:;---------OPT; A7A226:$4000	; [ 0 ] ; A7A22A:+	; [ 0 0 ] ; A7A22E:$8000	; [ 0 ] ; A7A232:nand?	; [ 0 1 ] ; A7A236:(	; [ 0 ] ; A7A23A:w52	; [ 0 ] ; A7A23E:;	; [ 0 ] ; A7A242:)	; [ 0 ] ; A7A246:w52	; [ 0 ] ; A7A24A:NEG	; [ 0 ] ; A7A24E:;	; [ 0 ] ;---------ANA;---------GEN; $4000; OPTN +add rax,16384; $8000; OPTN nand?test rax,32768jnz _o1; (; w52jmp w52; ;; )_o1:; w52call w52; NEGneg rax; ;ret;--------------------------; :w86  |3080|l     .  | calls:3 niv:0 len:49 ( a -- bc )w86:;---------OPT; A7AF4E:DUP	; [ 0 ] ; A7AF52:1	; [ 0 0 ] ; A7AF56:>>	; [ 0 0 0 ] ; A7AF5A:OVER	; [ 0 0 ] ; A7AF5E:2	; [ 0 0 0 ] ; A7AF62:>>	; [ 0 0 0 1 ] ; A7AF66:+	; [ 0 0 0 ] ; A7AF6A:DUP	; [ 0 0 ] ; A7AF6E:4	; [ 0 0 0 ] ; A7AF72:>>	; [ 0 0 0 2 ] ; A7AF76:+	; [ 0 0 0 ] ; A7AF7A:DUP	; [ 0 0 ] ; A7AF7E:8	; [ 0 0 0 ] ; A7AF82:>>	; [ 0 0 0 3 ] ; A7AF86:+	; [ 0 0 0 ] ; A7AF8A:DUP	; [ 0 0 ] ; A7AF8E:16	; [ 0 0 0 ] ; A7AF92:>>	; [ 0 0 0 4 ] ; A7AF96:+	; [ 0 0 0 ] ; A7AF9A:DUP	; [ 0 0 ] ; A7AF9E:32	; [ 0 0 0 ] ; A7AFA2:>>	; [ 0 0 0 5 ] ; A7AFA6:+	; [ 0 0 0 ] ; A7AFAA:3	; [ 0 0 ] ; A7AFAE:>>	; [ 0 0 6 ] ; A7AFB2:OVER	; [ 0 0 ] ; A7AFB6:OVER	; [ 0 0 0 ] ; A7AFBA:DUP	; [ 0 0 0 0 ] ; A7AFBE:2	; [ 0 0 0 0 0 ] ; A7AFC2:<<	; [ 0 0 0 0 0 7 ] ; A7AFC6:+	; [ 0 0 0 0 0 ] ; A7AFCA:1	; [ 0 0 0 0 ] ; A7AFCE:<<	; [ 0 0 0 0 8 ] ; A7AFD2:-	; [ 0 0 0 0 ] ; A7AFD6:6	; [ 0 0 0 ] ; A7AFDA:+	; [ 0 0 0 9 ] ; A7AFDE:4	; [ 0 0 0 ] ; A7AFE2:>>	; [ 0 0 0 A ] ; A7AFE6:+	; [ 0 0 0 ] ; A7AFEA:SWAP	; [ 0 0 ] ; A7AFEE:OVER	; [ 0 0 ] ; A7AFF2:DUP	; [ 0 0 0 ] ; A7AFF6:2	; [ 0 0 0 0 ] ; A7AFFA:<<	; [ 0 0 0 0 B ] ; A7AFFE:+	; [ 0 0 0 0 ] ; A7B002:1	; [ 0 0 0 ] ; A7B006:<<	; [ 0 0 0 C ] ; A7B00A:-	; [ 0 0 0 ] ; A7B00E:;	; [ 0 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :w9D  |1027490|l  ;  . I| calls:39 niv:1 len:22 ( ab -- cd )w9D:;---------OPT; A7B65E:OVER	; [ 1 0 ] ; A7B662:SWAP	; [ 1 0 1 ] ; A7B666:(	; [ 1 1 0 ] ; A7B66A:C@+	; [ 1 1 0 ] ; A7B66E:1?	; [ 1 1 0 0 ] ; A7B672:w96	; [ 1 1 0 0 ] ; A7B3CA:$df	; [ 1 1 0 0 ] ; A7B3CE:AND	; [ 1 1 0 0 0 ] ; A7B676:ROT	; [ 1 1 0 0 ] ; A7B67A:C@+	; [ 1 0 0 1 ] ; A7B67E:w96	; [ 1 0 0 1 1 ] ; A7B3CA:$df	; [ 1 0 0 1 1 ] ; A7B3CE:AND	; [ 1 0 0 1 1 1 ] ; A7B682:ROT	; [ 1 0 0 1 1 ] ; A7B686:<>?	; [ 1 0 1 1 0 ] ; A7B68A:(	; [ 1 0 1 1 ] ; A7B68E:3DROP	; [ 1 0 1 1 ] ; A7B692:0	; [ 1 ] ; A7B696:;	; [ 1 2 ] ; A7B69A:)	; [ 1 2 ] ; A7B69E:DROP	; [ 1 0 1 1 ] ; A7B6A2:SWAP	; [ 1 0 1 ] ; A7B6A6:)	; [ 1 1 0 ] ; A7B6AA:3DROP	; [ 1 1 0 0 ] ; A7B6AE:1	; [ 1 ] ; A7B6B2:;	; [ 1 3 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; (_i2:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o2;; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; <>?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxje _o3; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o3:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i2_o2:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 1add rbp,8mov [rbp],raxmov rax,1; ;ret;--------------------------; :wA4  |5080|l     .  | calls:5 niv:0 len:9 (  -- a )wA4:;---------OPT; A7B81A:'wA3	; [ ] ; A7B81E:64	; [ A3 ] ; A7B822:+	; [ A3 0 ] ; A7B826:0	; [ A3 ] ; A7B82A:OVER	; [ A3 1 ] ; A7B82E:C!	; [ A3 1 A3 ] ; A7B832:1	; [ A3 ] ; A7B836:-	; [ A3 2 ] ; A7B83A:;	; [ A3 ] ;---------ANA;---------GEN; 'wA3add rbp,8mov [rbp],raxmov rax,wA3; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; ;ret;--------------------------; :wA5  |2090|l  ;  .  | calls:2 niv:0 len:12 ( ab -- c )wA5:;---------OPT; A7B83E:-?	; [ 1 0 ] ; A7B842:(	; [ 1 0 ] ; A7B846:DROP	; [ 1 0 ] ; A7B84A:$2d	; [ 1 ] ; A7B84E:OVER	; [ 1 0 ] ; A7B852:C!	; [ 1 0 1 ] ; A7B856:;	; [ 1 ] ; A7B85A:)	; [ 1 ] ; A7B85E:DROP	; [ 1 0 ] ; A7B862:1	; [ 1 ] ; A7B866:+	; [ 1 1 ] ; A7B86A:;	; [ 1 ] ;---------ANA;---------GEN; -?or rax,raxjns _o4; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o4:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :wA6  |1003090|l  ;  .  | calls:3 niv:1 len:26 ( a -- b )wA6:;---------OPT; A7B86E:DUP	; [ 0 ] ; A7B872:ABS	; [ 0 0 ] ; A7B876:-?	; [ 0 0 ] ; A7B87A:(	; [ 0 0 ] ; A7B87E:2DROP	; [ 0 0 ] ; A7B882:"-9223372036854775808"	; [ ] ; A7B886:;	; [ 1D17 ] ; A7B88A:)	; [ 1D17 ] ; A7B88E:wA4	; [ 0 0 ] ; A7B892:SWAP	; [ 0 0 0 ] ; A7B896:(	; [ 0 0 0 ] ; A7B89A:w86	; [ 0 0 0 ] ; A7B89E:$30	; [ 0 0 1 0 ] ; A7B8A2:+	; [ 0 0 1 0 0 ] ; A7B8A6:PICK2	; [ 0 0 1 0 ] ; A7B8AA:C!	; [ 0 0 1 0 0 ] ; A7B8AE:SWAP	; [ 0 0 1 ] ; A7B8B2:1	; [ 0 1 0 ] ; A7B8B6:-	; [ 0 1 0 1 ] ; A7B8BA:SWAP	; [ 0 1 0 ] ; A7B8BE:1?	; [ 0 0 1 ] ; A7B8C2:)	; [ 0 0 1 ] ; A7B8C6:DROP	; [ 0 0 1 ] ; A7B8CA:SWAP	; [ 0 0 ] ; A7B8CE:wA5	; [ 0 0 ] ; A7B8D2:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o5; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str1D17; ;ret; )_o5:; wA4call wA4; SWAPxchg rax,[rbp]; (_i6:; w86call w86; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o6;; )jmp _i6_o6:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; wA5jmp wA5; ;;--------------------------; :wA7  |1001080|l     .  | calls:1 niv:1 len:22 ( a -- b )wA7:;---------OPT; A7B8D6:wA4	; [ 0 ] ; A7B8DA:SWAP	; [ 0 0 ] ; A7B8DE:(	; [ 0 0 ] ; A7B8E2:DUP	; [ 0 0 ] ; A7B8E6:$1	; [ 0 0 0 ] ; A7B8EA:AND	; [ 0 0 0 0 ] ; A7B8EE:$30	; [ 0 0 0 ] ; A7B8F2:+	; [ 0 0 0 1 ] ; A7B8F6:PICK2	; [ 0 0 0 ] ; A7B8FA:C!	; [ 0 0 0 0 ] ; A7B8FE:SWAP	; [ 0 0 ] ; A7B902:1	; [ 0 0 ] ; A7B906:-	; [ 0 0 2 ] ; A7B90A:SWAP	; [ 0 0 ] ; A7B90E:1	; [ 0 0 ] ; A7B912:>>>	; [ 0 0 3 ] ; A7B916:1?	; [ 0 0 ] ; A7B91A:)	; [ 0 0 ] ; A7B91E:DROP	; [ 0 0 ] ; A7B922:1	; [ 0 ] ; A7B926:+	; [ 0 4 ] ; A7B92A:;	; [ 0 ] ;---------ANA;---------GEN; wA4call wA4; SWAPxchg rax,[rbp]; (_i7:; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN >>>shr rax,1; 1?or rax,raxjz _o7;; )jmp _i7_o7:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :wA8  |1001080|l     .  | calls:1 niv:1 len:28 ( a -- b )wA8:;---------OPT; A7B92E:wA4	; [ 0 ] ; A7B932:SWAP	; [ 0 0 ] ; A7B936:(	; [ 0 0 ] ; A7B93A:DUP	; [ 0 0 ] ; A7B93E:$f	; [ 0 0 0 ] ; A7B942:AND	; [ 0 0 0 0 ] ; A7B946:$30	; [ 0 0 0 ] ; A7B94A:+	; [ 0 0 0 1 ] ; A7B94E:$39	; [ 0 0 0 ] ; A7B952:>?	; [ 0 0 0 2 ] ; A7B956:(	; [ 0 0 0 ] ; A7B95A:7	; [ 0 0 0 ] ; A7B95E:+	; [ 0 0 0 3 ] ; A7B962:)	; [ 0 0 0 ] ; A7B966:PICK2	; [ 0 0 0 ] ; A7B96A:C!	; [ 0 0 0 0 ] ; A7B96E:SWAP	; [ 0 0 ] ; A7B972:1	; [ 0 0 ] ; A7B976:-	; [ 0 0 4 ] ; A7B97A:SWAP	; [ 0 0 ] ; A7B97E:4	; [ 0 0 ] ; A7B982:>>>	; [ 0 0 5 ] ; A7B986:1?	; [ 0 0 ] ; A7B98A:)	; [ 0 0 ] ; A7B98E:DROP	; [ 0 0 ] ; A7B992:1	; [ 0 ] ; A7B996:+	; [ 0 6 ] ; A7B99A:;	; [ 0 ] ;---------ANA;---------GEN; wA4call wA4; SWAPxchg rax,[rbp]; (_i8:; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; $30; OPTN +add rax,48; $39; OPTN >?cmp rax,57jle _o9; (; 7; OPTN +add rax,7; )_o9:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 4; OPTN >>>shr rax,4; 1?or rax,raxjz _o8;; )jmp _i8_o8:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :wA9  |1001080|l     .  | calls:1 niv:1 len:22 ( a -- b )wA9:;---------OPT; A7B99E:wA4	; [ 0 ] ; A7B9A2:SWAP	; [ 0 0 ] ; A7B9A6:(	; [ 0 0 ] ; A7B9AA:DUP	; [ 0 0 ] ; A7B9AE:$7	; [ 0 0 0 ] ; A7B9B2:AND	; [ 0 0 0 0 ] ; A7B9B6:$30	; [ 0 0 0 ] ; A7B9BA:+	; [ 0 0 0 1 ] ; A7B9BE:PICK2	; [ 0 0 0 ] ; A7B9C2:C!	; [ 0 0 0 0 ] ; A7B9C6:SWAP	; [ 0 0 ] ; A7B9CA:1	; [ 0 0 ] ; A7B9CE:-	; [ 0 0 2 ] ; A7B9D2:SWAP	; [ 0 0 ] ; A7B9D6:3	; [ 0 0 ] ; A7B9DA:>>>	; [ 0 0 3 ] ; A7B9DE:1?	; [ 0 0 ] ; A7B9E2:)	; [ 0 0 ] ; A7B9E6:DROP	; [ 0 0 ] ; A7B9EA:1	; [ 0 ] ; A7B9EE:+	; [ 0 4 ] ; A7B9F2:;	; [ 0 ] ;---------ANA;---------GEN; wA4call wA4; SWAPxchg rax,[rbp]; (_iA:; DUPadd rbp,8mov [rbp],rax; $7; OPTN ANDand rax,7; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 3; OPTN >>>shr rax,3; 1?or rax,raxjz _oA;; )jmp _iA_oA:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :wAA  |1001080|l     .  | calls:1 niv:1 len:49 ( a -- b )wAA:;---------OPT; A7B9F6:wA4	; [ 0 ] ; A7B9FA:OVER	; [ 0 0 ] ; A7B9FE:$ffff	; [ 0 0 0 ] ; A7BA02:AND	; [ 0 0 0 0 ] ; A7BA06:10000	; [ 0 0 0 ] ; A7BA0A:16	; [ 0 0 0 1 ] ; A7BA0E:*>>	; [ 0 0 0 1 2 ] ; A7BA12:10000	; [ 0 0 0 ] ; A7BA16:+	; [ 0 0 0 3 ] ; A7BA1A:(	; [ 0 0 0 ] ; A7BA1E:w86	; [ 0 0 0 ] ; A7BA22:$30	; [ 0 0 1 0 ] ; A7BA26:+	; [ 0 0 1 0 4 ] ; A7BA2A:PICK2	; [ 0 0 1 0 ] ; A7BA2E:C!	; [ 0 0 1 0 0 ] ; A7BA32:SWAP	; [ 0 0 1 ] ; A7BA36:1	; [ 0 1 0 ] ; A7BA3A:-	; [ 0 1 0 5 ] ; A7BA3E:SWAP	; [ 0 1 0 ] ; A7BA42:1?	; [ 0 0 1 ] ; A7BA46:)	; [ 0 0 1 ] ; A7BA4A:DROP	; [ 0 0 1 ] ; A7BA4E:1	; [ 0 0 ] ; A7BA52:+	; [ 0 0 6 ] ; A7BA56:$2e	; [ 0 0 ] ; A7BA5A:OVER	; [ 0 0 7 ] ; A7BA5E:C!	; [ 0 0 7 0 ] ; A7BA62:1	; [ 0 0 ] ; A7BA66:-	; [ 0 0 8 ] ; A7BA6A:OVER	; [ 0 0 ] ; A7BA6E:ABS	; [ 0 0 0 ] ; A7BA72:16	; [ 0 0 0 ] ; A7BA76:>>	; [ 0 0 0 9 ] ; A7BA7A:(	; [ 0 0 0 ] ; A7BA7E:w86	; [ 0 0 0 ] ; A7BA82:$30	; [ 0 0 1 0 ] ; A7BA86:+	; [ 0 0 1 0 A ] ; A7BA8A:PICK2	; [ 0 0 1 0 ] ; A7BA8E:C!	; [ 0 0 1 0 0 ] ; A7BA92:SWAP	; [ 0 0 1 ] ; A7BA96:1	; [ 0 1 0 ] ; A7BA9A:-	; [ 0 1 0 B ] ; A7BA9E:SWAP	; [ 0 1 0 ] ; A7BAA2:1?	; [ 0 0 1 ] ; A7BAA6:)	; [ 0 0 1 ] ; A7BAAA:DROP	; [ 0 0 1 ] ; A7BAAE:SWAP	; [ 0 0 ] ; A7BAB2:wA5	; [ 0 0 ] ; A7BAB6:;	; [ 0 ] ;---------ANA;---------GEN; wA4call wA4; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ffff; OPTN ANDand rax,65535; 10000add rbp,8mov [rbp],raxmov rax,10000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 10000; OPTN +add rax,10000; (_iB:; w86call w86; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _oB;; )jmp _iB_oB:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; $2eadd rbp,8mov [rbp],raxmov rax,46; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; ABScqoadd rax,rdxxor rax,rdx; 16; OPTN >>sar rax,16; (_iC:; w86call w86; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _oC;; )jmp _iC_oC:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; wA5jmp wA5; ;;--------------------------; :wAC  |13080|l     .  | calls:19 niv:0 len:17 ( a -- b )wAC:;---------OPT; A7BAFE:(	; [ 0 ] ; A7BB02:C@+	; [ 0 ] ; A7BB06:0?	; [ 0 0 ] ; A7BB0A:(	; [ 0 0 ] ; A7BB0E:33	; [ 0 0 ] ; A7BB12:+	; [ 0 0 0 ] ; A7BB16:)	; [ 0 0 ] ; A7BB1A:$ff	; [ 0 0 ] ; A7BB1E:AND	; [ 0 0 1 ] ; A7BB22:33	; [ 0 0 ] ; A7BB26:<?	; [ 0 0 2 ] ; A7BB2A:DROP	; [ 0 0 ] ; A7BB2E:)	; [ 0 ] ; A7BB32:DROP	; [ 0 0 ] ; A7BB36:1	; [ 0 ] ; A7BB3A:-	; [ 0 3 ] ; A7BB3E:;	; [ 0 ] ;---------ANA;---------GEN; (_iD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 0?or rax,raxjnz _oE; (; 33; OPTN +add rax,33; )_oE:; $ff; OPTN ANDand rax,255; 33; OPTN <?cmp rax,33jge _oD; DROPmov rax,[rbp]sub rbp,8; )jmp _iD_oD:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :wC1  |1002490|l  ;  . I| calls:2 niv:1 len:31 ( ab -- c )wC1:;---------OPT; A7BED2:$80000000	; [ 1 0 ] ; A7BED6:1	; [ 1 0 0 ] ; A7BEDA:0	; [ 1 0 0 1 ] ; A7BEDE:3	; [ 1 0 0 1 2 ] ; A7BEE2:$8000000	; [ 1 0 0 1 2 3 ] ; A7BEE6:0	; [ 1 0 0 1 2 3 4 ] ; A7BEEA:w30	; [ 1 0 0 1 2 3 4 5 ] ; A79D1A:wE	; [ 1 0 0 1 2 3 4 5 ] ; A79D1E:SYS7	; [ 1 0 0 1 2 3 4 5 E ] ; A7BEEE:-1	; [ 1 0 ] ; A7BEF2:=?	; [ 1 0 6 ] ; A7BEF6:(	; [ 1 0 ] ; A7BEFA:DROP	; [ 1 0 ] ; A7BEFE:;	; [ 1 ] ; A7BF02:)	; [ 1 ] ; A7BF06:SWAP	; [ 1 0 ] ; A7BF0A:(	; [ 0 1 ] ; A7BF0E:2DUP	; [ 0 1 ] ; A7BF12:$ffff	; [ 0 1 0 1 ] ; A7BF16:'wC0	; [ 0 1 0 1 7 ] ; A7BF1A:0	; [ 0 1 0 1 7 C0 ] ; A7BF1E:w25	; [ 0 1 0 1 7 C0 8 ] ; A79C86:w3	; [ 0 1 0 1 7 C0 8 ] ; A79C8A:SYS5	; [ 0 1 0 1 7 C0 8 3 ] ; A7BF22:DROP	; [ 0 1 0 ] ; A7BF26:wC0	; [ 0 1 ] ; A7BF2A:+	; [ 0 1 C0 ] ; A7BF2E:wC0	; [ 0 1 ] ; A7BF32:1?	; [ 0 1 C0 ] ; A7BF36:DROP	; [ 0 1 C0 ] ; A7BF3A:)	; [ 0 1 ] ; A7BF3E:DROP	; [ 0 1 C0 ] ; A7BF42:SWAP	; [ 0 1 ] ; A7BF46:w31	; [ 1 0 ] ; A79D26:wF	; [ 1 0 ] ; A79D2A:SYS1	; [ 1 0 F ] ; A79D2E:DROP	; [ 1 0 ] ; A7BF4A:;	; [ 1 ] ;---------ANA;---------GEN; $80000000add rbp,8mov [rbp],raxmov rax,2147483648; 1add rbp,8mov [rbp],raxmov rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; 3add rbp,8mov [rbp],raxmov rax,3; $8000000add rbp,8mov [rbp],raxmov rax,134217728; 0add rbp,8mov [rbp],raxxor rax,rax; wEadd rbp,8mov [rbp],raxmov rax,qword[wE]; SYS7PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$40mov rcx,[rbp]mov [rsp+$30],rcxmov rcx,[rbp-1*8]mov [rsp+$28],rcxmov rcx,[rbp-2*8]mov [rsp+$20],rcxmov r9,[rbp-3*8]mov r8,[rbp-4*8]mov rdx,[rbp-5*8]mov rcx,[rbp-6*8]call raxsub rbp,8*7add RSP,$40POP RSP; -1; OPTN =?cmp rax,-1jne _oF; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oF:; SWAPxchg rax,[rbp]; (_i10:; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; $ffffadd rbp,8mov [rbp],raxmov rax,65535; 'wC0add rbp,8mov [rbp],raxmov rax,wC0; 0add rbp,8mov [rbp],raxxor rax,rax; w3add rbp,8mov [rbp],raxmov rax,qword[w3]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; wC0; OPTV +add rax,qword[wC0]; wC0add rbp,8mov [rbp],raxmov rax,qword[wC0]; 1?or rax,raxjz _o10;; DROPmov rax,[rbp]sub rbp,8; )jmp _i10_o10:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; wFadd rbp,8mov [rbp],raxmov rax,qword[wF]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wCC  |2090|l  ;  .  | calls:2 niv:0 len:19 (  --  )wCC:;---------OPT; A7C0E6:wCA	; [ ] ; A7C0EA:'wC9	; [ CA ] ; A7C0EE:=?	; [ CA C9 ] ; A7C0F2:(	; [ CA ] ; A7C0F6:DROP	; [ CA ] ; A7C0FA:MEM	; [ ] ; A7C0FE:'wC8	; [ 0 ] ; A7C102:!	; [ 0 C8 ] ; A7C106:;	; [ ] ; A7C10A:)	; [ ] ; A7C10E:8	; [ CA ] ; A7C112:-	; [ CA 0 ] ; A7C116:DUP	; [ CA ] ; A7C11A:'wCA	; [ CA CA ] ; A7C11E:!	; [ CA CA CA ] ; A7C122:@	; [ CA ] ; A7C126:'wC8	; [ CA ] ; A7C12A:!	; [ CA C8 ] ; A7C12E:;	; [ ] ;---------ANA;---------GEN; wCAadd rbp,8mov [rbp],raxmov rax,qword[wCA]; 'wC9; OPTAV =?cmp rax,wC9jne _o11; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret; )_o11:; 8; OPTN -sub rax,8; DUPadd rbp,8mov [rbp],rax; 'wCA; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wD6  |8080|l     .  | calls:8 niv:0 len:13 ( a --  )wD6:;---------OPT; A7C24A:wC8	; [ 0 ] ; A7C24E:SWAP	; [ 0 C8 ] ; A7C252:(	; [ C8 0 ] ; A7C256:C@+	; [ C8 0 ] ; A7C25A:1?	; [ C8 0 0 ] ; A7C25E:ROT	; [ C8 0 0 ] ; A7C262:C!+	; [ 0 0 C8 ] ; A7C266:SWAP	; [ 0 0 ] ; A7C26A:)	; [ 0 0 ] ; A7C26E:2DROP	; [ C8 0 0 ] ; A7C272:'wC8	; [ C8 ] ; A7C276:!	; [ C8 C8 ] ; A7C27A:;	; [ ] ;---------ANA;---------GEN; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; SWAPxchg rax,[rbp]; (_i12:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o12;; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i12_o12:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wD7  |1080|l     .  | calls:1 niv:0 len:16 ( a --  )wD7:;---------OPT; A7C27E:wC8	; [ 0 ] ; A7C282:SWAP	; [ 0 C8 ] ; A7C286:(	; [ C8 0 ] ; A7C28A:C@+	; [ C8 0 ] ; A7C28E:$ff	; [ C8 0 0 ] ; A7C292:AND	; [ C8 0 0 0 ] ; A7C296:32	; [ C8 0 0 ] ; A7C29A:>?	; [ C8 0 0 1 ] ; A7C29E:ROT	; [ C8 0 0 ] ; A7C2A2:C!+	; [ 0 0 C8 ] ; A7C2A6:SWAP	; [ 0 0 ] ; A7C2AA:)	; [ 0 0 ] ; A7C2AE:2DROP	; [ C8 0 0 ] ; A7C2B2:'wC8	; [ C8 ] ; A7C2B6:!	; [ C8 C8 ] ; A7C2BA:;	; [ ] ;---------ANA;---------GEN; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; SWAPxchg rax,[rbp]; (_i13:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o13; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i13_o13:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wD8  |1090|l  ;  .  | calls:1 niv:0 len:27 ( a --  )wD8:;---------OPT; A7C2BE:wC8	; [ 0 ] ; A7C2C2:SWAP	; [ 0 C8 ] ; A7C2C6:(	; [ C8 0 ] ; A7C2CA:C@+	; [ C8 0 ] ; A7C2CE:1?	; [ C8 0 0 ] ; A7C2D2:10	; [ C8 0 0 ] ; A7C2D6:=?	; [ C8 0 0 0 ] ; A7C2DA:(	; [ C8 0 0 ] ; A7C2DE:3	; [ C8 0 0 ] ; A7C2E2:+	; [ C8 0 0 1 ] ; A7C2E6:)	; [ C8 0 0 ] ; A7C2EA:13	; [ C8 0 0 ] ; A7C2EE:=?	; [ C8 0 0 2 ] ; A7C2F2:(	; [ C8 0 0 ] ; A7C2F6:2DROP	; [ C8 0 0 ] ; A7C2FA:'wC8	; [ C8 ] ; A7C2FE:!	; [ C8 C8 ] ; A7C302:;	; [ ] ; A7C306:)	; [ ] ; A7C30A:ROT	; [ C8 0 0 ] ; A7C30E:C!+	; [ 0 0 C8 ] ; A7C312:SWAP	; [ 0 0 ] ; A7C316:)	; [ 0 0 ] ; A7C31A:2DROP	; [ C8 0 0 ] ; A7C31E:'wC8	; [ C8 ] ; A7C322:!	; [ C8 C8 ] ; A7C326:;	; [ ] ;---------ANA;---------GEN; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; SWAPxchg rax,[rbp]; (_i14:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o14;; 10; OPTN =?cmp rax,10jne _o15; (; 3; OPTN +add rax,3; )_o15:; 13; OPTN =?cmp rax,13jne _o16; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret; )_o16:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i14_o14:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wE2  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wE2:;---------OPT; A7C3A2:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :wE3  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wE3:;---------OPT; A7C3A6:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :wE4  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE4:;---------OPT; A7C3AA:SWAP	; [ 1 0 ] ; A7C3AE:wA7	; [ 0 1 ] ; A7C3B2:wD6	; [ 0 0 ] ; A7C3B6:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; wA7call wA7; wD6jmp wD6; ;;--------------------------; :wE5  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wE5:;---------OPT; A7C3BA:SWAP	; [ 1 0 ] ; A7C3BE:0?	; [ 0 1 ] ; A7C3C2:(	; [ 0 1 ] ; A7C3C6:DROP	; [ 0 1 ] ; A7C3CA:;	; [ 0 ] ; A7C3CE:)	; [ 0 ] ; A7C3D2:wD6	; [ 0 1 ] ; A7C3D6:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o17; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o17:; wD6jmp wD6; ;;--------------------------; :wE6  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE6:;---------OPT; A7C3DA:SWAP	; [ 1 0 ] ; A7C3DE:wA6	; [ 0 1 ] ; A7C3E2:wD6	; [ 0 0 ] ; A7C3E6:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; wA6call wA6; wD6jmp wD6; ;;--------------------------; :wE7  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wE7:;---------OPT; A7C3EA:$25	; [ ] ; A7C3EE:wD4	; [ 0 ] ; A7C222:wC8	; [ 0 ] ; A7C226:C!+	; [ 0 C8 ] ; A7C22A:'wC8	; [ 0 ] ; A7C22E:!	; [ 0 C8 ] ; A7C3F2:;	; [ ] ;---------ANA;---------GEN; $25add rbp,8mov [rbp],raxmov rax,37; wC8; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wE8  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE8:;---------OPT; A7C3F6:SWAP	; [ 1 0 ] ; A7C3FA:wAA	; [ 0 1 ] ; A7C3FE:wD6	; [ 0 0 ] ; A7C402:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; wAAcall wAA; wD6jmp wD6; ;;--------------------------; :wE9  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wE9:;---------OPT; A7C406:SWAP	; [ 1 0 ] ; A7C40A:0?	; [ 0 1 ] ; A7C40E:(	; [ 0 1 ] ; A7C412:DROP	; [ 0 1 ] ; A7C416:;	; [ 0 ] ; A7C41A:)	; [ 0 ] ; A7C41E:wD7	; [ 0 1 ] ; A7C422:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o18; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o18:; wD7jmp wD7; ;;--------------------------; :wEA  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wEA:;---------OPT; A7C426:SWAP	; [ 1 0 ] ; A7C42A:wA8	; [ 0 1 ] ; A7C42E:wD6	; [ 0 0 ] ; A7C432:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; wA8call wA8; wD6jmp wD6; ;;--------------------------; :wEB  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wEB:;---------OPT; A7C436:SWAP	; [ 1 0 ] ; A7C43A:16	; [ 0 1 ] ; A7C43E:>>	; [ 0 1 0 ] ; A7C442:wA6	; [ 0 1 ] ; A7C446:wD6	; [ 0 0 ] ; A7C44A:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; wA6call wA6; wD6jmp wD6; ;;--------------------------; :wEC  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wEC:;---------OPT; A7C44E:SWAP	; [ 1 0 ] ; A7C452:$ffff	; [ 0 1 ] ; A7C456:AND	; [ 0 1 0 ] ; A7C45A:wA6	; [ 0 1 ] ; A7C45E:wD6	; [ 0 0 ] ; A7C462:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; $ffff; OPTN ANDand rax,65535; wA6call wA6; wD6jmp wD6; ;;--------------------------; :wED  |1001484|l'    . I| calls:1 niv:1 len:3 ( ab -- c )wED:;---------OPT; A7C466:SWAP	; [ 1 0 ] ; A7C46A:wD4	; [ 0 1 ] ; A7C222:wC8	; [ 0 1 ] ; A7C226:C!+	; [ 0 1 C8 ] ; A7C22A:'wC8	; [ 0 1 ] ; A7C22E:!	; [ 0 1 C8 ] ; A7C46E:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; wC8; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wEE  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wEE:;---------OPT; A7C472:SWAP	; [ 1 0 ] ; A7C476:0?	; [ 0 1 ] ; A7C47A:(	; [ 0 1 ] ; A7C47E:DROP	; [ 0 1 ] ; A7C482:;	; [ 0 ] ; A7C486:)	; [ 0 ] ; A7C48A:wD8	; [ 0 1 ] ; A7C48E:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o19; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o19:; wD8jmp wD8; ;;--------------------------; :wEF  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wEF:;---------OPT; A7C492:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :wF0  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wF0:;---------OPT; A7C496:13	; [ ] ; A7C49A:wD4	; [ 0 ] ; A7C222:wC8	; [ 0 ] ; A7C226:C!+	; [ 0 C8 ] ; A7C22A:'wC8	; [ 0 ] ; A7C22E:!	; [ 0 C8 ] ; A7C49E:;	; [ ] ;---------ANA;---------GEN; 13add rbp,8mov [rbp],raxmov rax,13; wC8; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wF1  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wF1:;---------OPT; A7C4A2:SWAP	; [ 1 0 ] ; A7C4A6:wA9	; [ 0 1 ] ; A7C4AA:wD6	; [ 0 0 ] ; A7C4AE:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; wA9call wA9; wD6jmp wD6; ;;--------------------------; :wF3  |6001490|l  ;  . I| calls:1 niv:6 len:17 ( ab -- c )wF3:;---------OPT; A7C4F2:$25	; [ 1 0 ] ; A7C4F6:<>?	; [ 1 0 0 ] ; A7C4FA:(	; [ 1 0 ] ; A7C4FE:wD4	; [ 1 0 ] ; A7C222:wC8	; [ 1 0 ] ; A7C226:C!+	; [ 1 0 C8 ] ; A7C22A:'wC8	; [ 1 0 ] ; A7C22E:!	; [ 1 0 C8 ] ; A7C502:;	; [ 1 ] ; A7C506:)	; [ 1 ] ; A7C50A:DROP	; [ 1 0 ] ; A7C50E:C@+	; [ 1 ] ; A7C512:$f	; [ 1 1 ] ; A7C516:AND	; [ 1 1 1 ] ; A7C51A:3	; [ 1 1 ] ; A7C51E:<<	; [ 1 1 2 ] ; A7C522:'wF2	; [ 1 1 ] ; A7C526:+	; [ 1 1 F2 ] ; A7C52A:@	; [ 1 1 ] ; A7C52E:EX	; [ 1 1 ] ; A7C532:;	; [ 1 1 ] ;---------ANA;---------GEN; $25; OPTN <>?cmp rax,37je _o1A; (; wC8; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret; )_o1A:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $f; OPTN ANDand rax,15; 3; OPTN <<shl rax,3; 'wF2; OPTAV +add rax,wF2; @mov rax,qword[rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :wF6  |1003480|l     . I| calls:3 niv:1 len:9 ( a -- b )wF6:;---------OPT; A7C55A:wCB	; [ 0 ] ; A7C0CE:wC8	; [ 0 ] ; A7C0D2:wCA	; [ 0 C8 ] ; A7C0D6:!+	; [ 0 C8 CA ] ; A7C0DA:'wCA	; [ 0 C8 ] ; A7C0DE:!	; [ 0 C8 CA ] ; A7C55E:'wF5	; [ 0 ] ; A7C562:'wC8	; [ 0 F5 ] ; A7C566:!	; [ 0 F5 C8 ] ; A7C56A:wF4	; [ 0 ] ; A7C536:(	; [ 0 ] ; A7C53A:C@+	; [ 0 ] ; A7C53E:1?	; [ 0 0 ] ; A7C542:wF3	; [ 0 0 ] ; A7C546:)	; [ 0 ] ; A7C54A:2DROP	; [ 0 0 ] ; A7C56E:wDF	; [ ] ; A7C376:0	; [ ] ; A7C37A:wD4	; [ 0 ] ; A7C222:wC8	; [ 0 ] ; A7C226:C!+	; [ 0 C8 ] ; A7C22A:'wC8	; [ 0 ] ; A7C22E:!	; [ 0 C8 ] ; A7C572:wCC	; [ ] ; A7C576:'wF5	; [ ] ; A7C57A:;	; [ F5 ] ;---------ANA;---------GEN; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; wCA; OPTV !+mov rbx,qword[wCA]mov [rbx],raxadd rbx,8mov rax,rbx; 'wCA; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; 'wF5add rbp,8mov [rbp],raxmov rax,wF5; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; (_i1B:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1B;; wF3call wF3; )jmp _i1B_o1B:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; wC8; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; wCCcall wCC; 'wF5add rbp,8mov [rbp],raxmov rax,wF5; ;ret;--------------------------; :wF9  |3090|l  ;  .  | calls:3 niv:0 len:23 ( a -- bc )wF9:;---------OPT; A7C592:DUP	; [ 0 ] ; A7C596:C@	; [ 0 0 ] ; A7C59A:$2b	; [ 0 0 ] ; A7C59E:=?	; [ 0 0 0 ] ; A7C5A2:(	; [ 0 0 ] ; A7C5A6:DROP	; [ 0 0 ] ; A7C5AA:1	; [ 0 ] ; A7C5AE:+	; [ 0 1 ] ; A7C5B2:0	; [ 0 ] ; A7C5B6:;	; [ 0 2 ] ; A7C5BA:)	; [ 0 2 ] ; A7C5BE:$2d	; [ 0 0 ] ; A7C5C2:=?	; [ 0 0 3 ] ; A7C5C6:(	; [ 0 0 ] ; A7C5CA:DROP	; [ 0 0 ] ; A7C5CE:1	; [ 0 ] ; A7C5D2:+	; [ 0 4 ] ; A7C5D6:1	; [ 0 ] ; A7C5DA:;	; [ 0 5 ] ; A7C5DE:)	; [ 0 5 ] ; A7C5E2:DROP	; [ 0 0 ] ; A7C5E6:0	; [ 0 ] ; A7C5EA:;	; [ 0 6 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $2b; OPTN =?cmp rax,43jne _o1C; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o1C:; $2d; OPTN =?cmp rax,45jne _o1D; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; 1add rbp,8mov [rbp],raxmov rax,1; ;ret; )_o1D:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :wFE  |1003490|l  ;  . I| calls:3 niv:1 len:28 ( a -- bc )wFE:;---------OPT; A7C892:wF9	; [ 0 ] ; A7C896:SWAP	; [ 1 0 ] ; A7C89A:0	; [ 0 1 ] ; A7C89E:SWAP	; [ 0 1 0 ] ; A7C8A2:(	; [ 0 0 1 ] ; A7C8A6:C@+	; [ 0 0 1 ] ; A7C8AA:$2f	; [ 0 0 1 1 ] ; A7C8AE:>?	; [ 0 0 1 1 1 ] ; A7C8B2:$39	; [ 0 0 1 1 ] ; A7C8B6:<=?	; [ 0 0 1 1 2 ] ; A7C8BA:$30	; [ 0 0 1 1 ] ; A7C8BE:-	; [ 0 0 1 1 3 ] ; A7C8C2:ROT	; [ 0 0 1 1 ] ; A7C8C6:w8E	; [ 0 1 1 0 ] ; A7B226:1	; [ 0 1 1 0 ] ; A7B22A:<<	; [ 0 1 1 0 4 ] ; A7B22E:DUP	; [ 0 1 1 0 ] ; A7B232:2	; [ 0 1 1 0 0 ] ; A7B236:<<	; [ 0 1 1 0 0 5 ] ; A7B23A:+	; [ 0 1 1 0 0 ] ; A7C8CA:+	; [ 0 1 1 0 ] ; A7C8CE:SWAP	; [ 0 1 1 ] ; A7C8D2:)	; [ 0 1 1 ] ; A7C8D6:DROP	; [ 0 0 1 1 ] ; A7C8DA:SWAP	; [ 0 0 1 ] ; A7C8DE:ROT	; [ 0 1 0 ] ; A7C8E2:0?	; [ 1 0 0 ] ; A7C8E6:(	; [ 1 0 0 ] ; A7C8EA:DROP	; [ 1 0 0 ] ; A7C8EE:;	; [ 1 0 ] ; A7C8F2:)	; [ 1 0 ] ; A7C8F6:DROP	; [ 1 0 0 ] ; A7C8FA:NEG	; [ 1 0 ] ; A7C8FE:;	; [ 1 0 ] ;---------ANA;---------GEN; wF9call wF9; SWAPxchg rax,[rbp]; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_i1E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _o1E; $39; OPTN <=?cmp rax,57jg _o1E; $30; OPTN -sub rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i1E_o1E:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0?or rax,raxjnz _o1F; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o1F:; DROPmov rax,[rbp]sub rbp,8; NEGneg rax; ;ret;--------------------------; :w105  |1001490|l  ;  . I| calls:1 niv:1 len:26 ( ab -- cd )w105:;---------OPT; A7CAF2:DROP	; [ 1 0 ] ; A7CAF6:1	; [ 1 ] ; A7CAFA:SWAP	; [ 1 0 ] ; A7CAFE:(	; [ 0 1 ] ; A7CB02:C@+	; [ 0 1 ] ; A7CB06:$2f	; [ 0 1 1 ] ; A7CB0A:>?	; [ 0 1 1 1 ] ; A7CB0E:$39	; [ 0 1 1 ] ; A7CB12:>?	; [ 0 1 1 2 ] ; A7CB16:(	; [ 0 1 1 ] ; A7CB1A:ROT	; [ 0 1 1 ] ; A7CB1E:'w103	; [ 1 1 0 ] ; A7CB22:!	; [ 1 1 0 103 ] ; A7CB26:;	; [ 1 1 ] ; A7CB2A:)	; [ 1 1 ] ; A7CB2E:$30	; [ 0 1 1 ] ; A7CB32:-	; [ 0 1 1 3 ] ; A7CB36:ROT	; [ 0 1 1 ] ; A7CB3A:w8E	; [ 1 1 0 ] ; A7B226:1	; [ 1 1 0 ] ; A7B22A:<<	; [ 1 1 0 4 ] ; A7B22E:DUP	; [ 1 1 0 ] ; A7B232:2	; [ 1 1 0 0 ] ; A7B236:<<	; [ 1 1 0 0 5 ] ; A7B23A:+	; [ 1 1 0 0 ] ; A7CB3E:+	; [ 1 1 0 ] ; A7CB42:SWAP	; [ 1 1 ] ; A7CB46:)	; [ 1 1 ] ; A7CB4A:ROT	; [ 0 1 1 ] ; A7CB4E:'w103	; [ 1 1 0 ] ; A7CB52:!	; [ 1 1 0 103 ] ; A7CB56:;	; [ 1 1 ] ;---------ANA;---------GEN; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; SWAPxchg rax,[rbp]; (_i20:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _o20; $39; OPTN >?cmp rax,57jle _o21; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 'w103; OPTAV !mov qword[w103],raxmov rax,[rbp]sub rbp,8; ;ret; )_o21:; $30; OPTN -sub rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i20_o20:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 'w103; OPTAV !mov qword[w103],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w106  |10014D0|l  ; [. I| calls:1 niv:1 len:49 ( a -- bc )w106:;---------OPT; A7CB5A:wAC	; [ 0 ] ; A7CB5E:wF9	; [ 0 ] ; A7CB62:OVER	; [ 1 0 ] ; A7CB66:C@	; [ 1 0 1 ] ; A7CB6A:33	; [ 1 0 1 ] ; A7CB6E:<?	; [ 1 0 1 0 ] ; A7CB72:(	; [ 1 0 1 ] ; A7CB76:2DROP	; [ 1 0 1 ] ; A7CB7A:1	; [ 1 ] ; A7CB7E:-	; [ 1 1 ] ; A7CB82:0	; [ 1 ] ; A7CB86:;	; [ 1 2 ] ; A7CB8A:)	; [ 1 2 ] ; A7CB8E:SWAP	; [ 1 0 1 ] ; A7CB92:1?	; [ 1 1 0 ] ; A7CB96:(	; [ 1 1 0 ] ; A7CB9A:[	; [ 1 1 0 ] ; A7CB9E:NEG	; [ 1 1 0 ] ; A7CBA2:;	; [ 1 1 0 ] ; A7CBA6:]	; [ 1 1 0 ] ; A7CBAA:>R	; [ 1 1 0 1 ] ; A7CBAE:)	; [ 1 1 0 ] ; A7CBB2:DROP	; [ 1 1 0 ] ; A7CBB6:DROP	; [ 1 1 ] ; A7CBBA:0	; [ 1 ] ; A7CBBE:SWAP	; [ 1 3 ] ; A7CBC2:(	; [ 3 1 ] ; A7CBC6:C@+	; [ 3 1 ] ; A7CBCA:$2f	; [ 3 1 1 ] ; A7CBCE:>?	; [ 3 1 1 4 ] ; A7CBD2:$39	; [ 3 1 1 ] ; A7CBD6:>?	; [ 3 1 1 5 ] ; A7CBDA:(	; [ 3 1 1 ] ; A7CBDE:DROP	; [ 3 1 1 ] ; A7CBE2:1	; [ 3 1 ] ; A7CBE6:-	; [ 3 1 6 ] ; A7CBEA:SWAP	; [ 3 1 ] ; A7CBEE:;	; [ 1 3 ] ; A7CBF2:)	; [ 1 3 ] ; A7CBF6:$30	; [ 3 1 1 ] ; A7CBFA:-	; [ 3 1 1 7 ] ; A7CBFE:ROT	; [ 3 1 1 ] ; A7CC02:w8E	; [ 1 1 3 ] ; A7B226:1	; [ 1 1 3 ] ; A7B22A:<<	; [ 1 1 3 8 ] ; A7B22E:DUP	; [ 1 1 3 ] ; A7B232:2	; [ 1 1 3 3 ] ; A7B236:<<	; [ 1 1 3 3 9 ] ; A7B23A:+	; [ 1 1 3 3 ] ; A7CC06:+	; [ 1 1 3 ] ; A7CC0A:SWAP	; [ 1 1 ] ; A7CC0E:)	; [ 1 1 ] ; A7CC12:DROP	; [ 3 1 1 ] ; A7CC16:SWAP	; [ 3 1 ] ; A7CC1A:;	; [ 1 3 ] ;---------ANA;---------GEN; wACcall wAC; wF9call wF9; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 33; OPTN <?cmp rax,33jge _o22; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o22:; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o23;; (; [jmp ja24anon24:; NEGneg rax; ;ret; ]ja24:add rbp,8mov [rbp],raxmov rax,anon24; >Rpush raxmov rax,[rbp]sub rbp,8; )_o23:; DROPmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_i25:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _o25; $39; OPTN >?cmp rax,57jle _o26; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret; )_o26:; $30; OPTN -sub rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i25_o25:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ;ret;--------------------------; :w109  |2001090|l  ;  .  | calls:1 niv:2 len:11 ( a -- b )w109:;---------OPT; A7CD96:$65	; [ 0 ] ; A7CD9A:<>?	; [ 0 0 ] ; A7CD9E:(	; [ 0 ] ; A7CDA2:;	; [ 0 ] ; A7CDA6:)	; [ 0 ] ; A7CDAA:DROP	; [ 0 ] ; A7CDAE:w106	; [ ] ; A7CDB2:DUP	; [ 0 ] ; A7CDB6:'w104	; [ 0 0 ] ; A7CDBA:!	; [ 0 0 104 ] ; A7CDBE:;	; [ 0 ] ;---------ANA;---------GEN; $65; OPTN <>?cmp rax,101je _o27; (; ;ret; )_o27:; DROPmov rax,[rbp]sub rbp,8; w106call w106; DUPadd rbp,8mov [rbp],rax; 'w104; OPTAV !mov qword[w104],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w10A  |10104D0|l  ; [. I| calls:16 niv:1 len:112 ( a -- bc )w10A:;---------OPT; A7CDC2:0	; [ 0 ] ; A7CDC6:'w103	; [ 0 0 ] ; A7CDCA:!	; [ 0 0 103 ] ; A7CDCE:0	; [ 0 ] ; A7CDD2:'w104	; [ 0 1 ] ; A7CDD6:!	; [ 0 1 104 ] ; A7CDDA:wAC	; [ 0 ] ; A7CDDE:wF9	; [ 0 ] ; A7CDE2:OVER	; [ 1 0 ] ; A7CDE6:C@	; [ 1 0 1 ] ; A7CDEA:33	; [ 1 0 1 ] ; A7CDEE:<?	; [ 1 0 1 2 ] ; A7CDF2:(	; [ 1 0 1 ] ; A7CDF6:2DROP	; [ 1 0 1 ] ; A7CDFA:1	; [ 1 ] ; A7CDFE:-	; [ 1 3 ] ; A7CE02:0	; [ 1 ] ; A7CE06:;	; [ 1 4 ] ; A7CE0A:)	; [ 1 4 ] ; A7CE0E:SWAP	; [ 1 0 1 ] ; A7CE12:1?	; [ 1 1 0 ] ; A7CE16:(	; [ 1 1 0 ] ; A7CE1A:[	; [ 1 1 0 ] ; A7CE1E:NEG	; [ 1 1 0 ] ; A7CE22:;	; [ 1 1 0 ] ; A7CE26:]	; [ 1 1 0 ] ; A7CE2A:>R	; [ 1 1 0 1 ] ; A7CE2E:)	; [ 1 1 0 ] ; A7CE32:DROP	; [ 1 1 0 ] ; A7CE36:DROP	; [ 1 1 ] ; A7CE3A:0	; [ 1 ] ; A7CE3E:SWAP	; [ 1 5 ] ; A7CE42:(	; [ 5 1 ] ; A7CE46:C@+	; [ 5 1 ] ; A7CE4A:$2f	; [ 5 1 1 ] ; A7CE4E:>?	; [ 5 1 1 6 ] ; A7CE52:$39	; [ 5 1 1 ] ; A7CE56:>?	; [ 5 1 1 7 ] ; A7CE5A:(	; [ 5 1 1 ] ; A7CE5E:DROP	; [ 5 1 1 ] ; A7CE62:1	; [ 5 1 ] ; A7CE66:-	; [ 5 1 8 ] ; A7CE6A:SWAP	; [ 5 1 ] ; A7CE6E:;	; [ 1 5 ] ; A7CE72:)	; [ 1 5 ] ; A7CE76:$30	; [ 5 1 1 ] ; A7CE7A:-	; [ 5 1 1 9 ] ; A7CE7E:ROT	; [ 5 1 1 ] ; A7CE82:w8E	; [ 1 1 5 ] ; A7B226:1	; [ 1 1 5 ] ; A7B22A:<<	; [ 1 1 5 A ] ; A7B22E:DUP	; [ 1 1 5 ] ; A7B232:2	; [ 1 1 5 5 ] ; A7B236:<<	; [ 1 1 5 5 B ] ; A7B23A:+	; [ 1 1 5 5 ] ; A7CE86:+	; [ 1 1 5 ] ; A7CE8A:SWAP	; [ 1 1 ] ; A7CE8E:)	; [ 1 1 ] ; A7CE92:$2e	; [ 5 1 1 ] ; A7CE96:=?	; [ 5 1 1 C ] ; A7CE9A:(	; [ 5 1 1 ] ; A7CE9E:w105	; [ 5 1 1 ] ; A7CEA2:w109	; [ 5 1 0 ] ; A7CEA6:)	; [ 5 1 0 ] ; A7CEAA:DROP	; [ 5 1 1 ] ; A7CEAE:1	; [ 5 1 ] ; A7CEB2:-	; [ 5 1 D ] ; A7CEB6:SWAP	; [ 5 1 ] ; A7CEBA:16	; [ 1 5 ] ; A7CEBE:<<	; [ 1 5 E ] ; A7CEC2:$10000	; [ 1 5 ] ; A7CEC6:w103	; [ 1 5 F ] ; A7CECA:1	; [ 1 5 F 103 ] ; A7CECE:OVER	; [ 1 5 F 103 10 ] ; A7CED2:(	; [ 1 5 F 103 10 103 ] ; A7CED6:1	; [ 1 5 F 103 10 103 ] ; A7CEDA:>?	; [ 1 5 F 103 10 103 11 ] ; A7CEDE:10	; [ 1 5 F 103 10 103 ] ; A7CEE2:/	; [ 1 5 F 103 10 103 12 ] ; A7CEE6:SWAP	; [ 1 5 F 103 10 103 12 ] ; A7CEEA:w8E	; [ 1 5 F 103 10 12 103 ] ; A7B226:1	; [ 1 5 F 103 10 12 103 ] ; A7B22A:<<	; [ 1 5 F 103 10 12 103 13 ] ; A7B22E:DUP	; [ 1 5 F 103 10 12 103 ] ; A7B232:2	; [ 1 5 F 103 10 12 103 103 ] ; A7B236:<<	; [ 1 5 F 103 10 12 103 103 14 ] ; A7B23A:+	; [ 1 5 F 103 10 12 103 103 ] ; A7CEEE:SWAP	; [ 1 5 F 103 10 12 103 ] ; A7CEF2:)	; [ 1 5 F 103 10 103 12 ] ; A7CEF6:DROP	; [ 1 5 F 103 10 103 ] ; A7CEFA:*/	; [ 1 5 F 103 10 ] ; A7CEFE:$ffff	; [ 1 5 F ] ; A7CF02:AND	; [ 1 5 F 15 ] ; A7CF06:OR	; [ 1 5 F ] ; A7CF0A:w104	; [ 1 5 ] ; A7CF0E:0?	; [ 1 5 104 ] ; A7CF12:(	; [ 1 5 104 ] ; A7CF16:DROP	; [ 1 5 104 ] ; A7CF1A:;	; [ 1 5 ] ; A7CF1E:)	; [ 1 5 ] ; A7CF22:+?	; [ 1 5 104 ] ; A7CF26:(	; [ 1 5 104 ] ; A7CF2A:(	; [ 1 5 104 ] ; A7CF2E:1?	; [ 1 5 104 ] ; A7CF32:1	; [ 1 5 104 ] ; A7CF36:-	; [ 1 5 104 16 ] ; A7CF3A:SWAP	; [ 1 5 104 ] ; A7CF3E:w8E	; [ 1 104 5 ] ; A7B226:1	; [ 1 104 5 ] ; A7B22A:<<	; [ 1 104 5 17 ] ; A7B22E:DUP	; [ 1 104 5 ] ; A7B232:2	; [ 1 104 5 5 ] ; A7B236:<<	; [ 1 104 5 5 18 ] ; A7B23A:+	; [ 1 104 5 5 ] ; A7CF42:SWAP	; [ 1 104 5 ] ; A7CF46:)	; [ 1 5 104 ] ; A7CF4A:DROP	; [ 1 5 104 ] ; A7CF4E:;	; [ 1 5 ] ; A7CF52:)	; [ 1 5 ] ; A7CF56:(	; [ 1 5 104 ] ; A7CF5A:1?	; [ 1 5 104 ] ; A7CF5E:1	; [ 1 5 104 ] ; A7CF62:+	; [ 1 5 104 19 ] ; A7CF66:SWAP	; [ 1 5 104 ] ; A7CF6A:10	; [ 1 104 5 ] ; A7CF6E:/	; [ 1 104 5 1A ] ; A7CF72:SWAP	; [ 1 104 5 1A ] ; A7CF76:)	; [ 1 104 1A 5 ] ; A7CF7A:DROP	; [ 1 5 104 ] ; A7CF7E:;	; [ 1 5 ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'w103; OPTAV !mov qword[w103],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w104; OPTAV !mov qword[w104],raxmov rax,[rbp]sub rbp,8; wACcall wAC; wF9call wF9; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 33; OPTN <?cmp rax,33jge _o28; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o28:; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o29;; (; [jmp ja2Aanon2A:; NEGneg rax; ;ret; ]ja2A:add rbp,8mov [rbp],raxmov rax,anon2A; >Rpush raxmov rax,[rbp]sub rbp,8; )_o29:; DROPmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_i2B:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _o2B; $39; OPTN >?cmp rax,57jle _o2C; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret; )_o2C:; $30; OPTN -sub rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i2B_o2B:; $2e; OPTN =?cmp rax,46jne _o2D; (; w105call w105; w109call w109; )_o2D:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 16; OPTN <<shl rax,16; $10000add rbp,8mov [rbp],raxmov rax,65536; w103add rbp,8mov [rbp],raxmov rax,qword[w103]; 1add rbp,8mov [rbp],raxmov rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i2E:; 1; OPTN >?cmp rax,1jle _o2E; $66666667 ; calcadd rbp,8mov [rbp],raxmov rax,1717986919; $22 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,34; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i2E_o2E:; DROPmov rax,[rbp]sub rbp,8; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; $ffff; OPTN ANDand rax,65535; ORor rax,[rbp]sub rbp,8; w104add rbp,8mov [rbp],raxmov rax,qword[w104]; 0?or rax,raxjnz _o2F; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o2F:; +?or rax,raxjs _o30; (; (_i31:; 1?or rax,raxjz _o31;; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i31_o31:; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o30:; (_i32:; 1?or rax,raxjz _o32;; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; $66666667 ; calcadd rbp,8mov [rbp],raxmov rax,1717986919; $22 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,34; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i32_o32:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w162  |1001480|l     . I| calls:1 niv:1 len:36 (  --  )w162:;---------OPT; A7D882:wF7	; [ ] ; A7C57E:wC7	; [ ] ; A7C0AA:w44	; [ ] ; A7C0AE:w38	; [ ] ; A79D7E:w16	; [ ] ; A79D82:SYS0	; [ 16 ] ; A7C0B2:'wB3	; [ 16 ] ; A7C0B6:!	; [ 16 B3 ] ; A7C582:MEM	; [ ] ; A7C586:'wC8	; [ 0 ] ; A7C58A:!	; [ 0 C8 ] ; A7D886:w22	; [ ] ; A79C5E:w0	; [ ] ; A79C62:SYS0	; [ 0 ] ; A79C66:DROP	; [ 0 ] ; A7D88A:-10	; [ ] ; A7D88E:w24	; [ 0 ] ; A79C7A:w2	; [ 0 ] ; A79C7E:SYS1	; [ 0 2 ] ; A7D892:'w113	; [ 0 ] ; A7D896:!	; [ 0 113 ] ; A7D89A:-11	; [ ] ; A7D89E:w24	; [ 1 ] ; A79C7A:w2	; [ 1 ] ; A79C7E:SYS1	; [ 1 2 ] ; A7D8A2:'w114	; [ 1 ] ; A7D8A6:!	; [ 1 114 ] ; A7D8AA:-12	; [ ] ; A7D8AE:w24	; [ 2 ] ; A79C7A:w2	; [ 2 ] ; A79C7E:SYS1	; [ 2 2 ] ; A7D8B2:'w115	; [ 2 ] ; A7D8B6:!	; [ 2 115 ] ; A7D8BA:w113	; [ ] ; A7D8BE:'w161	; [ 113 ] ; A7D8C2:w27	; [ 113 161 ] ; A79C9E:w5	; [ 113 161 ] ; A79CA2:SYS2	; [ 113 161 5 ] ; A7D8C6:DROP	; [ 113 ] ; A7D8CA:w113	; [ ] ; A7D8CE:w161	; [ 113 ] ; A7D8D2:$1a	; [ 113 161 ] ; A7D8D6:NEG	; [ 113 161 3 ] ; A7D8DA:AND	; [ 113 161 3 ] ; A7D8DE:w28	; [ 113 161 ] ; A79CAA:w6	; [ 113 161 ] ; A79CAE:SYS2	; [ 113 161 6 ] ; A7D8E2:DROP	; [ 113 ] ; A7D8E6:w114	; [ ] ; A7D8EA:'w161	; [ 114 ] ; A7D8EE:w27	; [ 114 161 ] ; A79C9E:w5	; [ 114 161 ] ; A79CA2:SYS2	; [ 114 161 5 ] ; A7D8F2:DROP	; [ 114 ] ; A7D8F6:w114	; [ ] ; A7D8FA:w161	; [ 114 ] ; A7D8FE:$4	; [ 114 161 ] ; A7D902:OR	; [ 114 161 4 ] ; A7D906:w28	; [ 114 161 ] ; A79CAA:w6	; [ 114 161 ] ; A79CAE:SYS2	; [ 114 161 6 ] ; A7D90A:DROP	; [ 114 ] ; A7D90E:;	; [ ] ;---------ANA;---------GEN; w44call w44; w16add rbp,8mov [rbp],raxmov rax,qword[w16]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; 'wB3; OPTAV !mov qword[wB3],raxmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; w0add rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; w2add rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'w113; OPTAV !mov qword[w113],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; w2add rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'w114; OPTAV !mov qword[w114],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; w2add rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'w115; OPTAV !mov qword[w115],raxmov rax,[rbp]sub rbp,8; w113add rbp,8mov [rbp],raxmov rax,qword[w113]; 'w161add rbp,8mov [rbp],raxmov rax,w161; w5add rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; w113add rbp,8mov [rbp],raxmov rax,qword[w113]; w161add rbp,8mov [rbp],raxmov rax,qword[w161]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; w6add rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; w114add rbp,8mov [rbp],raxmov rax,qword[w114]; 'w161add rbp,8mov [rbp],raxmov rax,w161; w5add rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; w114add rbp,8mov [rbp],raxmov rax,qword[w114]; w161add rbp,8mov [rbp],raxmov rax,qword[w161]; $4; OPTN ORor rax,4; w6add rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w243  |1001480|l     . I| calls:1 niv:1 len:42 ( abc --  )w243:;---------OPT; A7DDB6:2DUP	; [ 2 1 0 ] ; A7DDBA:*	; [ 2 1 0 1 0 ] ; A7DDBE:'w241	; [ 2 1 0 1 ] ; A7DDC2:!	; [ 2 1 0 1 241 ] ; A7DDC6:'w23F	; [ 2 1 0 ] ; A7DDCA:!	; [ 2 1 0 23F ] ; A7DDCE:'w23E	; [ 2 1 ] ; A7DDD2:!	; [ 2 1 23E ] ; A7DDD6:$3231	; [ 2 ] ; A7DDDA:w20B	; [ 2 0 ] ; A7DAEA:w1DB	; [ 2 0 ] ; A7DAEE:SYS1	; [ 2 0 1DB ] ; A7DAF2:DROP	; [ 2 0 ] ; A7DDDE:$1FFF0000	; [ 2 ] ; A7DDE2:$1FFF0000	; [ 2 1 ] ; A7DDE6:w23E	; [ 2 1 2 ] ; A7DDEA:w23F	; [ 2 1 2 23E ] ; A7DDEE:$0	; [ 2 1 2 23E 23F ] ; A7DDF2:w20E	; [ 2 1 2 23E 23F 3 ] ; A7DB16:w1DE	; [ 2 1 2 23E 23F 3 ] ; A7DB1A:SYS6	; [ 2 1 2 23E 23F 3 1DE ] ; A7DDF6:DUP	; [ 2 ] ; A7DDFA:'w23B	; [ 2 2 ] ; A7DDFE:!	; [ 2 2 23B ] ; A7DE02:w211	; [ 2 ] ; A7DB42:w1E0	; [ 2 ] ; A7DB46:SYS1	; [ 2 1E0 ] ; A7DE06:DUP	; [ 2 ] ; A7DE0A:'w23C	; [ 2 2 ] ; A7DE0E:!	; [ 2 2 23C ] ; A7DE12:24	; [ 2 ] ; A7DE16:+	; [ 2 4 ] ; A7DE1A:D@+	; [ 2 ] ; A7DE1E:'w240	; [ 2 2 ] ; A7DE22:!	; [ 2 2 240 ] ; A7DE26:4	; [ 2 ] ; A7DE2A:+	; [ 2 5 ] ; A7DE2E:@	; [ 2 ] ; A7DE32:'w242	; [ 2 ] ; A7DE36:!	; [ 2 242 ] ; A7DE3A:w23B	; [ ] ; A7DE3E:-1	; [ 23B ] ; A7DE42:0	; [ 23B 6 ] ; A7DE46:w215	; [ 23B 6 7 ] ; A7DB7E:w1E5	; [ 23B 6 7 ] ; A7DB82:SYS3	; [ 23B 6 7 1E5 ] ; A7DE4A:'w23D	; [ 23B ] ; A7DE4E:!	; [ 23B 23D ] ; A7DE52:w23B	; [ ] ; A7DE56:w210	; [ 23B ] ; A7DB32:w1E1	; [ 23B ] ; A7DB36:SYS1	; [ 23B 1E1 ] ; A7DB3A:DROP	; [ 23B ] ; A7DE5A:;	; [ ] ;---------ANA;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; *imul rax,[rbp]sub rbp,8; 'w241; OPTAV !mov qword[w241],raxmov rax,[rbp]sub rbp,8; 'w23F; OPTAV !mov qword[w23F],raxmov rax,[rbp]sub rbp,8; 'w23E; OPTAV !mov qword[w23E],raxmov rax,[rbp]sub rbp,8; $3231add rbp,8mov [rbp],raxmov rax,12849; w1DBadd rbp,8mov [rbp],raxmov rax,qword[w1DB]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; w23Eadd rbp,8mov [rbp],raxmov rax,qword[w23E]; w23Fadd rbp,8mov [rbp],raxmov rax,qword[w23F]; $0add rbp,8mov [rbp],raxxor rax,rax; w1DEadd rbp,8mov [rbp],raxmov rax,qword[w1DE]; SYS6PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rdx,[rbp]mov [rsp+$28],rdxmov rcx,[rbp-1*8]mov [rsp+$20],rcxmov r9,[rbp-2*8]mov r8,[rbp-3*8]mov rdx,[rbp-4*8]mov rcx,[rbp-5*8]call raxsub rbp,8*6add RSP,$30POP RSP; DUPadd rbp,8mov [rbp],rax; 'w23B; OPTAV !mov qword[w23B],raxmov rax,[rbp]sub rbp,8; w1E0add rbp,8mov [rbp],raxmov rax,qword[w1E0]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DUPadd rbp,8mov [rbp],rax; 'w23C; OPTAV !mov qword[w23C],raxmov rax,[rbp]sub rbp,8; 24; OPTN +add rax,24; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'w240; OPTAV !mov qword[w240],raxmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; @mov rax,qword[rax]; 'w242; OPTAV !mov qword[w242],raxmov rax,[rbp]sub rbp,8; w23Badd rbp,8mov [rbp],raxmov rax,qword[w23B]; -1add rbp,8mov [rbp],raxmov rax,-1; 0add rbp,8mov [rbp],raxxor rax,rax; w1E5add rbp,8mov [rbp],raxmov rax,qword[w1E5]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; 'w23D; OPTAV !mov qword[w23D],raxmov rax,[rbp]sub rbp,8; w23Badd rbp,8mov [rbp],raxmov rax,qword[w23B]; w1E1add rbp,8mov [rbp],raxmov rax,qword[w1E1]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w24E  |1001480|l     . I| calls:1 niv:1 len:103 (  --  )w24E:;---------OPT; A7DF22:0	; [ ] ; A7DF26:'w249	; [ 0 ] ; A7DF2A:!	; [ 0 249 ] ; A7DF2E:0	; [ ] ; A7DF32:'w24A	; [ 1 ] ; A7DF36:!	; [ 1 24A ] ; A7DF3A:10	; [ ] ; A7DF3E:w230	; [ 2 ] ; A7DD16:w1FF	; [ 2 ] ; A7DD1A:SYS1	; [ 2 1FF ] ; A7DD1E:DROP	; [ 2 ] ; A7DF42:(	; [ ] ; A7DF46:'w248	; [ ] ; A7DF4A:w231	; [ 248 ] ; A7DD26:w200	; [ 248 ] ; A7DD2A:SYS1	; [ 248 200 ] ; A7DF4E:1?	; [ 248 ] ; A7DF52:DROP	; [ 248 ] ; A7DF56:'w248	; [ ] ; A7DF5A:D@	; [ 248 ] ; A7DF5E:$300	; [ 248 ] ; A7DF62:=?	; [ 248 3 ] ; A7DF66:(	; [ 248 ] ; A7DF6A:'w248	; [ 248 ] ; A7DF6E:20	; [ 248 248 ] ; A7DF72:+	; [ 248 248 4 ] ; A7DF76:D@	; [ 248 248 ] ; A7DF7A:DUP	; [ 248 248 ] ; A7DF7E:$ffff	; [ 248 248 248 ] ; A7DF82:AND	; [ 248 248 248 5 ] ; A7DF86:SWAP	; [ 248 248 248 ] ; A7DF8A:16	; [ 248 248 248 ] ; A7DF8E:>>	; [ 248 248 248 6 ] ; A7DF92:OR	; [ 248 248 248 ] ; A7DF96:'w249	; [ 248 248 ] ; A7DF9A:!	; [ 248 248 249 ] ; A7DF9E:)	; [ 248 ] ; A7DFA2:$301	; [ 248 ] ; A7DFA6:=?	; [ 248 7 ] ; A7DFAA:(	; [ 248 ] ; A7DFAE:'w248	; [ 248 ] ; A7DFB2:20	; [ 248 248 ] ; A7DFB6:+	; [ 248 248 8 ] ; A7DFBA:D@	; [ 248 248 ] ; A7DFBE:DUP	; [ 248 248 ] ; A7DFC2:$ffff	; [ 248 248 248 ] ; A7DFC6:AND	; [ 248 248 248 9 ] ; A7DFCA:SWAP	; [ 248 248 248 ] ; A7DFCE:16	; [ 248 248 248 ] ; A7DFD2:>>	; [ 248 248 248 A ] ; A7DFD6:OR	; [ 248 248 248 ] ; A7DFDA:$1000	; [ 248 248 ] ; A7DFDE:OR	; [ 248 248 B ] ; A7DFE2:'w249	; [ 248 248 ] ; A7DFE6:!	; [ 248 248 249 ] ; A7DFEA:)	; [ 248 ] ; A7DFEE:$303	; [ 248 ] ; A7DFF2:=?	; [ 248 C ] ; A7DFF6:(	; [ 248 ] ; A7DFFA:'w248	; [ 248 ] ; A7DFFE:12	; [ 248 248 ] ; A7E002:+	; [ 248 248 D ] ; A7E006:C@	; [ 248 248 ] ; A7E00A:'w24A	; [ 248 248 ] ; A7E00E:!	; [ 248 248 24A ] ; A7E012:)	; [ 248 ] ; A7E016:$400	; [ 248 ] ; A7E01A:=?	; [ 248 E ] ; A7E01E:(	; [ 248 ] ; A7E022:'w248	; [ 248 ] ; A7E026:20	; [ 248 248 ] ; A7E02A:+	; [ 248 248 F ] ; A7E02E:D@+	; [ 248 248 ] ; A7E032:'w24B	; [ 248 248 248 ] ; A7E036:!	; [ 248 248 248 24B ] ; A7E03A:D@	; [ 248 248 ] ; A7E03E:'w24C	; [ 248 248 ] ; A7E042:!	; [ 248 248 24C ] ; A7E046:)	; [ 248 ] ; A7E04A:$401	; [ 248 ] ; A7E04E:=?	; [ 248 10 ] ; A7E052:(	; [ 248 ] ; A7E056:'w248	; [ 248 ] ; A7E05A:16	; [ 248 248 ] ; A7E05E:+	; [ 248 248 11 ] ; A7E062:C@	; [ 248 248 ] ; A7E066:w24D	; [ 248 248 ] ; A7E06A:OR	; [ 248 248 24D ] ; A7E06E:'w24D	; [ 248 248 ] ; A7E072:!	; [ 248 248 24D ] ; A7E076:)	; [ 248 ] ; A7E07A:$402	; [ 248 ] ; A7E07E:=?	; [ 248 12 ] ; A7E082:(	; [ 248 ] ; A7E086:'w248	; [ 248 ] ; A7E08A:16	; [ 248 248 ] ; A7E08E:+	; [ 248 248 13 ] ; A7E092:C@	; [ 248 248 ] ; A7E096:NOT	; [ 248 248 ] ; A7E09A:w24D	; [ 248 248 ] ; A7E09E:AND	; [ 248 248 24D ] ; A7E0A2:'w24D	; [ 248 248 ] ; A7E0A6:!	; [ 248 248 24D ] ; A7E0AA:)	; [ 248 ] ; A7E0AE:DROP	; [ 248 ] ; A7E0B2:)	; [ ] ; A7E0B6:DROP	; [ 248 ] ; A7E0BA:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'w249; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w24A; OPTAV !mov qword[w24A],raxmov rax,[rbp]sub rbp,8; 10add rbp,8mov [rbp],raxmov rax,10; w1FFadd rbp,8mov [rbp],raxmov rax,qword[w1FF]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; (_i33:; 'w248add rbp,8mov [rbp],raxmov rax,w248; w200add rbp,8mov [rbp],raxmov rax,qword[w200]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 1?or rax,raxjz _o33;; DROPmov rax,[rbp]sub rbp,8; 'w248; OPTAV D@add rbp,8mov [rbp],raxmovsxd rax,dword [w248]; $300; OPTN =?cmp rax,768jne _o34; (; 'w248add rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; 'w249; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; )_o34:; $301; OPTN =?cmp rax,769jne _o35; (; 'w248add rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; $1000; OPTN ORor rax,4096; 'w249; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; )_o35:; $303; OPTN =?cmp rax,771jne _o36; (; 'w248add rbp,8mov [rbp],raxmov rax,w248; 12; OPTN +add rax,12; C@movsx rax,byte [rax]; 'w24A; OPTAV !mov qword[w24A],raxmov rax,[rbp]sub rbp,8; )_o36:; $400; OPTN =?cmp rax,1024jne _o37; (; 'w248add rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'w24B; OPTAV !mov qword[w24B],raxmov rax,[rbp]sub rbp,8; D@movsxd rax,dword [rax]; 'w24C; OPTAV !mov qword[w24C],raxmov rax,[rbp]sub rbp,8; )_o37:; $401; OPTN =?cmp rax,1025jne _o38; (; 'w248add rbp,8mov [rbp],raxmov rax,w248; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; w24D; OPTV ORor rax,qword[w24D]; 'w24D; OPTAV !mov qword[w24D],raxmov rax,[rbp]sub rbp,8; )_o38:; $402; OPTN =?cmp rax,1026jne _o39; (; 'w248add rbp,8mov [rbp],raxmov rax,w248; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; NOTnot rax; w24D; OPTV ANDand rax,qword[w24D]; 'w24D; OPTAV !mov qword[w24D],raxmov rax,[rbp]sub rbp,8; )_o39:; DROPmov rax,[rbp]sub rbp,8; )jmp _i33_o33:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w252  |1001080|l     .  | calls:1 niv:1 len:16 ( a --  )w252:;---------OPT; A7E11A:0	; [ 0 ] ; A7E11E:'w251	; [ 0 0 ] ; A7E122:!	; [ 0 0 251 ] ; A7E126:(	; [ 0 ] ; A7E12A:w251	; [ 0 ] ; A7E12E:0?	; [ 0 251 ] ; A7E132:DROP	; [ 0 251 ] ; A7E136:w24E	; [ 0 ] ; A7E13A:DUP	; [ 0 ] ; A7E13E:EX	; [ 0 0 ] ; A7E142:)	; [ 0 0 ] ; A7E146:2DROP	; [ 0 251 ] ; A7E14A:0	; [ ] ; A7E14E:'w251	; [ 1 ] ; A7E152:!	; [ 1 251 ] ; A7E156:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'w251; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; (_i3A:; w251add rbp,8mov [rbp],raxmov rax,qword[w251]; 0?or rax,raxjnz _o3A; DROPmov rax,[rbp]sub rbp,8; w24Ecall w24E; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )jmp _i3A_o3A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; 'w251; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w254  |2001080|l     .  | calls:1 niv:2 len:235 (  --  )w254:;---------OPT; A7E16A:w162	; [ ] ; A7E16E:"SDL2.DLL"	; [ ] ; A7E172:LOADLIB	; [ 4BB2 ] ; A7E176:DUP	; [ 4BB2 ] ; A7E17A:"SDL_Init"	; [ 4BB2 4BB2 ] ; A7E17E:GETPROC	; [ 4BB2 4BB2 4BC9 ] ; A7E182:'w1DB	; [ 4BB2 4BB2 ] ; A7E186:!	; [ 4BB2 4BB2 1DB ] ; A7E18A:DUP	; [ 4BB2 ] ; A7E18E:"SDL_Quit"	; [ 4BB2 4BB2 ] ; A7E192:GETPROC	; [ 4BB2 4BB2 4BE8 ] ; A7E196:'w1DC	; [ 4BB2 4BB2 ] ; A7E19A:!	; [ 4BB2 4BB2 1DC ] ; A7E19E:DUP	; [ 4BB2 ] ; A7E1A2:"SDL_GetNumVideoDisplays"	; [ 4BB2 4BB2 ] ; A7E1A6:GETPROC	; [ 4BB2 4BB2 4C07 ] ; A7E1AA:'w1DD	; [ 4BB2 4BB2 ] ; A7E1AE:!	; [ 4BB2 4BB2 1DD ] ; A7E1B2:DUP	; [ 4BB2 ] ; A7E1B6:"SDL_CreateWindow"	; [ 4BB2 4BB2 ] ; A7E1BA:GETPROC	; [ 4BB2 4BB2 4C35 ] ; A7E1BE:'w1DE	; [ 4BB2 4BB2 ] ; A7E1C2:!	; [ 4BB2 4BB2 1DE ] ; A7E1C6:DUP	; [ 4BB2 ] ; A7E1CA:"SDL_SetWindowFullscreen"	; [ 4BB2 4BB2 ] ; A7E1CE:GETPROC	; [ 4BB2 4BB2 4C5C ] ; A7E1D2:'w1DF	; [ 4BB2 4BB2 ] ; A7E1D6:!	; [ 4BB2 4BB2 1DF ] ; A7E1DA:DUP	; [ 4BB2 ] ; A7E1DE:"SDL_GetWindowSurface"	; [ 4BB2 4BB2 ] ; A7E1E2:GETPROC	; [ 4BB2 4BB2 4C8A ] ; A7E1E6:'w1E0	; [ 4BB2 4BB2 ] ; A7E1EA:!	; [ 4BB2 4BB2 1E0 ] ; A7E1EE:DUP	; [ 4BB2 ] ; A7E1F2:"SDL_ShowCursor"	; [ 4BB2 4BB2 ] ; A7E1F6:GETPROC	; [ 4BB2 4BB2 4CB5 ] ; A7E1FA:'w1E2	; [ 4BB2 4BB2 ] ; A7E1FE:!	; [ 4BB2 4BB2 1E2 ] ; A7E202:DUP	; [ 4BB2 ] ; A7E206:"SDL_RaiseWindow"	; [ 4BB2 4BB2 ] ; A7E20A:GETPROC	; [ 4BB2 4BB2 4CDA ] ; A7E20E:'w1E1	; [ 4BB2 4BB2 ] ; A7E212:!	; [ 4BB2 4BB2 1E1 ] ; A7E216:DUP	; [ 4BB2 ] ; A7E21A:"SDL_UpdateWindowSurface"	; [ 4BB2 4BB2 ] ; A7E21E:GETPROC	; [ 4BB2 4BB2 4D00 ] ; A7E222:'w1E3	; [ 4BB2 4BB2 ] ; A7E226:!	; [ 4BB2 4BB2 1E3 ] ; A7E22A:DUP	; [ 4BB2 ] ; A7E22E:"SDL_DestroyWindow"	; [ 4BB2 4BB2 ] ; A7E232:GETPROC	; [ 4BB2 4BB2 4D2E ] ; A7E236:'w1E4	; [ 4BB2 4BB2 ] ; A7E23A:!	; [ 4BB2 4BB2 1E4 ] ; A7E23E:DUP	; [ 4BB2 ] ; A7E242:"SDL_CreateRenderer"	; [ 4BB2 4BB2 ] ; A7E246:GETPROC	; [ 4BB2 4BB2 4D56 ] ; A7E24A:'w1E5	; [ 4BB2 4BB2 ] ; A7E24E:!	; [ 4BB2 4BB2 1E5 ] ; A7E252:DUP	; [ 4BB2 ] ; A7E256:"SDL_CreateTexture"	; [ 4BB2 4BB2 ] ; A7E25A:GETPROC	; [ 4BB2 4BB2 4D7F ] ; A7E25E:'w1E6	; [ 4BB2 4BB2 ] ; A7E262:!	; [ 4BB2 4BB2 1E6 ] ; A7E266:DUP	; [ 4BB2 ] ; A7E26A:"SDL_DestroyTexture"	; [ 4BB2 4BB2 ] ; A7E26E:GETPROC	; [ 4BB2 4BB2 4DA7 ] ; A7E272:'w1E7	; [ 4BB2 4BB2 ] ; A7E276:!	; [ 4BB2 4BB2 1E7 ] ; A7E27A:DUP	; [ 4BB2 ] ; A7E27E:"SDL_DestroyRenderer"	; [ 4BB2 4BB2 ] ; A7E282:GETPROC	; [ 4BB2 4BB2 4DD0 ] ; A7E286:'w1E8	; [ 4BB2 4BB2 ] ; A7E28A:!	; [ 4BB2 4BB2 1E8 ] ; A7E28E:DUP	; [ 4BB2 ] ; A7E292:"SDL_UpdateTexture"	; [ 4BB2 4BB2 ] ; A7E296:GETPROC	; [ 4BB2 4BB2 4DFA ] ; A7E29A:'w1E9	; [ 4BB2 4BB2 ] ; A7E29E:!	; [ 4BB2 4BB2 1E9 ] ; A7E2A2:DUP	; [ 4BB2 ] ; A7E2A6:"SDL_RenderClear"	; [ 4BB2 4BB2 ] ; A7E2AA:GETPROC	; [ 4BB2 4BB2 4E22 ] ; A7E2AE:'w1EA	; [ 4BB2 4BB2 ] ; A7E2B2:!	; [ 4BB2 4BB2 1EA ] ; A7E2B6:DUP	; [ 4BB2 ] ; A7E2BA:"SDL_RenderCopy"	; [ 4BB2 4BB2 ] ; A7E2BE:GETPROC	; [ 4BB2 4BB2 4E48 ] ; A7E2C2:'w1EB	; [ 4BB2 4BB2 ] ; A7E2C6:!	; [ 4BB2 4BB2 1EB ] ; A7E2CA:DUP	; [ 4BB2 ] ; A7E2CE:"SDL_RenderCopyEx"	; [ 4BB2 4BB2 ] ; A7E2D2:GETPROC	; [ 4BB2 4BB2 4E6D ] ; A7E2D6:'w1EC	; [ 4BB2 4BB2 ] ; A7E2DA:!	; [ 4BB2 4BB2 1EC ] ; A7E2DE:DUP	; [ 4BB2 ] ; A7E2E2:"SDL_RenderPresent"	; [ 4BB2 4BB2 ] ; A7E2E6:GETPROC	; [ 4BB2 4BB2 4E94 ] ; A7E2EA:'w1ED	; [ 4BB2 4BB2 ] ; A7E2EE:!	; [ 4BB2 4BB2 1ED ] ; A7E2F2:DUP	; [ 4BB2 ] ; A7E2F6:"SDL_CreateTextureFromSurface"	; [ 4BB2 4BB2 ] ; A7E2FA:GETPROC	; [ 4BB2 4BB2 4EBC ] ; A7E2FE:'w1EF	; [ 4BB2 4BB2 ] ; A7E302:!	; [ 4BB2 4BB2 1EF ] ; A7E306:DUP	; [ 4BB2 ] ; A7E30A:"SDL_QueryTexture"	; [ 4BB2 4BB2 ] ; A7E30E:GETPROC	; [ 4BB2 4BB2 4EEF ] ; A7E312:'w1F0	; [ 4BB2 4BB2 ] ; A7E316:!	; [ 4BB2 4BB2 1F0 ] ; A7E31A:DUP	; [ 4BB2 ] ; A7E31E:"SDL_SetTextureColorMod"	; [ 4BB2 4BB2 ] ; A7E322:GETPROC	; [ 4BB2 4BB2 4F16 ] ; A7E326:'w20A	; [ 4BB2 4BB2 ] ; A7E32A:!	; [ 4BB2 4BB2 20A ] ; A7E32E:DUP	; [ 4BB2 ] ; A7E332:"SDL_SetRenderDrawColor"	; [ 4BB2 4BB2 ] ; A7E336:GETPROC	; [ 4BB2 4BB2 4F43 ] ; A7E33A:'w1EE	; [ 4BB2 4BB2 ] ; A7E33E:!	; [ 4BB2 4BB2 1EE ] ; A7E342:DUP	; [ 4BB2 ] ; A7E346:"SDL_LockSurface"	; [ 4BB2 4BB2 ] ; A7E34A:GETPROC	; [ 4BB2 4BB2 4F70 ] ; A7E34E:'w1F1	; [ 4BB2 4BB2 ] ; A7E352:!	; [ 4BB2 4BB2 1F1 ] ; A7E356:DUP	; [ 4BB2 ] ; A7E35A:"SDL_UnlockSurface"	; [ 4BB2 4BB2 ] ; A7E35E:GETPROC	; [ 4BB2 4BB2 4F96 ] ; A7E362:'w1F2	; [ 4BB2 4BB2 ] ; A7E366:!	; [ 4BB2 4BB2 1F2 ] ; A7E36A:DUP	; [ 4BB2 ] ; A7E36E:"SDL_FreeSurface"	; [ 4BB2 4BB2 ] ; A7E372:GETPROC	; [ 4BB2 4BB2 4FBE ] ; A7E376:'w1F3	; [ 4BB2 4BB2 ] ; A7E37A:!	; [ 4BB2 4BB2 1F3 ] ; A7E37E:DUP	; [ 4BB2 ] ; A7E382:"SDL_LockTexture"	; [ 4BB2 4BB2 ] ; A7E386:GETPROC	; [ 4BB2 4BB2 4FE4 ] ; A7E38A:'w1F4	; [ 4BB2 4BB2 ] ; A7E38E:!	; [ 4BB2 4BB2 1F4 ] ; A7E392:DUP	; [ 4BB2 ] ; A7E396:"SDL_UnlockTexture"	; [ 4BB2 4BB2 ] ; A7E39A:GETPROC	; [ 4BB2 4BB2 500A ] ; A7E39E:'w1F5	; [ 4BB2 4BB2 ] ; A7E3A2:!	; [ 4BB2 4BB2 1F5 ] ; A7E3A6:DUP	; [ 4BB2 ] ; A7E3AA:"SDL_RenderSetLogicalSize"	; [ 4BB2 4BB2 ] ; A7E3AE:GETPROC	; [ 4BB2 4BB2 5032 ] ; A7E3B2:'w1F6	; [ 4BB2 4BB2 ] ; A7E3B6:!	; [ 4BB2 4BB2 1F6 ] ; A7E3BA:DUP	; [ 4BB2 ] ; A7E3BE:"SDL_SetRenderDrawBlendMode"	; [ 4BB2 4BB2 ] ; A7E3C2:GETPROC	; [ 4BB2 4BB2 5061 ] ; A7E3C6:'w1F7	; [ 4BB2 4BB2 ] ; A7E3CA:!	; [ 4BB2 4BB2 1F7 ] ; A7E3CE:DUP	; [ 4BB2 ] ; A7E3D2:"SDL_SetTextureBlendMode"	; [ 4BB2 4BB2 ] ; A7E3D6:GETPROC	; [ 4BB2 4BB2 5092 ] ; A7E3DA:'w1F8	; [ 4BB2 4BB2 ] ; A7E3DE:!	; [ 4BB2 4BB2 1F8 ] ; A7E3E2:DUP	; [ 4BB2 ] ; A7E3E6:"SDL_ConvertSurfaceFormat"	; [ 4BB2 4BB2 ] ; A7E3EA:GETPROC	; [ 4BB2 4BB2 50C0 ] ; A7E3EE:'w1F9	; [ 4BB2 4BB2 ] ; A7E3F2:!	; [ 4BB2 4BB2 1F9 ] ; A7E3F6:DUP	; [ 4BB2 ] ; A7E3FA:"SDL_RenderDrawPoint"	; [ 4BB2 4BB2 ] ; A7E3FE:GETPROC	; [ 4BB2 4BB2 50EF ] ; A7E402:'w1FA	; [ 4BB2 4BB2 ] ; A7E406:!	; [ 4BB2 4BB2 1FA ] ; A7E40A:DUP	; [ 4BB2 ] ; A7E40E:"SDL_RenderDrawLine"	; [ 4BB2 4BB2 ] ; A7E412:GETPROC	; [ 4BB2 4BB2 5119 ] ; A7E416:'w1FB	; [ 4BB2 4BB2 ] ; A7E41A:!	; [ 4BB2 4BB2 1FB ] ; A7E41E:DUP	; [ 4BB2 ] ; A7E422:"SDL_RenderDrawRect"	; [ 4BB2 4BB2 ] ; A7E426:GETPROC	; [ 4BB2 4BB2 5142 ] ; A7E42A:'w1FC	; [ 4BB2 4BB2 ] ; A7E42E:!	; [ 4BB2 4BB2 1FC ] ; A7E432:DUP	; [ 4BB2 ] ; A7E436:"SDL_RenderFillRect"	; [ 4BB2 4BB2 ] ; A7E43A:GETPROC	; [ 4BB2 4BB2 516B ] ; A7E43E:'w1FD	; [ 4BB2 4BB2 ] ; A7E442:!	; [ 4BB2 4BB2 1FD ] ; A7E446:DUP	; [ 4BB2 ] ; A7E44A:"SDL_RenderReadPixels"	; [ 4BB2 4BB2 ] ; A7E44E:GETPROC	; [ 4BB2 4BB2 5194 ] ; A7E452:'w1FE	; [ 4BB2 4BB2 ] ; A7E456:!	; [ 4BB2 4BB2 1FE ] ; A7E45A:DUP	; [ 4BB2 ] ; A7E45E:"SDL_Delay"	; [ 4BB2 4BB2 ] ; A7E462:GETPROC	; [ 4BB2 4BB2 51BF ] ; A7E466:'w1FF	; [ 4BB2 4BB2 ] ; A7E46A:!	; [ 4BB2 4BB2 1FF ] ; A7E46E:DUP	; [ 4BB2 ] ; A7E472:"SDL_PollEvent"	; [ 4BB2 4BB2 ] ; A7E476:GETPROC	; [ 4BB2 4BB2 51DF ] ; A7E47A:'w200	; [ 4BB2 4BB2 ] ; A7E47E:!	; [ 4BB2 4BB2 200 ] ; A7E482:DUP	; [ 4BB2 ] ; A7E486:"SDL_GetTicks"	; [ 4BB2 4BB2 ] ; A7E48A:GETPROC	; [ 4BB2 4BB2 5203 ] ; A7E48E:'w201	; [ 4BB2 4BB2 ] ; A7E492:!	; [ 4BB2 4BB2 201 ] ; A7E496:DUP	; [ 4BB2 ] ; A7E49A:"SDL_RWFromFile"	; [ 4BB2 4BB2 ] ; A7E49E:GETPROC	; [ 4BB2 4BB2 5226 ] ; A7E4A2:'w204	; [ 4BB2 4BB2 ] ; A7E4A6:!	; [ 4BB2 4BB2 204 ] ; A7E4AA:DUP	; [ 4BB2 ] ; A7E4AE:"SDL_GL_SetAttribute"	; [ 4BB2 4BB2 ] ; A7E4B2:GETPROC	; [ 4BB2 4BB2 524B ] ; A7E4B6:'w205	; [ 4BB2 4BB2 ] ; A7E4BA:!	; [ 4BB2 4BB2 205 ] ; A7E4BE:DUP	; [ 4BB2 ] ; A7E4C2:"SDL_GL_CreateContext"	; [ 4BB2 4BB2 ] ; A7E4C6:GETPROC	; [ 4BB2 4BB2 5275 ] ; A7E4CA:'w206	; [ 4BB2 4BB2 ] ; A7E4CE:!	; [ 4BB2 4BB2 206 ] ; A7E4D2:DUP	; [ 4BB2 ] ; A7E4D6:"SDL_GL_DeleteContext"	; [ 4BB2 4BB2 ] ; A7E4DA:GETPROC	; [ 4BB2 4BB2 52A0 ] ; A7E4DE:'w207	; [ 4BB2 4BB2 ] ; A7E4E2:!	; [ 4BB2 4BB2 207 ] ; A7E4E6:DUP	; [ 4BB2 ] ; A7E4EA:"SDL_GL_SetSwapInterval"	; [ 4BB2 4BB2 ] ; A7E4EE:GETPROC	; [ 4BB2 4BB2 52CB ] ; A7E4F2:'w208	; [ 4BB2 4BB2 ] ; A7E4F6:!	; [ 4BB2 4BB2 208 ] ; A7E4FA:DUP	; [ 4BB2 ] ; A7E4FE:"SDL_GL_SwapWindow"	; [ 4BB2 4BB2 ] ; A7E502:GETPROC	; [ 4BB2 4BB2 52F8 ] ; A7E506:'w209	; [ 4BB2 4BB2 ] ; A7E50A:!	; [ 4BB2 4BB2 209 ] ; A7E50E:DROP	; [ 4BB2 ] ; A7E512:;	; [ ] ;---------ANA;---------GEN; w162call w162; "SDL2.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str4BB2; DUPadd rbp,8mov [rbp],rax; "SDL_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4BC9; 'w1DB; OPTAV !mov qword[w1DB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4BE8; 'w1DC; OPTAV !mov qword[w1DC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetNumVideoDisplays"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4C07; 'w1DD; OPTAV !mov qword[w1DD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4C35; 'w1DE; OPTAV !mov qword[w1DE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetWindowFullscreen"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4C5C; 'w1DF; OPTAV !mov qword[w1DF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4C8A; 'w1E0; OPTAV !mov qword[w1E0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ShowCursor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4CB5; 'w1E2; OPTAV !mov qword[w1E2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RaiseWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4CDA; 'w1E1; OPTAV !mov qword[w1E1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4D00; 'w1E3; OPTAV !mov qword[w1E3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4D2E; 'w1E4; OPTAV !mov qword[w1E4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4D56; 'w1E5; OPTAV !mov qword[w1E5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4D7F; 'w1E6; OPTAV !mov qword[w1E6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4DA7; 'w1E7; OPTAV !mov qword[w1E7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4DD0; 'w1E8; OPTAV !mov qword[w1E8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4DFA; 'w1E9; OPTAV !mov qword[w1E9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderClear"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4E22; 'w1EA; OPTAV !mov qword[w1EA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopy"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4E48; 'w1EB; OPTAV !mov qword[w1EB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopyEx"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4E6D; 'w1EC; OPTAV !mov qword[w1EC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderPresent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4E94; 'w1ED; OPTAV !mov qword[w1ED],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTextureFromSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4EBC; 'w1EF; OPTAV !mov qword[w1EF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_QueryTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4EEF; 'w1F0; OPTAV !mov qword[w1F0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureColorMod"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4F16; 'w20A; OPTAV !mov qword[w20A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawColor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4F43; 'w1EE; OPTAV !mov qword[w1EE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4F70; 'w1F1; OPTAV !mov qword[w1F1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4F96; 'w1F2; OPTAV !mov qword[w1F2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_FreeSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4FBE; 'w1F3; OPTAV !mov qword[w1F3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4FE4; 'w1F4; OPTAV !mov qword[w1F4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str500A; 'w1F5; OPTAV !mov qword[w1F5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderSetLogicalSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5032; 'w1F6; OPTAV !mov qword[w1F6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5061; 'w1F7; OPTAV !mov qword[w1F7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5092; 'w1F8; OPTAV !mov qword[w1F8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ConvertSurfaceFormat"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str50C0; 'w1F9; OPTAV !mov qword[w1F9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawPoint"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str50EF; 'w1FA; OPTAV !mov qword[w1FA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawLine"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5119; 'w1FB; OPTAV !mov qword[w1FB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5142; 'w1FC; OPTAV !mov qword[w1FC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderFillRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str516B; 'w1FD; OPTAV !mov qword[w1FD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderReadPixels"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5194; 'w1FE; OPTAV !mov qword[w1FE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Delay"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str51BF; 'w1FF; OPTAV !mov qword[w1FF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_PollEvent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str51DF; 'w200; OPTAV !mov qword[w200],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetTicks"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5203; 'w201; OPTAV !mov qword[w201],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RWFromFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5226; 'w204; OPTAV !mov qword[w204],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetAttribute"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str524B; 'w205; OPTAV !mov qword[w205],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_CreateContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5275; 'w206; OPTAV !mov qword[w206],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_DeleteContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str52A0; 'w207; OPTAV !mov qword[w207],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetSwapInterval"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str52CB; 'w208; OPTAV !mov qword[w208],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SwapWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str52F8; 'w209; OPTAV !mov qword[w209],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w255  |1002480|l     . I| calls:2 niv:1 len:19 ( a --  )w255:;---------OPT; A7E516:w23D	; [ 0 ] ; A7E51A:SWAP	; [ 0 23D ] ; A7E51E:DUP	; [ 23D 0 ] ; A7E522:16	; [ 23D 0 0 ] ; A7E526:>>	; [ 23D 0 0 0 ] ; A7E52A:$ff	; [ 23D 0 0 ] ; A7E52E:AND	; [ 23D 0 0 1 ] ; A7E532:SWAP	; [ 23D 0 0 ] ; A7E536:DUP	; [ 23D 0 0 ] ; A7E53A:8	; [ 23D 0 0 0 ] ; A7E53E:>>	; [ 23D 0 0 0 2 ] ; A7E542:$ff	; [ 23D 0 0 0 ] ; A7E546:AND	; [ 23D 0 0 0 3 ] ; A7E54A:SWAP	; [ 23D 0 0 0 ] ; A7E54E:$ff	; [ 23D 0 0 0 ] ; A7E552:AND	; [ 23D 0 0 0 4 ] ; A7E556:$ff	; [ 23D 0 0 0 ] ; A7E55A:w221	; [ 23D 0 0 0 5 ] ; A7DC2A:w1EE	; [ 23D 0 0 0 5 ] ; A7DC2E:SYS5	; [ 23D 0 0 0 5 1EE ] ; A7DC32:DROP	; [ 23D ] ; A7E55E:;	; [ ] ;---------ANA;---------GEN; w23Dadd rbp,8mov [rbp],raxmov rax,qword[w23D]; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; $ff; OPTN ANDand rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; w1EEadd rbp,8mov [rbp],raxmov rax,qword[w1EE]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w257  |1003480|l     . I| calls:3 niv:1 len:11 ( abcd --  )w257:;---------OPT; A7E576:>R	; [ 3 2 1 0 ] ; A7E57A:>R	; [ 3 2 1 ] ; A7E57E:>R	; [ 3 2 ] ; A7E582:>R	; [ 3 ] ; A7E586:w23D	; [ ] ; A7E58A:R>	; [ 23D ] ; A7E58E:R>	; [ 23D 23D ] ; A7E592:R>	; [ 23D 23D 23D ] ; A7E596:R>	; [ 23D 23D 23D 23D ] ; A7E59A:w22C	; [ 23D 23D 23D 23D 23D ] ; A7DCD6:w1FB	; [ 23D 23D 23D 23D 23D ] ; A7DCDA:SYS5	; [ 23D 23D 23D 23D 23D 1FB ] ; A7DCDE:DROP	; [ 23D ] ; A7E59E:;	; [ ] ;---------ANA;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; w23Dadd rbp,8mov [rbp],raxmov rax,qword[w23D]; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; w1FBadd rbp,8mov [rbp],raxmov rax,qword[w1FB]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w27E  |1001480|l     . I| calls:1 niv:1 len:94 ( abc --  )w27E:;---------OPT; A7EF46:w279	; [ 2 1 0 ] ; A7EF4A:>A	; [ 2 1 0 279 ] ; A7EF4E:PICK2	; [ 2 1 0 ] ; A7EF52:A>	; [ 2 1 0 2 ] ; A7EF56:96	; [ 2 1 0 2 2 ] ; A7EF5A:+	; [ 2 1 0 2 2 0 ] ; A7EF5E:@	; [ 2 1 0 2 2 ] ; A7EF62:w4D	; [ 2 1 0 2 2 ] ; A7A136:16	; [ 2 1 0 2 2 ] ; A7A13A:*>>	; [ 2 1 0 2 2 1 ] ; A7A13E:DUP	; [ 2 1 0 2 ] ; A7A142:63	; [ 2 1 0 2 2 ] ; A7A146:>>	; [ 2 1 0 2 2 2 ] ; A7A14A:-	; [ 2 1 0 2 2 ] ; A7EF66:A@	; [ 2 1 0 2 ] ; A7EF6A:+	; [ 2 1 0 2 2 ] ; A7EF6E:A!+	; [ 2 1 0 2 ] ; A7EF72:PICK2	; [ 2 1 0 ] ; A7EF76:A>	; [ 2 1 0 2 ] ; A7EF7A:96	; [ 2 1 0 2 2 ] ; A7EF7E:+	; [ 2 1 0 2 2 3 ] ; A7EF82:@	; [ 2 1 0 2 2 ] ; A7EF86:w4D	; [ 2 1 0 2 2 ] ; A7A136:16	; [ 2 1 0 2 2 ] ; A7A13A:*>>	; [ 2 1 0 2 2 4 ] ; A7A13E:DUP	; [ 2 1 0 2 ] ; A7A142:63	; [ 2 1 0 2 2 ] ; A7A146:>>	; [ 2 1 0 2 2 5 ] ; A7A14A:-	; [ 2 1 0 2 2 ] ; A7EF8A:A@	; [ 2 1 0 2 ] ; A7EF8E:+	; [ 2 1 0 2 2 ] ; A7EF92:A!+	; [ 2 1 0 2 ] ; A7EF96:PICK2	; [ 2 1 0 ] ; A7EF9A:A>	; [ 2 1 0 2 ] ; A7EF9E:96	; [ 2 1 0 2 2 ] ; A7EFA2:+	; [ 2 1 0 2 2 6 ] ; A7EFA6:@	; [ 2 1 0 2 2 ] ; A7EFAA:w4D	; [ 2 1 0 2 2 ] ; A7A136:16	; [ 2 1 0 2 2 ] ; A7A13A:*>>	; [ 2 1 0 2 2 7 ] ; A7A13E:DUP	; [ 2 1 0 2 ] ; A7A142:63	; [ 2 1 0 2 2 ] ; A7A146:>>	; [ 2 1 0 2 2 8 ] ; A7A14A:-	; [ 2 1 0 2 2 ] ; A7EFAE:A@	; [ 2 1 0 2 ] ; A7EFB2:+	; [ 2 1 0 2 2 ] ; A7EFB6:A!+	; [ 2 1 0 2 ] ; A7EFBA:ROT	; [ 2 1 0 ] ; A7EFBE:A@	; [ 1 0 2 ] ; A7EFC2:+	; [ 1 0 2 2 ] ; A7EFC6:A!+	; [ 1 0 2 ] ; A7EFCA:OVER	; [ 1 0 ] ; A7EFCE:A>	; [ 1 0 1 ] ; A7EFD2:64	; [ 1 0 1 1 ] ; A7EFD6:+	; [ 1 0 1 1 9 ] ; A7EFDA:@	; [ 1 0 1 1 ] ; A7EFDE:w4D	; [ 1 0 1 1 ] ; A7A136:16	; [ 1 0 1 1 ] ; A7A13A:*>>	; [ 1 0 1 1 A ] ; A7A13E:DUP	; [ 1 0 1 ] ; A7A142:63	; [ 1 0 1 1 ] ; A7A146:>>	; [ 1 0 1 1 B ] ; A7A14A:-	; [ 1 0 1 1 ] ; A7EFE2:A@	; [ 1 0 1 ] ; A7EFE6:+	; [ 1 0 1 1 ] ; A7EFEA:A!+	; [ 1 0 1 ] ; A7EFEE:OVER	; [ 1 0 ] ; A7EFF2:A>	; [ 1 0 1 ] ; A7EFF6:64	; [ 1 0 1 1 ] ; A7EFFA:+	; [ 1 0 1 1 C ] ; A7EFFE:@	; [ 1 0 1 1 ] ; A7F002:w4D	; [ 1 0 1 1 ] ; A7A136:16	; [ 1 0 1 1 ] ; A7A13A:*>>	; [ 1 0 1 1 D ] ; A7A13E:DUP	; [ 1 0 1 ] ; A7A142:63	; [ 1 0 1 1 ] ; A7A146:>>	; [ 1 0 1 1 E ] ; A7A14A:-	; [ 1 0 1 1 ] ; A7F006:A@	; [ 1 0 1 ] ; A7F00A:+	; [ 1 0 1 1 ] ; A7F00E:A!+	; [ 1 0 1 ] ; A7F012:OVER	; [ 1 0 ] ; A7F016:A>	; [ 1 0 1 ] ; A7F01A:64	; [ 1 0 1 1 ] ; A7F01E:+	; [ 1 0 1 1 F ] ; A7F022:@	; [ 1 0 1 1 ] ; A7F026:w4D	; [ 1 0 1 1 ] ; A7A136:16	; [ 1 0 1 1 ] ; A7A13A:*>>	; [ 1 0 1 1 10 ] ; A7A13E:DUP	; [ 1 0 1 ] ; A7A142:63	; [ 1 0 1 1 ] ; A7A146:>>	; [ 1 0 1 1 11 ] ; A7A14A:-	; [ 1 0 1 1 ] ; A7F02A:A@	; [ 1 0 1 ] ; A7F02E:+	; [ 1 0 1 1 ] ; A7F032:A!+	; [ 1 0 1 ] ; A7F036:SWAP	; [ 1 0 ] ; A7F03A:A@	; [ 0 1 ] ; A7F03E:+	; [ 0 1 1 ] ; A7F042:A!+	; [ 0 1 ] ; A7F046:DUP	; [ 0 ] ; A7F04A:A>	; [ 0 0 ] ; A7F04E:32	; [ 0 0 0 ] ; A7F052:+	; [ 0 0 0 12 ] ; A7F056:@	; [ 0 0 0 ] ; A7F05A:w4D	; [ 0 0 0 ] ; A7A136:16	; [ 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 13 ] ; A7A13E:DUP	; [ 0 0 ] ; A7A142:63	; [ 0 0 0 ] ; A7A146:>>	; [ 0 0 0 14 ] ; A7A14A:-	; [ 0 0 0 ] ; A7F05E:A@	; [ 0 0 ] ; A7F062:+	; [ 0 0 0 ] ; A7F066:A!+	; [ 0 0 ] ; A7F06A:DUP	; [ 0 ] ; A7F06E:A>	; [ 0 0 ] ; A7F072:32	; [ 0 0 0 ] ; A7F076:+	; [ 0 0 0 15 ] ; A7F07A:@	; [ 0 0 0 ] ; A7F07E:w4D	; [ 0 0 0 ] ; A7A136:16	; [ 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 16 ] ; A7A13E:DUP	; [ 0 0 ] ; A7A142:63	; [ 0 0 0 ] ; A7A146:>>	; [ 0 0 0 17 ] ; A7A14A:-	; [ 0 0 0 ] ; A7F082:A@	; [ 0 0 ] ; A7F086:+	; [ 0 0 0 ] ; A7F08A:A!+	; [ 0 0 ] ; A7F08E:DUP	; [ 0 ] ; A7F092:A>	; [ 0 0 ] ; A7F096:32	; [ 0 0 0 ] ; A7F09A:+	; [ 0 0 0 18 ] ; A7F09E:@	; [ 0 0 0 ] ; A7F0A2:w4D	; [ 0 0 0 ] ; A7A136:16	; [ 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 19 ] ; A7A13E:DUP	; [ 0 0 ] ; A7A142:63	; [ 0 0 0 ] ; A7A146:>>	; [ 0 0 0 1A ] ; A7A14A:-	; [ 0 0 0 ] ; A7F0A6:A@	; [ 0 0 ] ; A7F0AA:+	; [ 0 0 0 ] ; A7F0AE:A!+	; [ 0 0 ] ; A7F0B2:A>	; [ 0 ] ; A7F0B6:+!	; [ 0 0 ] ; A7F0BA:;	; [ ] ;---------ANA;---------GEN; w279; OPTV >Amov r14,qword[w279]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r14; 96; OPTN +add rax,96; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r14; 96; OPTN +add rax,96; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r14; 96; OPTN +add rax,96; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :w282  |1001490|l  ;  . I| calls:1 niv:1 len:112 ( a --  )w282:;---------OPT; A7F2E2:0?	; [ 0 ] ; A7F2E6:(	; [ 0 ] ; A7F2EA:DROP	; [ 0 ] ; A7F2EE:;	; [ ] ; A7F2F2:)	; [ ] ; A7F2F6:w279	; [ 0 ] ; A7F2FA:32	; [ 0 279 ] ; A7F2FE:+	; [ 0 279 0 ] ; A7F302:>A	; [ 0 279 ] ; A7F306:DUP	; [ 0 ] ; A7F30A:w54	; [ 0 0 ] ; A7F30E:SWAP	; [ 0 0 ] ; A7F312:w53	; [ 0 0 ] ; A7F316:A@	; [ 0 0 ] ; A7F31A:A>	; [ 0 0 0 ] ; A7F31E:32	; [ 0 0 0 0 ] ; A7F322:+	; [ 0 0 0 0 1 ] ; A7F326:@	; [ 0 0 0 0 ] ; A7F32A:PICK2	; [ 0 0 0 0 ] ; A7F32E:PICK2	; [ 0 0 0 0 0 ] ; A7F332:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 2 ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 3 ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F336:PICK4	; [ 0 0 0 0 0 ] ; A7F33A:PICK2	; [ 0 0 0 0 0 0 ] ; A7F33E:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 4 ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 5 ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F342:+	; [ 0 0 0 0 0 0 ] ; A7F346:A!+	; [ 0 0 0 0 0 ] ; A7F34A:PICK2	; [ 0 0 0 0 ] ; A7F34E:w4D	; [ 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 6 ] ; A7A13E:DUP	; [ 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 7 ] ; A7A14A:-	; [ 0 0 0 0 0 ] ; A7F352:>R	; [ 0 0 0 0 ] ; A7F356:PICK2	; [ 0 0 0 ] ; A7F35A:NEG	; [ 0 0 0 0 ] ; A7F35E:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 8 ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 9 ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F362:R>	; [ 0 0 0 ] ; A7F366:+	; [ 0 0 0 0 ] ; A7F36A:A>	; [ 0 0 0 ] ; A7F36E:24	; [ 0 0 0 0 ] ; A7F372:+	; [ 0 0 0 0 A ] ; A7F376:!	; [ 0 0 0 0 ] ; A7F37A:A@	; [ 0 0 ] ; A7F37E:A>	; [ 0 0 0 ] ; A7F382:32	; [ 0 0 0 0 ] ; A7F386:+	; [ 0 0 0 0 B ] ; A7F38A:@	; [ 0 0 0 0 ] ; A7F38E:PICK2	; [ 0 0 0 0 ] ; A7F392:PICK2	; [ 0 0 0 0 0 ] ; A7F396:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 C ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 D ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F39A:PICK4	; [ 0 0 0 0 0 ] ; A7F39E:PICK2	; [ 0 0 0 0 0 0 ] ; A7F3A2:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 E ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 F ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F3A6:+	; [ 0 0 0 0 0 0 ] ; A7F3AA:A!+	; [ 0 0 0 0 0 ] ; A7F3AE:PICK2	; [ 0 0 0 0 ] ; A7F3B2:w4D	; [ 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 10 ] ; A7A13E:DUP	; [ 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 11 ] ; A7A14A:-	; [ 0 0 0 0 0 ] ; A7F3B6:>R	; [ 0 0 0 0 ] ; A7F3BA:PICK2	; [ 0 0 0 ] ; A7F3BE:NEG	; [ 0 0 0 0 ] ; A7F3C2:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 12 ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 13 ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F3C6:R>	; [ 0 0 0 ] ; A7F3CA:+	; [ 0 0 0 0 ] ; A7F3CE:A>	; [ 0 0 0 ] ; A7F3D2:24	; [ 0 0 0 0 ] ; A7F3D6:+	; [ 0 0 0 0 14 ] ; A7F3DA:!	; [ 0 0 0 0 ] ; A7F3DE:A@	; [ 0 0 ] ; A7F3E2:A>	; [ 0 0 0 ] ; A7F3E6:32	; [ 0 0 0 0 ] ; A7F3EA:+	; [ 0 0 0 0 15 ] ; A7F3EE:@	; [ 0 0 0 0 ] ; A7F3F2:PICK2	; [ 0 0 0 0 ] ; A7F3F6:PICK2	; [ 0 0 0 0 0 ] ; A7F3FA:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 16 ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 17 ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F3FE:PICK4	; [ 0 0 0 0 0 ] ; A7F402:PICK2	; [ 0 0 0 0 0 0 ] ; A7F406:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 18 ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 19 ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F40A:+	; [ 0 0 0 0 0 0 ] ; A7F40E:A!+	; [ 0 0 0 0 0 ] ; A7F412:PICK2	; [ 0 0 0 0 ] ; A7F416:w4D	; [ 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 1A ] ; A7A13E:DUP	; [ 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 1B ] ; A7A14A:-	; [ 0 0 0 0 0 ] ; A7F41A:>R	; [ 0 0 0 0 ] ; A7F41E:PICK2	; [ 0 0 0 ] ; A7F422:NEG	; [ 0 0 0 0 ] ; A7F426:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 1C ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 1D ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F42A:R>	; [ 0 0 0 ] ; A7F42E:+	; [ 0 0 0 0 ] ; A7F432:A>	; [ 0 0 0 ] ; A7F436:24	; [ 0 0 0 0 ] ; A7F43A:+	; [ 0 0 0 0 1E ] ; A7F43E:!	; [ 0 0 0 0 ] ; A7F442:A@	; [ 0 0 ] ; A7F446:A>	; [ 0 0 0 ] ; A7F44A:32	; [ 0 0 0 0 ] ; A7F44E:+	; [ 0 0 0 0 1F ] ; A7F452:@	; [ 0 0 0 0 ] ; A7F456:PICK2	; [ 0 0 0 0 ] ; A7F45A:PICK2	; [ 0 0 0 0 0 ] ; A7F45E:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 20 ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 21 ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F462:PICK4	; [ 0 0 0 0 0 ] ; A7F466:PICK2	; [ 0 0 0 0 0 0 ] ; A7F46A:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 22 ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 23 ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F46E:+	; [ 0 0 0 0 0 0 ] ; A7F472:A!+	; [ 0 0 0 0 0 ] ; A7F476:ROT	; [ 0 0 0 0 ] ; A7F47A:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 24 ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 25 ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F47E:>R	; [ 0 0 0 ] ; A7F482:w4D	; [ 0 0 ] ; A7A136:16	; [ 0 0 ] ; A7A13A:*>>	; [ 0 0 26 ] ; A7A13E:DUP	; [ 0 ] ; A7A142:63	; [ 0 0 ] ; A7A146:>>	; [ 0 0 27 ] ; A7A14A:-	; [ 0 0 ] ; A7F486:R>	; [ 0 ] ; A7F48A:+	; [ 0 0 ] ; A7F48E:A>	; [ 0 ] ; A7F492:24	; [ 0 0 ] ; A7F496:+	; [ 0 0 28 ] ; A7F49A:!	; [ 0 0 ] ; A7F49E:;	; [ ] ;---------ANA;---------GEN; 0?or rax,raxjnz _o3B; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o3B:; w279add rbp,8mov [rbp],raxmov rax,qword[w279]; 32; OPTN +add rax,32; >Amov r14,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; w54call w54; SWAPxchg rax,[rbp]; w53call w53; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 24; OPTN +add rax,24; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 24; OPTN +add rax,24; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 24; OPTN +add rax,24; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 24; OPTN +add rax,24; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :w284  |1001490|l  ;  . I| calls:1 niv:1 len:112 ( a --  )w284:;---------OPT; A7F64E:0?	; [ 0 ] ; A7F652:(	; [ 0 ] ; A7F656:DROP	; [ 0 ] ; A7F65A:;	; [ ] ; A7F65E:)	; [ ] ; A7F662:w279	; [ 0 ] ; A7F666:>A	; [ 0 279 ] ; A7F66A:DUP	; [ 0 ] ; A7F66E:w54	; [ 0 0 ] ; A7F672:SWAP	; [ 0 0 ] ; A7F676:w53	; [ 0 0 ] ; A7F67A:A@	; [ 0 0 ] ; A7F67E:A>	; [ 0 0 0 ] ; A7F682:64	; [ 0 0 0 0 ] ; A7F686:+	; [ 0 0 0 0 0 ] ; A7F68A:@	; [ 0 0 0 0 ] ; A7F68E:PICK2	; [ 0 0 0 0 ] ; A7F692:PICK2	; [ 0 0 0 0 0 ] ; A7F696:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 1 ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 2 ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F69A:PICK4	; [ 0 0 0 0 0 ] ; A7F69E:PICK2	; [ 0 0 0 0 0 0 ] ; A7F6A2:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 3 ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 4 ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F6A6:+	; [ 0 0 0 0 0 0 ] ; A7F6AA:A!+	; [ 0 0 0 0 0 ] ; A7F6AE:PICK2	; [ 0 0 0 0 ] ; A7F6B2:w4D	; [ 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 5 ] ; A7A13E:DUP	; [ 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 6 ] ; A7A14A:-	; [ 0 0 0 0 0 ] ; A7F6B6:>R	; [ 0 0 0 0 ] ; A7F6BA:PICK2	; [ 0 0 0 ] ; A7F6BE:NEG	; [ 0 0 0 0 ] ; A7F6C2:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 7 ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 8 ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F6C6:R>	; [ 0 0 0 ] ; A7F6CA:+	; [ 0 0 0 0 ] ; A7F6CE:A>	; [ 0 0 0 ] ; A7F6D2:56	; [ 0 0 0 0 ] ; A7F6D6:+	; [ 0 0 0 0 9 ] ; A7F6DA:!	; [ 0 0 0 0 ] ; A7F6DE:A@	; [ 0 0 ] ; A7F6E2:A>	; [ 0 0 0 ] ; A7F6E6:64	; [ 0 0 0 0 ] ; A7F6EA:+	; [ 0 0 0 0 A ] ; A7F6EE:@	; [ 0 0 0 0 ] ; A7F6F2:PICK2	; [ 0 0 0 0 ] ; A7F6F6:PICK2	; [ 0 0 0 0 0 ] ; A7F6FA:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 B ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 C ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F6FE:PICK4	; [ 0 0 0 0 0 ] ; A7F702:PICK2	; [ 0 0 0 0 0 0 ] ; A7F706:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 D ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 E ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F70A:+	; [ 0 0 0 0 0 0 ] ; A7F70E:A!+	; [ 0 0 0 0 0 ] ; A7F712:PICK2	; [ 0 0 0 0 ] ; A7F716:w4D	; [ 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 F ] ; A7A13E:DUP	; [ 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 10 ] ; A7A14A:-	; [ 0 0 0 0 0 ] ; A7F71A:>R	; [ 0 0 0 0 ] ; A7F71E:PICK2	; [ 0 0 0 ] ; A7F722:NEG	; [ 0 0 0 0 ] ; A7F726:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 11 ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 12 ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F72A:R>	; [ 0 0 0 ] ; A7F72E:+	; [ 0 0 0 0 ] ; A7F732:A>	; [ 0 0 0 ] ; A7F736:56	; [ 0 0 0 0 ] ; A7F73A:+	; [ 0 0 0 0 13 ] ; A7F73E:!	; [ 0 0 0 0 ] ; A7F742:A@	; [ 0 0 ] ; A7F746:A>	; [ 0 0 0 ] ; A7F74A:64	; [ 0 0 0 0 ] ; A7F74E:+	; [ 0 0 0 0 14 ] ; A7F752:@	; [ 0 0 0 0 ] ; A7F756:PICK2	; [ 0 0 0 0 ] ; A7F75A:PICK2	; [ 0 0 0 0 0 ] ; A7F75E:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 15 ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 16 ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F762:PICK4	; [ 0 0 0 0 0 ] ; A7F766:PICK2	; [ 0 0 0 0 0 0 ] ; A7F76A:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 17 ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 18 ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F76E:+	; [ 0 0 0 0 0 0 ] ; A7F772:A!+	; [ 0 0 0 0 0 ] ; A7F776:PICK2	; [ 0 0 0 0 ] ; A7F77A:w4D	; [ 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 19 ] ; A7A13E:DUP	; [ 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 1A ] ; A7A14A:-	; [ 0 0 0 0 0 ] ; A7F77E:>R	; [ 0 0 0 0 ] ; A7F782:PICK2	; [ 0 0 0 ] ; A7F786:NEG	; [ 0 0 0 0 ] ; A7F78A:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 1B ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 1C ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F78E:R>	; [ 0 0 0 ] ; A7F792:+	; [ 0 0 0 0 ] ; A7F796:A>	; [ 0 0 0 ] ; A7F79A:56	; [ 0 0 0 0 ] ; A7F79E:+	; [ 0 0 0 0 1D ] ; A7F7A2:!	; [ 0 0 0 0 ] ; A7F7A6:A@	; [ 0 0 ] ; A7F7AA:A>	; [ 0 0 0 ] ; A7F7AE:64	; [ 0 0 0 0 ] ; A7F7B2:+	; [ 0 0 0 0 1E ] ; A7F7B6:@	; [ 0 0 0 0 ] ; A7F7BA:PICK2	; [ 0 0 0 0 ] ; A7F7BE:PICK2	; [ 0 0 0 0 0 ] ; A7F7C2:w4D	; [ 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 1F ] ; A7A13E:DUP	; [ 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 20 ] ; A7A14A:-	; [ 0 0 0 0 0 0 ] ; A7F7C6:PICK4	; [ 0 0 0 0 0 ] ; A7F7CA:PICK2	; [ 0 0 0 0 0 0 ] ; A7F7CE:w4D	; [ 0 0 0 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 0 0 0 21 ] ; A7A13E:DUP	; [ 0 0 0 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 0 0 0 22 ] ; A7A14A:-	; [ 0 0 0 0 0 0 0 ] ; A7F7D2:+	; [ 0 0 0 0 0 0 ] ; A7F7D6:A!+	; [ 0 0 0 0 0 ] ; A7F7DA:ROT	; [ 0 0 0 0 ] ; A7F7DE:w4D	; [ 0 0 0 0 ] ; A7A136:16	; [ 0 0 0 0 ] ; A7A13A:*>>	; [ 0 0 0 0 23 ] ; A7A13E:DUP	; [ 0 0 0 ] ; A7A142:63	; [ 0 0 0 0 ] ; A7A146:>>	; [ 0 0 0 0 24 ] ; A7A14A:-	; [ 0 0 0 0 ] ; A7F7E2:>R	; [ 0 0 0 ] ; A7F7E6:SWAP	; [ 0 0 ] ; A7F7EA:NEG	; [ 0 0 ] ; A7F7EE:w4D	; [ 0 0 ] ; A7A136:16	; [ 0 0 ] ; A7A13A:*>>	; [ 0 0 25 ] ; A7A13E:DUP	; [ 0 ] ; A7A142:63	; [ 0 0 ] ; A7A146:>>	; [ 0 0 26 ] ; A7A14A:-	; [ 0 0 ] ; A7F7F2:R>	; [ 0 ] ; A7F7F6:+	; [ 0 0 ] ; A7F7FA:A>	; [ 0 ] ; A7F7FE:56	; [ 0 0 ] ; A7F802:+	; [ 0 0 27 ] ; A7F806:!	; [ 0 0 ] ; A7F80A:;	; [ ] ;---------ANA;---------GEN; 0?or rax,raxjnz _o3C; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o3C:; w279; OPTV >Amov r14,qword[w279]; DUPadd rbp,8mov [rbp],rax; w54call w54; SWAPxchg rax,[rbp]; w53call w53; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 56; OPTN +add rax,56; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 56; OPTN +add rax,56; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 56; OPTN +add rax,56; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; NEGneg rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; 56; OPTN +add rax,56; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :w28A  |1001480|l     . I| calls:1 niv:1 len:48 ( abc -- def )w28A:;---------OPT; A7FF1A:w279	; [ 2 1 0 ] ; A7FF1E:>A	; [ 2 1 0 279 ] ; A7FF22:PICK2	; [ 2 1 0 ] ; A7FF26:A@+	; [ 2 1 0 2 ] ; A7FF2A:w4D	; [ 2 1 0 2 2 ] ; A7A136:16	; [ 2 1 0 2 2 ] ; A7A13A:*>>	; [ 2 1 0 2 2 0 ] ; A7A13E:DUP	; [ 2 1 0 2 ] ; A7A142:63	; [ 2 1 0 2 2 ] ; A7A146:>>	; [ 2 1 0 2 2 1 ] ; A7A14A:-	; [ 2 1 0 2 2 ] ; A7FF2E:PICK2	; [ 2 1 0 2 ] ; A7FF32:A@+	; [ 2 1 0 2 1 ] ; A7FF36:w4D	; [ 2 1 0 2 1 1 ] ; A7A136:16	; [ 2 1 0 2 1 1 ] ; A7A13A:*>>	; [ 2 1 0 2 1 1 2 ] ; A7A13E:DUP	; [ 2 1 0 2 1 ] ; A7A142:63	; [ 2 1 0 2 1 1 ] ; A7A146:>>	; [ 2 1 0 2 1 1 3 ] ; A7A14A:-	; [ 2 1 0 2 1 1 ] ; A7FF3A:+	; [ 2 1 0 2 1 ] ; A7FF3E:OVER	; [ 2 1 0 2 ] ; A7FF42:A@+	; [ 2 1 0 2 0 ] ; A7FF46:w4D	; [ 2 1 0 2 0 0 ] ; A7A136:16	; [ 2 1 0 2 0 0 ] ; A7A13A:*>>	; [ 2 1 0 2 0 0 4 ] ; A7A13E:DUP	; [ 2 1 0 2 0 ] ; A7A142:63	; [ 2 1 0 2 0 0 ] ; A7A146:>>	; [ 2 1 0 2 0 0 5 ] ; A7A14A:-	; [ 2 1 0 2 0 0 ] ; A7FF4A:+	; [ 2 1 0 2 0 ] ; A7FF4E:A@+	; [ 2 1 0 2 ] ; A7FF52:+	; [ 2 1 0 2 2 ] ; A7FF56:>R	; [ 2 1 0 2 ] ; A7FF5A:PICK2	; [ 2 1 0 ] ; A7FF5E:A@+	; [ 2 1 0 2 ] ; A7FF62:w4D	; [ 2 1 0 2 2 ] ; A7A136:16	; [ 2 1 0 2 2 ] ; A7A13A:*>>	; [ 2 1 0 2 2 6 ] ; A7A13E:DUP	; [ 2 1 0 2 ] ; A7A142:63	; [ 2 1 0 2 2 ] ; A7A146:>>	; [ 2 1 0 2 2 7 ] ; A7A14A:-	; [ 2 1 0 2 2 ] ; A7FF66:PICK2	; [ 2 1 0 2 ] ; A7FF6A:A@+	; [ 2 1 0 2 1 ] ; A7FF6E:w4D	; [ 2 1 0 2 1 1 ] ; A7A136:16	; [ 2 1 0 2 1 1 ] ; A7A13A:*>>	; [ 2 1 0 2 1 1 8 ] ; A7A13E:DUP	; [ 2 1 0 2 1 ] ; A7A142:63	; [ 2 1 0 2 1 1 ] ; A7A146:>>	; [ 2 1 0 2 1 1 9 ] ; A7A14A:-	; [ 2 1 0 2 1 1 ] ; A7FF72:+	; [ 2 1 0 2 1 ] ; A7FF76:OVER	; [ 2 1 0 2 ] ; A7FF7A:A@+	; [ 2 1 0 2 0 ] ; A7FF7E:w4D	; [ 2 1 0 2 0 0 ] ; A7A136:16	; [ 2 1 0 2 0 0 ] ; A7A13A:*>>	; [ 2 1 0 2 0 0 A ] ; A7A13E:DUP	; [ 2 1 0 2 0 ] ; A7A142:63	; [ 2 1 0 2 0 0 ] ; A7A146:>>	; [ 2 1 0 2 0 0 B ] ; A7A14A:-	; [ 2 1 0 2 0 0 ] ; A7FF82:+	; [ 2 1 0 2 0 ] ; A7FF86:A@+	; [ 2 1 0 2 ] ; A7FF8A:+	; [ 2 1 0 2 2 ] ; A7FF8E:>R	; [ 2 1 0 2 ] ; A7FF92:ROT	; [ 2 1 0 ] ; A7FF96:A@+	; [ 1 0 2 ] ; A7FF9A:w4D	; [ 1 0 2 2 ] ; A7A136:16	; [ 1 0 2 2 ] ; A7A13A:*>>	; [ 1 0 2 2 C ] ; A7A13E:DUP	; [ 1 0 2 ] ; A7A142:63	; [ 1 0 2 2 ] ; A7A146:>>	; [ 1 0 2 2 D ] ; A7A14A:-	; [ 1 0 2 2 ] ; A7FF9E:ROT	; [ 1 0 2 ] ; A7FFA2:A@+	; [ 0 2 1 ] ; A7FFA6:w4D	; [ 0 2 1 1 ] ; A7A136:16	; [ 0 2 1 1 ] ; A7A13A:*>>	; [ 0 2 1 1 E ] ; A7A13E:DUP	; [ 0 2 1 ] ; A7A142:63	; [ 0 2 1 1 ] ; A7A146:>>	; [ 0 2 1 1 F ] ; A7A14A:-	; [ 0 2 1 1 ] ; A7FFAA:+	; [ 0 2 1 ] ; A7FFAE:SWAP	; [ 0 2 ] ; A7FFB2:A@+	; [ 2 0 ] ; A7FFB6:w4D	; [ 2 0 0 ] ; A7A136:16	; [ 2 0 0 ] ; A7A13A:*>>	; [ 2 0 0 10 ] ; A7A13E:DUP	; [ 2 0 ] ; A7A142:63	; [ 2 0 0 ] ; A7A146:>>	; [ 2 0 0 11 ] ; A7A14A:-	; [ 2 0 0 ] ; A7FFBA:+	; [ 2 0 ] ; A7FFBE:A@	; [ 2 ] ; A7FFC2:+	; [ 2 2 ] ; A7FFC6:R>	; [ 2 ] ; A7FFCA:R>	; [ 2 2 ] ; A7FFCE:SWAP	; [ 2 2 2 ] ; A7FFD2:ROT	; [ 2 2 2 ] ; A7FFD6:;	; [ 2 2 2 ] ;---------ANA;---------GEN; w279; OPTV >Amov r14,qword[w279]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ;ret;--------------------------; :w290  |1001480|l     . I| calls:1 niv:1 len:19 ( a --  )w290:;---------OPT; A80152:w23F	; [ 0 ] ; A80156:w4D	; [ 0 23F ] ; A7A136:16	; [ 0 23F ] ; A7A13A:*>>	; [ 0 23F 0 ] ; A7A13E:DUP	; [ 0 ] ; A7A142:63	; [ 0 0 ] ; A7A146:>>	; [ 0 0 1 ] ; A7A14A:-	; [ 0 0 ] ; A8015A:DUP	; [ 0 ] ; A8015E:'w274	; [ 0 0 ] ; A80162:!	; [ 0 0 274 ] ; A80166:'w273	; [ 0 ] ; A8016A:!	; [ 0 273 ] ; A8016E:w23E	; [ ] ; A80172:1	; [ 23E ] ; A80176:>>	; [ 23E 2 ] ; A8017A:'w275	; [ 23E ] ; A8017E:!	; [ 23E 275 ] ; A80182:w23F	; [ ] ; A80186:1	; [ 23F ] ; A8018A:>>	; [ 23F 3 ] ; A8018E:'w276	; [ 23F ] ; A80192:!	; [ 23F 276 ] ; A80196:w27A	; [ ] ; A7EEC2:'w278	; [ ] ; A7EEC6:DUP	; [ 278 ] ; A7EECA:'w279	; [ 278 278 ] ; A7EECE:!	; [ 278 278 279 ] ; A7EED2:'w277	; [ 278 ] ; A7EED6:16	; [ 278 277 ] ; A7EEDA:MOVE	; [ 278 277 4 ] ; A8019A:;	; [ ] ;---------ANA;---------GEN; w23Fadd rbp,8mov [rbp],raxmov rax,qword[w23F]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'w274; OPTAV !mov qword[w274],raxmov rax,[rbp]sub rbp,8; 'w273; OPTAV !mov qword[w273],raxmov rax,[rbp]sub rbp,8; w23Eadd rbp,8mov [rbp],raxmov rax,qword[w23E]; 1; OPTN >>sar rax,1; 'w275; OPTAV !mov qword[w275],raxmov rax,[rbp]sub rbp,8; w23Fadd rbp,8mov [rbp],raxmov rax,qword[w23F]; 1; OPTN >>sar rax,1; 'w276; OPTAV !mov qword[w276],raxmov rax,[rbp]sub rbp,8; 'w278add rbp,8mov [rbp],raxmov rax,w278; DUPadd rbp,8mov [rbp],rax; 'w279; OPTAV !mov qword[w279],raxmov rax,[rbp]sub rbp,8; 'w277add rbp,8mov [rbp],raxmov rax,w277; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :w29C  |2001090|l  ;  .  | calls:1 niv:2 len:22 ( abc -- de )w29C:;---------OPT; A80436:w28A	; [ 2 1 0 ] ; A8043A:0?	; [ 2 1 0 ] ; A8043E:(	; [ 2 1 0 ] ; A80442:3DROP	; [ 2 1 0 ] ; A80446:w275	; [ ] ; A8044A:w276	; [ 275 ] ; A8044E:;	; [ 275 276 ] ; A80452:)	; [ 275 276 ] ; A80456:>R	; [ 2 1 0 ] ; A8045A:w274	; [ 2 1 ] ; A8045E:R@	; [ 2 1 274 ] ; A80462:*/	; [ 2 1 274 274 ] ; A80466:w276	; [ 2 1 ] ; A8046A:+	; [ 2 1 276 ] ; A8046E:SWAP	; [ 2 1 ] ; A80472:w273	; [ 1 2 ] ; A80476:R>	; [ 1 2 273 ] ; A8047A:*/	; [ 1 2 273 273 ] ; A8047E:w275	; [ 1 2 ] ; A80482:+	; [ 1 2 275 ] ; A80486:SWAP	; [ 1 2 ] ; A8048A:;	; [ 2 1 ] ;---------ANA;---------GEN; w28Acall w28A; 0?or rax,raxjnz _o3D; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; w275add rbp,8mov [rbp],raxmov rax,qword[w275]; w276add rbp,8mov [rbp],raxmov rax,qword[w276]; ;ret; )_o3D:; >Rpush raxmov rax,[rbp]sub rbp,8; w274add rbp,8mov [rbp],raxmov rax,qword[w274]; R@add rbp,8mov [rbp],raxmov rax,[rsp]; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; w276; OPTV +add rax,qword[w276]; SWAPxchg rax,[rbp]; w273add rbp,8mov [rbp],raxmov rax,qword[w273]; R>add rbp,8mov [rbp],raxpop rax; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; w275; OPTV +add rax,qword[w275]; SWAPxchg rax,[rbp]; ;ret;--------------------------; :w2A8  |1090|l  ;  .  | calls:1 niv:0 len:40 ( a -- b )w2A8:;---------OPT; A8076E:'w2A7	; [ 0 ] ; A80772:OVER	; [ 0 2A7 ] ; A80776:(	; [ 0 2A7 0 ] ; A8077A:C@+	; [ 0 2A7 0 ] ; A8077E:$ff	; [ 0 2A7 0 0 ] ; A80782:AND	; [ 0 2A7 0 0 0 ] ; A80786:32	; [ 0 2A7 0 0 ] ; A8078A:>=?	; [ 0 2A7 0 0 1 ] ; A8078E:ROT	; [ 0 2A7 0 0 ] ; A80792:C!+	; [ 0 0 0 2A7 ] ; A80796:SWAP	; [ 0 0 0 ] ; A8079A:)	; [ 0 0 0 ] ; A8079E:2DROP	; [ 0 2A7 0 0 ] ; A807A2:1	; [ 0 2A7 ] ; A807A6:-	; [ 0 2A7 2 ] ; A807AA:(	; [ 0 2A7 ] ; A807AE:DUP	; [ 0 2A7 ] ; A807B2:C@	; [ 0 2A7 2A7 ] ; A807B6:$2f	; [ 0 2A7 2A7 ] ; A807BA:<>?	; [ 0 2A7 2A7 3 ] ; A807BE:DROP	; [ 0 2A7 2A7 ] ; A807C2:1	; [ 0 2A7 ] ; A807C6:-	; [ 0 2A7 4 ] ; A807CA:'w2A7	; [ 0 2A7 ] ; A807CE:<=?	; [ 0 2A7 2A7 ] ; A807D2:(	; [ 0 2A7 ] ; A807D6:0	; [ 0 2A7 ] ; A807DA:'w2A7	; [ 0 2A7 5 ] ; A807DE:!	; [ 0 2A7 5 2A7 ] ; A807E2:DROP	; [ 0 2A7 ] ; A807E6:;	; [ 0 ] ; A807EA:)	; [ 0 ] ; A807EE:)	; [ 0 2A7 ] ; A807F2:DROP	; [ 0 2A7 2A7 ] ; A807F6:0	; [ 0 2A7 ] ; A807FA:SWAP	; [ 0 2A7 6 ] ; A807FE:1	; [ 0 6 2A7 ] ; A80802:+	; [ 0 6 2A7 7 ] ; A80806:C!	; [ 0 6 2A7 ] ; A8080A:;	; [ 0 ] ;---------ANA;---------GEN; 'w2A7add rbp,8mov [rbp],raxmov rax,w2A7; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i3E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >=?cmp rax,32jl _o3E; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i3E_o3E:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; (_i3F:; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $2f; OPTN <>?cmp rax,47je _o3F; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; 'w2A7; OPTAV <=?cmp rax,w2A7jg _o40; (; 0add rbp,8mov [rbp],raxxor rax,rax; 'w2A7; OPTAV !mov qword[w2A7],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o40:; )jmp _i3F_o3F:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :w2B2  |1001480|l     . I| calls:1 niv:1 len:17 (  --  )w2B2:;---------OPT; A808BA:w254	; [ ] ; A808BE:"SDL2_image.DLL"	; [ ] ; A808C2:LOADLIB	; [ 7592 ] ; A808C6:DUP	; [ 7592 ] ; A808CA:"IMG_Load"	; [ 7592 7592 ] ; A808CE:GETPROC	; [ 7592 7592 75AF ] ; A808D2:'w2AD	; [ 7592 7592 ] ; A808D6:!	; [ 7592 7592 2AD ] ; A808DA:DUP	; [ 7592 ] ; A808DE:"IMG_Init"	; [ 7592 7592 ] ; A808E2:GETPROC	; [ 7592 7592 75CE ] ; A808E6:'w2AC	; [ 7592 7592 ] ; A808EA:!	; [ 7592 7592 2AC ] ; A808EE:DROP	; [ 7592 ] ; A808F2:$3	; [ ] ; A808F6:w2AF	; [ 0 ] ; A80862:w2AC	; [ 0 ] ; A80866:SYS1	; [ 0 2AC ] ; A8086A:DROP	; [ 0 ] ; A808FA:;	; [ ] ;---------ANA;---------GEN; w254call w254; "SDL2_image.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str7592; DUPadd rbp,8mov [rbp],rax; "IMG_Load"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str75AF; 'w2AD; OPTAV !mov qword[w2AD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "IMG_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str75CE; 'w2AC; OPTAV !mov qword[w2AC],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; $3add rbp,8mov [rbp],raxmov rax,3; w2ACadd rbp,8mov [rbp],raxmov rax,qword[w2AC]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2C7  |2001080|l     .  | calls:1 niv:2 len:27 ( a -- b )w2C7:;---------OPT; A808FE:2	; [ 0 ] ; A80902:+	; [ 0 0 ] ; A80906:wAC	; [ 0 ] ; A8090A:w2B6	; [ 0 ] ; A8090E:>B	; [ 0 2B6 ] ; A80912:w10A	; [ 0 ] ; A80916:B!+	; [ 1 0 ] ; A8091A:w10A	; [ 1 ] ; A8091E:B!+	; [ 1 0 ] ; A80922:w10A	; [ 1 ] ; A80926:B!+	; [ 1 0 ] ; A8092A:1.0	; [ 1 ] ; A8092E:OVER	; [ 1 1 ] ; A80932:C@	; [ 1 1 1 ] ; A80936:32	; [ 1 1 1 ] ; A8093A:>=?	; [ 1 1 1 2 ] ; A8093E:(	; [ 1 1 1 ] ; A80942:2DROP	; [ 1 1 1 ] ; A80946:w10A	; [ 1 ] ; A8094A:DUP	; [ 1 0 ] ; A8094E:)	; [ 1 0 0 ] ; A80952:DROP	; [ 1 1 1 ] ; A80956:B!+	; [ 1 1 ] ; A8095A:B>	; [ 1 ] ; A8095E:'w2B6	; [ 1 1 ] ; A80962:!	; [ 1 1 2B6 ] ; A80966:;	; [ 1 ] ;---------ANA;---------GEN; 2; OPTN +add rax,2; wACcall wAC; w2B6; OPTV >Bmov r15,qword[w2B6]; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; 1.0add rbp,8mov [rbp],raxmov rax,65536; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 32; OPTN >=?cmp rax,32jl _o41; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; w10Acall w10A; DUPadd rbp,8mov [rbp],rax; )_o41:; DROPmov rax,[rbp]sub rbp,8; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; B>add rbp,8mov [rbp],raxmov rax,r15; 'w2B6; OPTAV !mov qword[w2B6],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2C8  |2001080|l     .  | calls:1 niv:2 len:25 ( a -- b )w2C8:;---------OPT; A8096A:w2BF	; [ 0 ] ; A8096E:>B	; [ 0 2BF ] ; A80972:3	; [ 0 ] ; A80976:+	; [ 0 0 ] ; A8097A:wAC	; [ 0 ] ; A8097E:w10A	; [ 0 ] ; A80982:B!+	; [ 1 0 ] ; A80986:w10A	; [ 1 ] ; A8098A:B!+	; [ 1 0 ] ; A8098E:1.0	; [ 1 ] ; A80992:OVER	; [ 1 1 ] ; A80996:C@	; [ 1 1 1 ] ; A8099A:32	; [ 1 1 1 ] ; A8099E:>=?	; [ 1 1 1 2 ] ; A809A2:(	; [ 1 1 1 ] ; A809A6:2DROP	; [ 1 1 1 ] ; A809AA:w10A	; [ 1 ] ; A809AE:DUP	; [ 1 0 ] ; A809B2:)	; [ 1 0 0 ] ; A809B6:DROP	; [ 1 1 1 ] ; A809BA:B!+	; [ 1 1 ] ; A809BE:B>	; [ 1 ] ; A809C2:'w2BF	; [ 1 1 ] ; A809C6:!	; [ 1 1 2BF ] ; A809CA:;	; [ 1 ] ;---------ANA;---------GEN; w2BF; OPTV >Bmov r15,qword[w2BF]; 3; OPTN +add rax,3; wACcall wAC; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; 1.0add rbp,8mov [rbp],raxmov rax,65536; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 32; OPTN >=?cmp rax,32jl _o42; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; w10Acall w10A; DUPadd rbp,8mov [rbp],rax; )_o42:; DROPmov rax,[rbp]sub rbp,8; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; B>add rbp,8mov [rbp],raxmov rax,r15; 'w2BF; OPTAV !mov qword[w2BF],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2C9  |2001080|l     .  | calls:1 niv:2 len:15 ( a -- b )w2C9:;---------OPT; A809CE:w2BC	; [ 0 ] ; A809D2:>B	; [ 0 2BC ] ; A809D6:3	; [ 0 ] ; A809DA:+	; [ 0 0 ] ; A809DE:wAC	; [ 0 ] ; A809E2:w10A	; [ 0 ] ; A809E6:B!+	; [ 1 0 ] ; A809EA:w10A	; [ 1 ] ; A809EE:B!+	; [ 1 0 ] ; A809F2:w10A	; [ 1 ] ; A809F6:B!+	; [ 1 0 ] ; A809FA:B>	; [ 1 ] ; A809FE:'w2BC	; [ 1 1 ] ; A80A02:!	; [ 1 1 2BC ] ; A80A06:;	; [ 1 ] ;---------ANA;---------GEN; w2BC; OPTV >Bmov r15,qword[w2BC]; 3; OPTN +add rax,3; wACcall wAC; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; B>add rbp,8mov [rbp],raxmov rax,r15; 'w2BC; OPTAV !mov qword[w2BC],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2CA  |2001080|l     .  | calls:1 niv:2 len:15 ( a -- b )w2CA:;---------OPT; A80A0A:w2C2	; [ 0 ] ; A80A0E:>B	; [ 0 2C2 ] ; A80A12:3	; [ 0 ] ; A80A16:+	; [ 0 0 ] ; A80A1A:wAC	; [ 0 ] ; A80A1E:w10A	; [ 0 ] ; A80A22:B!+	; [ 1 0 ] ; A80A26:w10A	; [ 1 ] ; A80A2A:B!+	; [ 1 0 ] ; A80A2E:w10A	; [ 1 ] ; A80A32:B!+	; [ 1 0 ] ; A80A36:B>	; [ 1 ] ; A80A3A:'w2C2	; [ 1 1 ] ; A80A3E:!	; [ 1 1 2C2 ] ; A80A42:;	; [ 1 ] ;---------ANA;---------GEN; w2C2; OPTV >Bmov r15,qword[w2C2]; 3; OPTN +add rax,3; wACcall wAC; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w10Acall w10A; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; B>add rbp,8mov [rbp],raxmov rax,r15; 'w2C2; OPTAV !mov qword[w2C2],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2CF  |2001090|l  ;  .  | calls:1 niv:2 len:31 ( a -- b )w2CF:;---------OPT; A80A46:0	; [ 0 ] ; A80A4A:(	; [ 0 0 ] ; A80A4E:w2C4	; [ 0 0 ] ; A80A52:<?	; [ 0 0 2C4 ] ; A80A56:DUP	; [ 0 0 ] ; A80A5A:4	; [ 0 0 0 ] ; A80A5E:<<	; [ 0 0 0 1 ] ; A80A62:w2C5	; [ 0 0 0 ] ; A80A66:+	; [ 0 0 0 2C5 ] ; A80A6A:@	; [ 0 0 0 ] ; A80A6E:0?	; [ 0 0 0 ] ; A80A72:(	; [ 0 0 0 ] ; A80A76:3DROP	; [ 0 0 0 ] ; A80A7A:-1	; [ ] ; A80A7E:;	; [ 2 ] ; A80A82:)	; [ 2 ] ; A80A86:PICK2	; [ 0 0 0 ] ; A80A8A:w9D	; [ 0 0 0 0 ] ; A80A8E:1?	; [ 0 0 1 0 ] ; A80A92:(	; [ 0 0 1 0 ] ; A80A96:2DROP	; [ 0 0 1 0 ] ; A80A9A:NIP	; [ 0 0 ] ; A80A9E:;	; [ 0 ] ; A80AA2:)	; [ 0 ] ; A80AA6:2DROP	; [ 0 0 1 0 ] ; A80AAA:1	; [ 0 0 ] ; A80AAE:+	; [ 0 0 3 ] ; A80AB2:)	; [ 0 0 ] ; A80AB6:2DROP	; [ 0 0 ] ; A80ABA:-1	; [ ] ; A80ABE:;	; [ 4 ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; (_i43:; w2C4; OPTV <?cmp rax,qword[w2C4]jge _o43; DUPadd rbp,8mov [rbp],rax; 4; OPTN <<shl rax,4; w2C5; OPTV +add rax,qword[w2C5]; @mov rax,qword[rax]; 0?or rax,raxjnz _o44; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; -1add rbp,8mov [rbp],raxmov rax,-1; ;ret; )_o44:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; w9Dcall w9D; 1?or rax,raxjz _o45;; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; ;ret; )_o45:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1; OPTN +add rax,1; )jmp _i43_o43:; 2DROPmov rax,[rbp-8]sub rbp,8*2; -1add rbp,8mov [rbp],raxmov rax,-1; ;ret;--------------------------; :w2D0  |2003090|l  ;  .  | calls:3 niv:2 len:94 ( a -- b )w2D0:;---------OPT; A80AC2:wFE	; [ 0 ] ; A80AC6:-?	; [ 1 0 ] ; A80ACA:(	; [ 1 0 ] ; A80ACE:w2B6	; [ 1 0 ] ; A80AD2:w2B5	; [ 1 0 2B6 ] ; A80AD6:-	; [ 1 0 2B6 2B5 ] ; A80ADA:5	; [ 1 0 2B6 ] ; A80ADE:>>	; [ 1 0 2B6 0 ] ; A80AE2:1	; [ 1 0 2B6 ] ; A80AE6:+	; [ 1 0 2B6 1 ] ; A80AEA:+	; [ 1 0 2B6 ] ; A80AEE:)	; [ 1 0 ] ; A80AF2:'w2CB	; [ 1 0 ] ; A80AF6:!	; [ 1 0 2CB ] ; A80AFA:DUP	; [ 1 ] ; A80AFE:1	; [ 1 1 ] ; A80B02:-	; [ 1 1 2 ] ; A80B06:C@	; [ 1 1 ] ; A80B0A:32	; [ 1 1 ] ; A80B0E:<?	; [ 1 1 3 ] ; A80B12:(	; [ 1 1 ] ; A80B16:DROP	; [ 1 1 ] ; A80B1A:1	; [ 1 ] ; A80B1E:-	; [ 1 4 ] ; A80B22:;	; [ 1 ] ; A80B26:)	; [ 1 ] ; A80B2A:33	; [ 1 1 ] ; A80B2E:<?	; [ 1 1 5 ] ; A80B32:(	; [ 1 1 ] ; A80B36:DROP	; [ 1 1 ] ; A80B3A:;	; [ 1 ] ; A80B3E:)	; [ 1 ] ; A80B42:DROP	; [ 1 1 ] ; A80B46:wFE	; [ 1 ] ; A80B4A:-?	; [ 1 0 ] ; A80B4E:(	; [ 1 0 ] ; A80B52:w2BF	; [ 1 0 ] ; A80B56:w2BE	; [ 1 0 2BF ] ; A80B5A:-	; [ 1 0 2BF 2BE ] ; A80B5E:24	; [ 1 0 2BF ] ; A80B62:/	; [ 1 0 2BF 6 ] ; A80B66:1	; [ 1 0 2BF 6 ] ; A80B6A:+	; [ 1 0 2BF 6 7 ] ; A80B6E:+	; [ 1 0 2BF 6 ] ; A80B72:)	; [ 1 0 2BF ] ; A80B76:'w2CC	; [ 1 0 ] ; A80B7A:!	; [ 1 0 2CC ] ; A80B7E:DUP	; [ 1 ] ; A80B82:1	; [ 1 1 ] ; A80B86:-	; [ 1 1 8 ] ; A80B8A:C@	; [ 1 1 ] ; A80B8E:32	; [ 1 1 ] ; A80B92:<?	; [ 1 1 9 ] ; A80B96:(	; [ 1 1 ] ; A80B9A:DROP	; [ 1 1 ] ; A80B9E:1	; [ 1 ] ; A80BA2:-	; [ 1 A ] ; A80BA6:;	; [ 1 ] ; A80BAA:)	; [ 1 ] ; A80BAE:33	; [ 1 1 ] ; A80BB2:<?	; [ 1 1 B ] ; A80BB6:(	; [ 1 1 ] ; A80BBA:DROP	; [ 1 1 ] ; A80BBE:;	; [ 1 ] ; A80BC2:)	; [ 1 ] ; A80BC6:DROP	; [ 1 1 ] ; A80BCA:wFE	; [ 1 ] ; A80BCE:-?	; [ 1 0 ] ; A80BD2:(	; [ 1 0 ] ; A80BD6:w2BC	; [ 1 0 ] ; A80BDA:w2BB	; [ 1 0 2BC ] ; A80BDE:-	; [ 1 0 2BC 2BB ] ; A80BE2:24	; [ 1 0 2BC ] ; A80BE6:/	; [ 1 0 2BC C ] ; A80BEA:1	; [ 1 0 2BC C ] ; A80BEE:+	; [ 1 0 2BC C D ] ; A80BF2:+	; [ 1 0 2BC C ] ; A80BF6:)	; [ 1 0 2BC ] ; A80BFA:'w2CD	; [ 1 0 ] ; A80BFE:!	; [ 1 0 2CD ] ; A80C02:DUP	; [ 1 ] ; A80C06:1	; [ 1 1 ] ; A80C0A:-	; [ 1 1 E ] ; A80C0E:C@	; [ 1 1 ] ; A80C12:32	; [ 1 1 ] ; A80C16:<?	; [ 1 1 F ] ; A80C1A:(	; [ 1 1 ] ; A80C1E:DROP	; [ 1 1 ] ; A80C22:1	; [ 1 ] ; A80C26:-	; [ 1 10 ] ; A80C2A:;	; [ 1 ] ; A80C2E:)	; [ 1 ] ; A80C32:DROP	; [ 1 1 ] ; A80C36:;	; [ 1 ] ;---------ANA;---------GEN; wFEcall wFE; -?or rax,raxjns _o46; (; w2B6add rbp,8mov [rbp],raxmov rax,qword[w2B6]; w2B5; OPTV -sub rax,qword[w2B5]; 5; OPTN >>sar rax,5; 1; OPTN +add rax,1; +add rax,[rbp]sub rbp,8; )_o46:; 'w2CB; OPTAV !mov qword[w2CB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; C@movsx rax,byte [rax]; 32; OPTN <?cmp rax,32jge _o47; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o47:; 33; OPTN <?cmp rax,33jge _o48; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o48:; DROPmov rax,[rbp]sub rbp,8; wFEcall wFE; -?or rax,raxjns _o49; (; w2BFadd rbp,8mov [rbp],raxmov rax,qword[w2BF]; w2BE; OPTV -sub rax,qword[w2BE]; $2AAAAAAB ; calcadd rbp,8mov [rbp],raxmov rax,715827883; $22 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,34; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; +add rax,[rbp]sub rbp,8; )_o49:; 'w2CC; OPTAV !mov qword[w2CC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; C@movsx rax,byte [rax]; 32; OPTN <?cmp rax,32jge _o4A; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o4A:; 33; OPTN <?cmp rax,33jge _o4B; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o4B:; DROPmov rax,[rbp]sub rbp,8; wFEcall wFE; -?or rax,raxjns _o4C; (; w2BCadd rbp,8mov [rbp],raxmov rax,qword[w2BC]; w2BB; OPTV -sub rax,qword[w2BB]; $2AAAAAAB ; calcadd rbp,8mov [rbp],raxmov rax,715827883; $22 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,34; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; +add rax,[rbp]sub rbp,8; )_o4C:; 'w2CD; OPTAV !mov qword[w2CD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; C@movsx rax,byte [rax]; 32; OPTN <?cmp rax,32jge _o4D; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o4D:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2D2  |3001080|l     .  | calls:1 niv:3 len:38 ( a -- b )w2D2:;---------OPT; A80CCA:2	; [ 0 ] ; A80CCE:+	; [ 0 0 ] ; A80CD2:wAC	; [ 0 ] ; A80CD6:w2B9	; [ 0 ] ; A80CDA:>B	; [ 0 2B9 ] ; A80CDE:w2D0	; [ 0 ] ; A80CE2:w2CB	; [ 0 ] ; A80CE6:B!+	; [ 0 2CB ] ; A80CEA:w2CC	; [ 0 ] ; A80CEE:32	; [ 0 2CC ] ; A80CF2:<<	; [ 0 2CC 1 ] ; A80CF6:w2CD	; [ 0 2CC ] ; A80CFA:OR	; [ 0 2CC 2CD ] ; A80CFE:B!+	; [ 0 2CC ] ; A80D02:w2D0	; [ 0 ] ; A80D06:w2CB	; [ 0 ] ; A80D0A:B!+	; [ 0 2CB ] ; A80D0E:w2CC	; [ 0 ] ; A80D12:32	; [ 0 2CC ] ; A80D16:<<	; [ 0 2CC 2 ] ; A80D1A:w2CD	; [ 0 2CC ] ; A80D1E:OR	; [ 0 2CC 2CD ] ; A80D22:B!+	; [ 0 2CC ] ; A80D26:w2D0	; [ 0 ] ; A80D2A:w2CB	; [ 0 ] ; A80D2E:B!+	; [ 0 2CB ] ; A80D32:w2CC	; [ 0 ] ; A80D36:32	; [ 0 2CC ] ; A80D3A:<<	; [ 0 2CC 3 ] ; A80D3E:w2CD	; [ 0 2CC ] ; A80D42:OR	; [ 0 2CC 2CD ] ; A80D46:B!+	; [ 0 2CC ] ; A80D4A:w2CE	; [ 0 ] ; A80D4E:B!+	; [ 0 2CE ] ; A80D52:B>	; [ 0 ] ; A80D56:'w2B9	; [ 0 0 ] ; A80D5A:!	; [ 0 0 2B9 ] ; A80D5E:;	; [ 0 ] ;---------ANA;---------GEN; 2; OPTN +add rax,2; wACcall wAC; w2B9; OPTV >Bmov r15,qword[w2B9]; w2D0call w2D0; w2CB; OPTV B!+mov rbx,qword[w2CB]mov qword[r15],rbxadd r15,8; w2CCadd rbp,8mov [rbp],raxmov rax,qword[w2CC]; 32; OPTN <<shl rax,32; w2CD; OPTV ORor rax,qword[w2CD]; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w2D0call w2D0; w2CB; OPTV B!+mov rbx,qword[w2CB]mov qword[r15],rbxadd r15,8; w2CCadd rbp,8mov [rbp],raxmov rax,qword[w2CC]; 32; OPTN <<shl rax,32; w2CD; OPTV ORor rax,qword[w2CD]; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w2D0call w2D0; w2CB; OPTV B!+mov rbx,qword[w2CB]mov qword[r15],rbxadd r15,8; w2CCadd rbp,8mov [rbp],raxmov rax,qword[w2CC]; 32; OPTN <<shl rax,32; w2CD; OPTV ORor rax,qword[w2CD]; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; w2CE; OPTV B!+mov rbx,qword[w2CE]mov qword[r15],rbxadd r15,8; B>add rbp,8mov [rbp],raxmov rax,r15; 'w2B9; OPTAV !mov qword[w2B9],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2D6  |3001080|l     .  | calls:1 niv:3 len:10 ( a -- b )w2D6:;---------OPT; A80D92:6	; [ 0 ] ; A80D96:+	; [ 0 0 ] ; A80D9A:wAC	; [ 0 ] ; A80D9E:DUP	; [ 0 ] ; A80DA2:"%l"	; [ 0 0 ] ; A80DA6:wF6	; [ 0 0 7AB8 ] ; A80DAA:w2CF	; [ 0 0 0 ] ; A80DAE:'w2CE	; [ 0 0 0 ] ; A80DB2:!	; [ 0 0 0 2CE ] ; A80DB6:;	; [ 0 0 ] ;---------ANA;---------GEN; 6; OPTN +add rax,6; wACcall wAC; DUPadd rbp,8mov [rbp],rax; "%l"add rbp,8mov [rbp],raxmov rax,str7AB8; wF6call wF6; w2CFcall w2CF; 'w2CE; OPTAV !mov qword[w2CE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2D7  |4001490|l  ;  . I| calls:1 niv:4 len:90 (  --  )w2D7:;---------OPT; A80DBA:"vt"	; [ ] ; A80DBE:w9D	; [ 7AD6 ] ; A80DC2:1?	; [ 0 ] ; A80DC6:(	; [ 0 ] ; A80DCA:DROP	; [ 0 ] ; A80DCE:w2C8	; [ ] ; A80DD2:;	; [ ] ; A80DD6:)	; [ ] ; A80DDA:DROP	; [ 0 ] ; A80DDE:"vn"	; [ ] ; A80DE2:w9D	; [ 7AF7 ] ; A80DE6:1?	; [ 0 ] ; A80DEA:(	; [ 0 ] ; A80DEE:DROP	; [ 0 ] ; A80DF2:w2C9	; [ ] ; A80DF6:;	; [ ] ; A80DFA:)	; [ ] ; A80DFE:DROP	; [ 0 ] ; A80E02:"vp"	; [ ] ; A80E06:w9D	; [ 7B18 ] ; A80E0A:1?	; [ 0 ] ; A80E0E:(	; [ 0 ] ; A80E12:DROP	; [ 0 ] ; A80E16:w2CA	; [ ] ; A80E1A:;	; [ ] ; A80E1E:)	; [ ] ; A80E22:DROP	; [ 0 ] ; A80E26:"v"	; [ ] ; A80E2A:w9D	; [ 7B39 ] ; A80E2E:1?	; [ 0 ] ; A80E32:(	; [ 0 ] ; A80E36:DROP	; [ 0 ] ; A80E3A:w2C7	; [ ] ; A80E3E:;	; [ ] ; A80E42:)	; [ ] ; A80E46:DROP	; [ 0 ] ; A80E4A:"f"	; [ ] ; A80E4E:w9D	; [ 7B59 ] ; A80E52:1?	; [ 0 ] ; A80E56:(	; [ 0 ] ; A80E5A:DROP	; [ 0 ] ; A80E5E:w2D2	; [ ] ; A80E62:;	; [ ] ; A80E66:)	; [ ] ; A80E6A:DROP	; [ 0 ] ; A80E6E:"s"	; [ ] ; A80E72:w9D	; [ 7B79 ] ; A80E76:1?	; [ 0 ] ; A80E7A:(	; [ 0 ] ; A80E7E:DROP	; [ 0 ] ; A80E82:w2D3	; [ ] ; A80D62:2	; [ ] ; A80D66:+	; [ 0 ] ; A80D6A:wAC	; [ ] ; A80E86:;	; [ ] ; A80E8A:)	; [ ] ; A80E8E:DROP	; [ 0 ] ; A80E92:"o"	; [ ] ; A80E96:w9D	; [ 7B99 ] ; A80E9A:1?	; [ 0 ] ; A80E9E:(	; [ 0 ] ; A80EA2:DROP	; [ 0 ] ; A80EA6:w2D4	; [ ] ; A80D72:2	; [ ] ; A80D76:+	; [ 1 ] ; A80D7A:wAC	; [ ] ; A80EAA:;	; [ ] ; A80EAE:)	; [ ] ; A80EB2:DROP	; [ 0 ] ; A80EB6:"g"	; [ ] ; A80EBA:w9D	; [ 7BB9 ] ; A80EBE:1?	; [ 0 ] ; A80EC2:(	; [ 0 ] ; A80EC6:DROP	; [ 0 ] ; A80ECA:w2D5	; [ ] ; A80D82:2	; [ ] ; A80D86:+	; [ 2 ] ; A80D8A:wAC	; [ ] ; A80ECE:;	; [ ] ; A80ED2:)	; [ ] ; A80ED6:DROP	; [ 0 ] ; A80EDA:"mtllib"	; [ ] ; A80EDE:w9D	; [ 7BD9 ] ; A80EE2:1?	; [ 0 ] ; A80EE6:(	; [ 0 ] ; A80EEA:DROP	; [ 0 ] ; A80EEE:;	; [ ] ; A80EF2:)	; [ ] ; A80EF6:DROP	; [ 0 ] ; A80EFA:"usemtl"	; [ ] ; A80EFE:w9D	; [ 7BF9 ] ; A80F02:1?	; [ 0 ] ; A80F06:(	; [ 0 ] ; A80F0A:DROP	; [ 0 ] ; A80F0E:w2D6	; [ ] ; A80F12:;	; [ ] ; A80F16:)	; [ ] ; A80F1A:DROP	; [ 0 ] ; A80F1E:;	; [ ] ;---------ANA;---------GEN; "vt"add rbp,8mov [rbp],raxmov rax,str7AD6; w9Dcall w9D; 1?or rax,raxjz _o4E;; (; DROPmov rax,[rbp]sub rbp,8; w2C8jmp w2C8; ;; )_o4E:; DROPmov rax,[rbp]sub rbp,8; "vn"add rbp,8mov [rbp],raxmov rax,str7AF7; w9Dcall w9D; 1?or rax,raxjz _o4F;; (; DROPmov rax,[rbp]sub rbp,8; w2C9jmp w2C9; ;; )_o4F:; DROPmov rax,[rbp]sub rbp,8; "vp"add rbp,8mov [rbp],raxmov rax,str7B18; w9Dcall w9D; 1?or rax,raxjz _o50;; (; DROPmov rax,[rbp]sub rbp,8; w2CAjmp w2CA; ;; )_o50:; DROPmov rax,[rbp]sub rbp,8; "v"add rbp,8mov [rbp],raxmov rax,str7B39; w9Dcall w9D; 1?or rax,raxjz _o51;; (; DROPmov rax,[rbp]sub rbp,8; w2C7jmp w2C7; ;; )_o51:; DROPmov rax,[rbp]sub rbp,8; "f"add rbp,8mov [rbp],raxmov rax,str7B59; w9Dcall w9D; 1?or rax,raxjz _o52;; (; DROPmov rax,[rbp]sub rbp,8; w2D2jmp w2D2; ;; )_o52:; DROPmov rax,[rbp]sub rbp,8; "s"add rbp,8mov [rbp],raxmov rax,str7B79; w9Dcall w9D; 1?or rax,raxjz _o53;; (; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; wACjmp wAC; ;; )_o53:; DROPmov rax,[rbp]sub rbp,8; "o"add rbp,8mov [rbp],raxmov rax,str7B99; w9Dcall w9D; 1?or rax,raxjz _o54;; (; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; wACjmp wAC; ;; )_o54:; DROPmov rax,[rbp]sub rbp,8; "g"add rbp,8mov [rbp],raxmov rax,str7BB9; w9Dcall w9D; 1?or rax,raxjz _o55;; (; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; wACjmp wAC; ;; )_o55:; DROPmov rax,[rbp]sub rbp,8; "mtllib"add rbp,8mov [rbp],raxmov rax,str7BD9; w9Dcall w9D; 1?or rax,raxjz _o56;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o56:; DROPmov rax,[rbp]sub rbp,8; "usemtl"add rbp,8mov [rbp],raxmov rax,str7BF9; w9Dcall w9D; 1?or rax,raxjz _o57;; (; DROPmov rax,[rbp]sub rbp,8; w2D6jmp w2D6; ;; )_o57:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2D8  |3090|l  ;  .  | calls:3 niv:0 len:15 ( a -- b )w2D8:;---------OPT; A80F22:(	; [ 0 ] ; A80F26:C@+	; [ 0 ] ; A80F2A:$ff	; [ 0 0 ] ; A80F2E:AND	; [ 0 0 0 ] ; A80F32:13	; [ 0 0 ] ; A80F36:>?	; [ 0 0 1 ] ; A80F3A:DROP	; [ 0 0 ] ; A80F3E:)	; [ 0 ] ; A80F42:0?	; [ 0 0 ] ; A80F46:(	; [ 0 0 ] ; A80F4A:NIP	; [ 0 0 ] ; A80F4E:;	; [ 0 ] ; A80F52:)	; [ 0 ] ; A80F56:DROP	; [ 0 0 ] ; A80F5A:;	; [ 0 ] ;---------ANA;---------GEN; (_i58:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 13; OPTN >?cmp rax,13jle _o58; DROPmov rax,[rbp]sub rbp,8; )jmp _i58_o58:; 0?or rax,raxjnz _o59; (; NIPsub rbp,8; ;ret; )_o59:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2DC  |1001080|l     .  | calls:1 niv:1 len:13 ( a -- b )w2DC:;---------OPT; A80F82:w2C6	; [ 0 ] ; A80F86:'w2DA	; [ 0 2C6 ] ; A80F8A:!	; [ 0 2C6 2DA ] ; A80F8E:32	; [ 0 ] ; A80F92:'w2C6	; [ 0 0 ] ; A80F96:+!	; [ 0 0 2C6 ] ; A80F9A:7	; [ 0 ] ; A80F9E:+	; [ 0 1 ] ; A80FA2:wAC	; [ 0 ] ; A80FA6:DUP	; [ 0 ] ; A80FAA:w2DA	; [ 0 0 ] ; A80FAE:!	; [ 0 0 2DA ] ; A80FB2:;	; [ 0 ] ;---------ANA;---------GEN; w2C6add rbp,8mov [rbp],raxmov rax,qword[w2C6]; 'w2DA; OPTAV !mov qword[w2DA],raxmov rax,[rbp]sub rbp,8; 32add rbp,8mov [rbp],raxmov rax,32; 'w2C6; OPTAV +!add [w2C6],raxmov rax,[rbp]sub rbp,8; 7; OPTN +add rax,7; wACcall wAC; DUPadd rbp,8mov [rbp],rax; w2DA; OPTV !mov rbx,qword[w2DA]mov qword[rbx],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2DD  |2002080|l     .  | calls:2 niv:2 len:17 ( abcdefghijklmno -- pqrstuvwxyz{|}~ )w2DD:;---------OPT; A80FB6:7	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 ] ; A80FBA:+	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 ] ; A80FBE:wAC	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 ] ; A80FC2:DUP	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 ] ; A80FC6:w2DA	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 ] ; A80FCA:8	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2DA ] ; A80FCE:+	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2DA 1 ] ; A80FD2:!	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2DA ] ; A80FD6:DUP	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 ] ; A80FDA:'w2A7	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 ] ; A80FDE:"%s%l"	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 ] ; A80FE2:wF6	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 7CE0 ] ; A80FE6:w2DA	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 ] ; A80FEA:24	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 2DA ] ; A80FEE:+	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 2DA 2 ] ; A80FF2:!	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 2DA ] ; A80FF6:;	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 ] ;---------ANA;---------GEN; 7; OPTN +add rax,7; wACcall wAC; DUPadd rbp,8mov [rbp],rax; w2DAadd rbp,8mov [rbp],raxmov rax,qword[w2DA]; 8; OPTN +add rax,8; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; DUPadd rbp,8mov [rbp],rax; 'w2A7add rbp,8mov [rbp],raxmov rax,w2A7; "%s%l"add rbp,8mov [rbp],raxmov rax,str7CE0; wF6call wF6; w2DAadd rbp,8mov [rbp],raxmov rax,qword[w2DA]; 24; OPTN +add rax,24; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :w2DE  |2002080|l     .  | calls:2 niv:2 len:36 ( a -- b )w2DE:;---------OPT; A80FFA:3	; [ 0 ] ; A80FFE:+	; [ 0 0 ] ; A81002:wAC	; [ 0 ] ; A81006:w10A	; [ 0 ] ; A8100A:$ff	; [ 1 0 ] ; A8100E:1.0	; [ 1 0 1 ] ; A81012:*/	; [ 1 0 1 2 ] ; A81016:$ff0000	; [ 1 0 ] ; A8101A:AND	; [ 1 0 3 ] ; A8101E:SWAP	; [ 1 0 ] ; A81022:w10A	; [ 0 1 ] ; A81026:$ff	; [ 0 1 0 ] ; A8102A:1.0	; [ 0 1 0 4 ] ; A8102E:*/	; [ 0 1 0 4 5 ] ; A81032:8	; [ 0 1 0 ] ; A81036:>>	; [ 0 1 0 6 ] ; A8103A:$ff00	; [ 0 1 0 ] ; A8103E:AND	; [ 0 1 0 7 ] ; A81042:SWAP	; [ 0 1 0 ] ; A81046:w10A	; [ 0 0 1 ] ; A8104A:$ff	; [ 0 0 1 0 ] ; A8104E:1.0	; [ 0 0 1 0 8 ] ; A81052:*/	; [ 0 0 1 0 8 9 ] ; A81056:16	; [ 0 0 1 0 ] ; A8105A:>>	; [ 0 0 1 0 A ] ; A8105E:$ff	; [ 0 0 1 0 ] ; A81062:AND	; [ 0 0 1 0 B ] ; A81066:ROT	; [ 0 0 1 0 ] ; A8106A:OR	; [ 0 1 0 0 ] ; A8106E:ROT	; [ 0 1 0 ] ; A81072:OR	; [ 1 0 0 ] ; A81076:w2DA	; [ 1 0 ] ; A8107A:24	; [ 1 0 2DA ] ; A8107E:+	; [ 1 0 2DA C ] ; A81082:!	; [ 1 0 2DA ] ; A81086:;	; [ 1 ] ;---------ANA;---------GEN; 3; OPTN +add rax,3; wACcall wAC; w10Acall w10A; $ffadd rbp,8mov [rbp],raxmov rax,255; 1.0; OPTN */mov rbx,65536cqoimul qword[rbp]idiv rbxsub rbp,8; $ff0000; OPTN ANDand rax,16711680; SWAPxchg rax,[rbp]; w10Acall w10A; $ffadd rbp,8mov [rbp],raxmov rax,255; 1.0; OPTN */mov rbx,65536cqoimul qword[rbp]idiv rbxsub rbp,8; 8; OPTN >>sar rax,8; $ff00; OPTN ANDand rax,65280; SWAPxchg rax,[rbp]; w10Acall w10A; $ffadd rbp,8mov [rbp],raxmov rax,255; 1.0; OPTN */mov rbx,65536cqoimul qword[rbp]idiv rbxsub rbp,8; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ORor rax,[rbp]sub rbp,8; w2DAadd rbp,8mov [rbp],raxmov rax,qword[w2DA]; 24; OPTN +add rax,24; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :w2DF  |2001490|l  ;  . I| calls:1 niv:2 len:151 (  --  )w2DF:;---------OPT; A8108A:"newmtl "	; [ ] ; A8108E:w9D	; [ 7D8C ] ; A81092:1?	; [ 0 ] ; A81096:(	; [ 0 ] ; A8109A:DROP	; [ 0 ] ; A8109E:w2DC	; [ ] ; A810A2:;	; [ ] ; A810A6:)	; [ ] ; A810AA:DROP	; [ 0 ] ; A810AE:"Ka"	; [ ] ; A810B2:w9D	; [ 7DB2 ] ; A810B6:1?	; [ 0 ] ; A810BA:(	; [ 0 ] ; A810BE:DROP	; [ 0 ] ; A810C2:w2DE	; [ ] ; A810C6:;	; [ ] ; A810CA:)	; [ ] ; A810CE:DROP	; [ 0 ] ; A810D2:"Kd"	; [ ] ; A810D6:w9D	; [ 7DD3 ] ; A810DA:1?	; [ 0 ] ; A810DE:(	; [ 0 ] ; A810E2:DROP	; [ 0 ] ; A810E6:w2DE	; [ ] ; A810EA:;	; [ ] ; A810EE:)	; [ ] ; A810F2:DROP	; [ 0 ] ; A810F6:"Ks"	; [ ] ; A810FA:w9D	; [ 7DF4 ] ; A810FE:1?	; [ 0 ] ; A81102:(	; [ 0 ] ; A81106:DROP	; [ 0 ] ; A8110A:;	; [ ] ; A8110E:)	; [ ] ; A81112:DROP	; [ 0 ] ; A81116:"Ke"	; [ ] ; A8111A:w9D	; [ 7E10 ] ; A8111E:1?	; [ 0 ] ; A81122:(	; [ 0 ] ; A81126:DROP	; [ 0 ] ; A8112A:;	; [ ] ; A8112E:)	; [ ] ; A81132:DROP	; [ 0 ] ; A81136:"Ni"	; [ ] ; A8113A:w9D	; [ 7E2C ] ; A8113E:1?	; [ 0 ] ; A81142:(	; [ 0 ] ; A81146:DROP	; [ 0 ] ; A8114A:;	; [ ] ; A8114E:)	; [ ] ; A81152:DROP	; [ 0 ] ; A81156:"d "	; [ ] ; A8115A:w9D	; [ 7E48 ] ; A8115E:1?	; [ 0 ] ; A81162:(	; [ 0 ] ; A81166:DROP	; [ 0 ] ; A8116A:;	; [ ] ; A8116E:)	; [ ] ; A81172:DROP	; [ 0 ] ; A81176:"Tr"	; [ ] ; A8117A:w9D	; [ 7E64 ] ; A8117E:1?	; [ 0 ] ; A81182:(	; [ 0 ] ; A81186:DROP	; [ 0 ] ; A8118A:;	; [ ] ; A8118E:)	; [ ] ; A81192:DROP	; [ 0 ] ; A81196:"illum"	; [ ] ; A8119A:w9D	; [ 7E80 ] ; A8119E:1?	; [ 0 ] ; A811A2:(	; [ 0 ] ; A811A6:DROP	; [ 0 ] ; A811AA:w2DB	; [ ] ; A811AE:;	; [ ] ; A811B2:)	; [ ] ; A811B6:DROP	; [ 0 ] ; A811BA:"map_Kd"	; [ ] ; A811BE:w9D	; [ 7EA4 ] ; A811C2:1?	; [ 0 ] ; A811C6:(	; [ 0 ] ; A811CA:DROP	; [ 0 ] ; A811CE:w2DD	; [ ] ; A811D2:;	; [ 0 ] ; A811D6:)	; [ 0 ] ; A811DA:DROP	; [ 0 ] ; A811DE:"map_Ka"	; [ ] ; A811E2:w9D	; [ 7EC9 ] ; A811E6:1?	; [ 0 ] ; A811EA:(	; [ 0 ] ; A811EE:DROP	; [ 0 ] ; A811F2:w2DD	; [ ] ; A811F6:;	; [ 0 ] ; A811FA:)	; [ 0 ] ; A811FE:DROP	; [ 0 ] ; A81202:"map_Ks"	; [ ] ; A81206:w9D	; [ 7EEE ] ; A8120A:1?	; [ 0 ] ; A8120E:(	; [ 0 ] ; A81212:DROP	; [ 0 ] ; A81216:;	; [ ] ; A8121A:)	; [ ] ; A8121E:DROP	; [ 0 ] ; A81222:"map_Ns"	; [ ] ; A81226:w9D	; [ 7F0E ] ; A8122A:1?	; [ 0 ] ; A8122E:(	; [ 0 ] ; A81232:DROP	; [ 0 ] ; A81236:;	; [ ] ; A8123A:)	; [ ] ; A8123E:DROP	; [ 0 ] ; A81242:"map_d"	; [ ] ; A81246:w9D	; [ 7F2E ] ; A8124A:1?	; [ 0 ] ; A8124E:(	; [ 0 ] ; A81252:DROP	; [ 0 ] ; A81256:;	; [ ] ; A8125A:)	; [ ] ; A8125E:DROP	; [ 0 ] ; A81262:"map_bump "	; [ ] ; A81266:w9D	; [ 7F4D ] ; A8126A:1?	; [ 0 ] ; A8126E:(	; [ 0 ] ; A81272:DROP	; [ 0 ] ; A81276:;	; [ ] ; A8127A:)	; [ ] ; A8127E:DROP	; [ 0 ] ; A81282:"bump"	; [ ] ; A81286:w9D	; [ 7F70 ] ; A8128A:1?	; [ 0 ] ; A8128E:(	; [ 0 ] ; A81292:DROP	; [ 0 ] ; A81296:;	; [ ] ; A8129A:)	; [ ] ; A8129E:DROP	; [ 0 ] ; A812A2:"disp"	; [ ] ; A812A6:w9D	; [ 7F8E ] ; A812AA:1?	; [ 0 ] ; A812AE:(	; [ 0 ] ; A812B2:DROP	; [ 0 ] ; A812B6:;	; [ ] ; A812BA:)	; [ ] ; A812BE:DROP	; [ 0 ] ; A812C2:"decal"	; [ ] ; A812C6:w9D	; [ 7FAC ] ; A812CA:1?	; [ 0 ] ; A812CE:(	; [ 0 ] ; A812D2:DROP	; [ 0 ] ; A812D6:;	; [ ] ; A812DA:)	; [ ] ; A812DE:DROP	; [ 0 ] ; A812E2:;	; [ ] ;---------ANA;---------GEN; "newmtl "add rbp,8mov [rbp],raxmov rax,str7D8C; w9Dcall w9D; 1?or rax,raxjz _o5A;; (; DROPmov rax,[rbp]sub rbp,8; w2DCjmp w2DC; ;; )_o5A:; DROPmov rax,[rbp]sub rbp,8; "Ka"add rbp,8mov [rbp],raxmov rax,str7DB2; w9Dcall w9D; 1?or rax,raxjz _o5B;; (; DROPmov rax,[rbp]sub rbp,8; w2DEjmp w2DE; ;; )_o5B:; DROPmov rax,[rbp]sub rbp,8; "Kd"add rbp,8mov [rbp],raxmov rax,str7DD3; w9Dcall w9D; 1?or rax,raxjz _o5C;; (; DROPmov rax,[rbp]sub rbp,8; w2DEjmp w2DE; ;; )_o5C:; DROPmov rax,[rbp]sub rbp,8; "Ks"add rbp,8mov [rbp],raxmov rax,str7DF4; w9Dcall w9D; 1?or rax,raxjz _o5D;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o5D:; DROPmov rax,[rbp]sub rbp,8; "Ke"add rbp,8mov [rbp],raxmov rax,str7E10; w9Dcall w9D; 1?or rax,raxjz _o5E;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o5E:; DROPmov rax,[rbp]sub rbp,8; "Ni"add rbp,8mov [rbp],raxmov rax,str7E2C; w9Dcall w9D; 1?or rax,raxjz _o5F;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o5F:; DROPmov rax,[rbp]sub rbp,8; "d "add rbp,8mov [rbp],raxmov rax,str7E48; w9Dcall w9D; 1?or rax,raxjz _o60;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o60:; DROPmov rax,[rbp]sub rbp,8; "Tr"add rbp,8mov [rbp],raxmov rax,str7E64; w9Dcall w9D; 1?or rax,raxjz _o61;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o61:; DROPmov rax,[rbp]sub rbp,8; "illum"add rbp,8mov [rbp],raxmov rax,str7E80; w9Dcall w9D; 1?or rax,raxjz _o62;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o62:; DROPmov rax,[rbp]sub rbp,8; "map_Kd"add rbp,8mov [rbp],raxmov rax,str7EA4; w9Dcall w9D; 1?or rax,raxjz _o63;; (; DROPmov rax,[rbp]sub rbp,8; w2DDjmp w2DD; ;; )_o63:; DROPmov rax,[rbp]sub rbp,8; "map_Ka"add rbp,8mov [rbp],raxmov rax,str7EC9; w9Dcall w9D; 1?or rax,raxjz _o64;; (; DROPmov rax,[rbp]sub rbp,8; w2DDjmp w2DD; ;; )_o64:; DROPmov rax,[rbp]sub rbp,8; "map_Ks"add rbp,8mov [rbp],raxmov rax,str7EEE; w9Dcall w9D; 1?or rax,raxjz _o65;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o65:; DROPmov rax,[rbp]sub rbp,8; "map_Ns"add rbp,8mov [rbp],raxmov rax,str7F0E; w9Dcall w9D; 1?or rax,raxjz _o66;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o66:; DROPmov rax,[rbp]sub rbp,8; "map_d"add rbp,8mov [rbp],raxmov rax,str7F2E; w9Dcall w9D; 1?or rax,raxjz _o67;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o67:; DROPmov rax,[rbp]sub rbp,8; "map_bump "add rbp,8mov [rbp],raxmov rax,str7F4D; w9Dcall w9D; 1?or rax,raxjz _o68;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o68:; DROPmov rax,[rbp]sub rbp,8; "bump"add rbp,8mov [rbp],raxmov rax,str7F70; w9Dcall w9D; 1?or rax,raxjz _o69;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o69:; DROPmov rax,[rbp]sub rbp,8; "disp"add rbp,8mov [rbp],raxmov rax,str7F8E; w9Dcall w9D; 1?or rax,raxjz _o6A;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o6A:; DROPmov rax,[rbp]sub rbp,8; "decal"add rbp,8mov [rbp],raxmov rax,str7FAC; w9Dcall w9D; 1?or rax,raxjz _o6B;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o6B:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2E1  |1001490|l  ;  . I| calls:1 niv:1 len:14 ( a --  )w2E1:;---------OPT; A812EA:0?	; [ 0 ] ; A812EE:(	; [ 0 ] ; A812F2:DROP	; [ 0 ] ; A812F6:w2E0	; [ ] ; A812FA:;	; [ ] ; A812FE:)	; [ ] ; A81302:(	; [ 0 ] ; A81306:wAC	; [ 0 ] ; A8130A:w2DF	; [ 0 ] ; A8130E:w2D8	; [ 0 ] ; A81312:1?	; [ 0 ] ; A81316:)	; [ 0 ] ; A8131A:DROP	; [ 0 ] ; A8131E:;	; [ ] ;---------ANA;---------GEN; 0?or rax,raxjnz _o6C; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o6C:; (_i6D:; wACcall wAC; w2DFcall w2DF; w2D8call w2D8; 1?or rax,raxjz _o6D;; )jmp _i6D_o6D:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2E2  |2001080|l     .  | calls:1 niv:2 len:19 ( abcdefghijklmno -- pqrstuvwxyz{|}~ )w2E2:;---------OPT; A81322:6	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 ] ; A81326:+	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 ] ; A8132A:wAC	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 ] ; A8132E:DUP	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 ] ; A81332:'w2A7	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 ] ; A81336:"%s%l"	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 ] ; A8133A:wF6	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 8022 ] ; A8133E:wC8	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 ] ; A81342:DUP	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 C8 ] ; A81346:'w2B4	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 C8 C8 ] ; A8134A:!	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 C8 C8 2B4 ] ; A8134E:SWAP	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 C8 ] ; A81352:wC1	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 C8 0 ] ; A81356:0	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 ] ; A8135A:SWAP	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 0 1 ] ; A8135E:!+	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 1 0 ] ; A81362:'wC8	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 1 ] ; A81366:!	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 1 C8 ] ; A8136A:;	; [ E D C B A 9 8 7 6 5 4 3 2 1 0 0 2A7 ] ;---------ANA;---------GEN; 6; OPTN +add rax,6; wACcall wAC; DUPadd rbp,8mov [rbp],rax; 'w2A7add rbp,8mov [rbp],raxmov rax,w2A7; "%s%l"add rbp,8mov [rbp],raxmov rax,str8022; wF6call wF6; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; DUPadd rbp,8mov [rbp],rax; 'w2B4; OPTAV !mov qword[w2B4],raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; wC1call wC1; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2E3  |1080|l     .  | calls:1 niv:0 len:19 ( a -- b )w2E3:;---------OPT; A8136E:0	; [ 0 ] ; A81372:SWAP	; [ 0 0 ] ; A81376:(	; [ 0 0 ] ; A8137A:C@+	; [ 0 0 ] ; A8137E:13	; [ 0 0 0 ] ; A81382:>?	; [ 0 0 0 1 ] ; A81386:$2f	; [ 0 0 0 ] ; A8138A:=?	; [ 0 0 0 2 ] ; A8138E:(	; [ 0 0 0 ] ; A81392:ROT	; [ 0 0 0 ] ; A81396:1	; [ 0 0 0 ] ; A8139A:+	; [ 0 0 0 3 ] ; A8139E:ROT	; [ 0 0 0 ] ; A813A2:ROT	; [ 0 0 0 ] ; A813A6:)	; [ 0 0 0 ] ; A813AA:DROP	; [ 0 0 0 ] ; A813AE:)	; [ 0 0 ] ; A813B2:2DROP	; [ 0 0 0 ] ; A813B6:;	; [ 0 ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_i6E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 13; OPTN >?cmp rax,13jle _o6E; $2f; OPTN =?cmp rax,47jne _o6F; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN +add rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )_o6F:; DROPmov rax,[rbp]sub rbp,8; )jmp _i6E_o6E:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :w2E4  |1001080|l     .  | calls:1 niv:1 len:13 ( a -- bc )w2E4:;---------OPT; A813BA:DUP	; [ 0 ] ; A813BE:2	; [ 0 0 ] ; A813C2:+	; [ 0 0 0 ] ; A813C6:wAC	; [ 0 0 ] ; A813CA:w2E3	; [ 0 0 ] ; A813CE:1	; [ 0 0 ] ; A813D2:>>	; [ 0 0 1 ] ; A813D6:NOT	; [ 0 0 ] ; A813DA:1	; [ 0 0 ] ; A813DE:AND	; [ 0 0 2 ] ; A813E2:1	; [ 0 0 ] ; A813E6:+	; [ 0 0 3 ] ; A813EA:;	; [ 0 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 2; OPTN +add rax,2; wACcall wAC; w2E3call w2E3; 1; OPTN >>sar rax,1; NOTnot rax; 1; OPTN ANDand rax,1; 1; OPTN +add rax,1; ;ret;--------------------------; :w2E5  |2001090|l  ;  .  | calls:1 niv:2 len:100 (  --  )w2E5:;---------OPT; A813EE:"vt"	; [ ] ; A813F2:w9D	; [ 80CE ] ; A813F6:1?	; [ 0 ] ; A813FA:(	; [ 0 ] ; A813FE:DROP	; [ 0 ] ; A81402:1	; [ ] ; A81406:'w2C0	; [ 0 ] ; A8140A:+!	; [ 0 2C0 ] ; A8140E:;	; [ ] ; A81412:)	; [ ] ; A81416:DROP	; [ 0 ] ; A8141A:"vn"	; [ ] ; A8141E:w9D	; [ 80F5 ] ; A81422:1?	; [ 0 ] ; A81426:(	; [ 0 ] ; A8142A:DROP	; [ 0 ] ; A8142E:1	; [ ] ; A81432:'w2BD	; [ 1 ] ; A81436:+!	; [ 1 2BD ] ; A8143A:;	; [ ] ; A8143E:)	; [ ] ; A81442:DROP	; [ 0 ] ; A81446:"vp"	; [ ] ; A8144A:w9D	; [ 811C ] ; A8144E:1?	; [ 0 ] ; A81452:(	; [ 0 ] ; A81456:DROP	; [ 0 ] ; A8145A:1	; [ ] ; A8145E:'w2C3	; [ 2 ] ; A81462:+!	; [ 2 2C3 ] ; A81466:;	; [ ] ; A8146A:)	; [ ] ; A8146E:DROP	; [ 0 ] ; A81472:"v"	; [ ] ; A81476:w9D	; [ 8143 ] ; A8147A:1?	; [ 0 ] ; A8147E:(	; [ 0 ] ; A81482:DROP	; [ 0 ] ; A81486:1	; [ ] ; A8148A:'w2B7	; [ 3 ] ; A8148E:+!	; [ 3 2B7 ] ; A81492:;	; [ ] ; A81496:)	; [ ] ; A8149A:DROP	; [ 0 ] ; A8149E:"f"	; [ ] ; A814A2:w9D	; [ 8169 ] ; A814A6:1?	; [ 0 ] ; A814AA:(	; [ 0 ] ; A814AE:DROP	; [ 0 ] ; A814B2:w2E4	; [ ] ; A814B6:'w2BA	; [ 0 ] ; A814BA:+!	; [ 0 2BA ] ; A814BE:;	; [ ] ; A814C2:)	; [ ] ; A814C6:DROP	; [ 0 ] ; A814CA:"s"	; [ ] ; A814CE:w9D	; [ 8192 ] ; A814D2:1?	; [ 0 ] ; A814D6:(	; [ 0 ] ; A814DA:DROP	; [ 0 ] ; A814DE:;	; [ ] ; A814E2:)	; [ ] ; A814E6:DROP	; [ 0 ] ; A814EA:"o"	; [ ] ; A814EE:w9D	; [ 81AD ] ; A814F2:1?	; [ 0 ] ; A814F6:(	; [ 0 ] ; A814FA:DROP	; [ 0 ] ; A814FE:;	; [ ] ; A81502:)	; [ ] ; A81506:DROP	; [ 0 ] ; A8150A:"g"	; [ ] ; A8150E:w9D	; [ 81C8 ] ; A81512:1?	; [ 0 ] ; A81516:(	; [ 0 ] ; A8151A:DROP	; [ 0 ] ; A8151E:;	; [ ] ; A81522:)	; [ ] ; A81526:DROP	; [ 0 ] ; A8152A:"mtllib"	; [ ] ; A8152E:w9D	; [ 81E3 ] ; A81532:1?	; [ 0 ] ; A81536:(	; [ 0 ] ; A8153A:DROP	; [ 0 ] ; A8153E:w2E2	; [ ] ; A81542:;	; [ 0 ] ; A81546:)	; [ 0 ] ; A8154A:DROP	; [ 0 ] ; A8154E:"usemtl"	; [ ] ; A81552:w9D	; [ 8208 ] ; A81556:1?	; [ 0 ] ; A8155A:(	; [ 0 ] ; A8155E:DROP	; [ 0 ] ; A81562:1	; [ ] ; A81566:'w2C4	; [ 4 ] ; A8156A:+!	; [ 4 2C4 ] ; A8156E:;	; [ ] ; A81572:)	; [ ] ; A81576:DROP	; [ 0 ] ; A8157A:;	; [ ] ;---------ANA;---------GEN; "vt"add rbp,8mov [rbp],raxmov rax,str80CE; w9Dcall w9D; 1?or rax,raxjz _o70;; (; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'w2C0; OPTAV +!add [w2C0],raxmov rax,[rbp]sub rbp,8; ;ret; )_o70:; DROPmov rax,[rbp]sub rbp,8; "vn"add rbp,8mov [rbp],raxmov rax,str80F5; w9Dcall w9D; 1?or rax,raxjz _o71;; (; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'w2BD; OPTAV +!add [w2BD],raxmov rax,[rbp]sub rbp,8; ;ret; )_o71:; DROPmov rax,[rbp]sub rbp,8; "vp"add rbp,8mov [rbp],raxmov rax,str811C; w9Dcall w9D; 1?or rax,raxjz _o72;; (; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'w2C3; OPTAV +!add [w2C3],raxmov rax,[rbp]sub rbp,8; ;ret; )_o72:; DROPmov rax,[rbp]sub rbp,8; "v"add rbp,8mov [rbp],raxmov rax,str8143; w9Dcall w9D; 1?or rax,raxjz _o73;; (; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'w2B7; OPTAV +!add [w2B7],raxmov rax,[rbp]sub rbp,8; ;ret; )_o73:; DROPmov rax,[rbp]sub rbp,8; "f"add rbp,8mov [rbp],raxmov rax,str8169; w9Dcall w9D; 1?or rax,raxjz _o74;; (; DROPmov rax,[rbp]sub rbp,8; w2E4call w2E4; 'w2BA; OPTAV +!add [w2BA],raxmov rax,[rbp]sub rbp,8; ;ret; )_o74:; DROPmov rax,[rbp]sub rbp,8; "s"add rbp,8mov [rbp],raxmov rax,str8192; w9Dcall w9D; 1?or rax,raxjz _o75;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o75:; DROPmov rax,[rbp]sub rbp,8; "o"add rbp,8mov [rbp],raxmov rax,str81AD; w9Dcall w9D; 1?or rax,raxjz _o76;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o76:; DROPmov rax,[rbp]sub rbp,8; "g"add rbp,8mov [rbp],raxmov rax,str81C8; w9Dcall w9D; 1?or rax,raxjz _o77;; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o77:; DROPmov rax,[rbp]sub rbp,8; "mtllib"add rbp,8mov [rbp],raxmov rax,str81E3; w9Dcall w9D; 1?or rax,raxjz _o78;; (; DROPmov rax,[rbp]sub rbp,8; w2E2jmp w2E2; ;; )_o78:; DROPmov rax,[rbp]sub rbp,8; "usemtl"add rbp,8mov [rbp],raxmov rax,str8208; w9Dcall w9D; 1?or rax,raxjz _o79;; (; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'w2C4; OPTAV +!add [w2C4],raxmov rax,[rbp]sub rbp,8; ;ret; )_o79:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2E7  |2001490|l  ;  . I| calls:1 niv:2 len:117 ( ab -- c )w2E7:;---------OPT; A8159E:w2A8	; [ 1 0 ] ; A815A2:wC8	; [ 1 0 ] ; A815A6:DUP	; [ 1 0 C8 ] ; A815AA:'w2B3	; [ 1 0 C8 C8 ] ; A815AE:!	; [ 1 0 C8 C8 2B3 ] ; A815B2:SWAP	; [ 1 0 C8 ] ; A815B6:wC1	; [ 1 C8 0 ] ; A815BA:OVER	; [ 1 0 ] ; A815BE:=?	; [ 1 0 1 ] ; A815C2:(	; [ 1 0 ] ; A815C6:2DROP	; [ 1 0 ] ; A815CA:0	; [ ] ; A815CE:;	; [ 0 ] ; A815D2:)	; [ 0 ] ; A815D6:0	; [ 1 0 ] ; A815DA:SWAP	; [ 1 0 1 ] ; A815DE:!+	; [ 1 1 0 ] ; A815E2:'wC8	; [ 1 1 ] ; A815E6:!	; [ 1 1 C8 ] ; A815EA:0	; [ 1 ] ; A815EE:'w2B7	; [ 1 2 ] ; A815F2:!	; [ 1 2 2B7 ] ; A815F6:0	; [ 1 ] ; A815FA:'w2BA	; [ 1 3 ] ; A815FE:!	; [ 1 3 2BA ] ; A81602:0	; [ 1 ] ; A81606:'w2BD	; [ 1 4 ] ; A8160A:!	; [ 1 4 2BD ] ; A8160E:0	; [ 1 ] ; A81612:'w2C0	; [ 1 5 ] ; A81616:!	; [ 1 5 2C0 ] ; A8161A:0	; [ 1 ] ; A8161E:'w2C3	; [ 1 6 ] ; A81622:!	; [ 1 6 2C3 ] ; A81626:0	; [ 1 ] ; A8162A:'w2B4	; [ 1 7 ] ; A8162E:!	; [ 1 7 2B4 ] ; A81632:w2B3	; [ 1 ] ; A81636:w2E6	; [ 1 2B3 ] ; A8157E:(	; [ 1 2B3 ] ; A81582:wAC	; [ 1 2B3 ] ; A81586:w2E5	; [ 1 0 ] ; A8158A:w2D8	; [ 1 0 ] ; A8158E:1?	; [ 1 0 ] ; A81592:)	; [ 1 0 ] ; A81596:DROP	; [ 1 0 ] ; A8163A:wC8	; [ 1 ] ; A8163E:DUP	; [ 1 C8 ] ; A81642:DUP	; [ 1 C8 C8 ] ; A81646:'w2B5	; [ 1 C8 C8 C8 ] ; A8164A:!	; [ 1 C8 C8 C8 2B5 ] ; A8164E:'w2B6	; [ 1 C8 C8 ] ; A81652:!	; [ 1 C8 C8 2B6 ] ; A81656:w2B7	; [ 1 C8 ] ; A8165A:0?	; [ 1 C8 2B7 ] ; A8165E:(	; [ 1 C8 2B7 ] ; A81662:NIP	; [ 1 C8 2B7 ] ; A81666:;	; [ 1 2B7 ] ; A8166A:)	; [ 1 2B7 ] ; A8166E:5	; [ 1 C8 2B7 ] ; A81672:<<	; [ 1 C8 2B7 8 ] ; A81676:+	; [ 1 C8 2B7 ] ; A8167A:DUP	; [ 1 C8 ] ; A8167E:DUP	; [ 1 C8 C8 ] ; A81682:'w2BE	; [ 1 C8 C8 C8 ] ; A81686:!	; [ 1 C8 C8 C8 2BE ] ; A8168A:'w2BF	; [ 1 C8 C8 ] ; A8168E:!	; [ 1 C8 C8 2BF ] ; A81692:w2C0	; [ 1 C8 ] ; A81696:24	; [ 1 C8 2C0 ] ; A8169A:*	; [ 1 C8 2C0 9 ] ; A8169E:+	; [ 1 C8 2C0 ] ; A816A2:DUP	; [ 1 C8 ] ; A816A6:DUP	; [ 1 C8 C8 ] ; A816AA:'w2B8	; [ 1 C8 C8 C8 ] ; A816AE:!	; [ 1 C8 C8 C8 2B8 ] ; A816B2:'w2B9	; [ 1 C8 C8 ] ; A816B6:!	; [ 1 C8 C8 2B9 ] ; A816BA:w2BA	; [ 1 C8 ] ; A816BE:7	; [ 1 C8 2BA ] ; A816C2:3	; [ 1 C8 2BA A ] ; A816C6:<<	; [ 1 C8 2BA A B ] ; A816CA:*	; [ 1 C8 2BA B ] ; A816CE:+	; [ 1 C8 2BA ] ; A816D2:DUP	; [ 1 C8 ] ; A816D6:DUP	; [ 1 C8 C8 ] ; A816DA:'w2BB	; [ 1 C8 C8 C8 ] ; A816DE:!	; [ 1 C8 C8 C8 2BB ] ; A816E2:'w2BC	; [ 1 C8 C8 ] ; A816E6:!	; [ 1 C8 C8 2BC ] ; A816EA:w2BD	; [ 1 C8 ] ; A816EE:24	; [ 1 C8 2BD ] ; A816F2:*	; [ 1 C8 2BD C ] ; A816F6:+	; [ 1 C8 2BD ] ; A816FA:DUP	; [ 1 C8 ] ; A816FE:DUP	; [ 1 C8 C8 ] ; A81702:'w2C1	; [ 1 C8 C8 C8 ] ; A81706:!	; [ 1 C8 C8 C8 2C1 ] ; A8170A:'w2C2	; [ 1 C8 C8 ] ; A8170E:!	; [ 1 C8 C8 2C2 ] ; A81712:w2C3	; [ 1 C8 ] ; A81716:24	; [ 1 C8 2C3 ] ; A8171A:*	; [ 1 C8 2C3 D ] ; A8171E:+	; [ 1 C8 2C3 ] ; A81722:DUP	; [ 1 C8 ] ; A81726:DUP	; [ 1 C8 C8 ] ; A8172A:'w2C5	; [ 1 C8 C8 C8 ] ; A8172E:!	; [ 1 C8 C8 C8 2C5 ] ; A81732:'w2C6	; [ 1 C8 C8 ] ; A81736:!	; [ 1 C8 C8 2C6 ] ; A8173A:w2C4	; [ 1 C8 ] ; A8173E:1	; [ 1 C8 2C4 ] ; A81742:+	; [ 1 C8 2C4 E ] ; A81746:5	; [ 1 C8 2C4 ] ; A8174A:<<	; [ 1 C8 2C4 F ] ; A8174E:+	; [ 1 C8 2C4 ] ; A81752:'wC8	; [ 1 C8 ] ; A81756:!	; [ 1 C8 C8 ] ; A8175A:w2B4	; [ 1 ] ; A8175E:w2E1	; [ 1 2B4 ] ; A81762:w2B3	; [ 1 ] ; A81766:w2D9	; [ 1 2B3 ] ; A80F5E:(	; [ 1 2B3 ] ; A80F62:wAC	; [ 1 2B3 ] ; A80F66:w2D7	; [ 1 0 ] ; A80F6A:w2D8	; [ 1 0 ] ; A80F6E:1?	; [ 1 0 ] ; A80F72:)	; [ 1 0 ] ; A80F76:DROP	; [ 1 0 ] ; A8176A:wC8	; [ 1 ] ; A8176E:;	; [ 1 C8 ] ;---------ANA;---------GEN; w2A8call w2A8; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; DUPadd rbp,8mov [rbp],rax; 'w2B3; OPTAV !mov qword[w2B3],raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; wC1call wC1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o7A; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o7A:; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w2B7; OPTAV !mov qword[w2B7],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w2BA; OPTAV !mov qword[w2BA],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w2BD; OPTAV !mov qword[w2BD],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w2C0; OPTAV !mov qword[w2C0],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w2C3; OPTAV !mov qword[w2C3],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'w2B4; OPTAV !mov qword[w2B4],raxmov rax,[rbp]sub rbp,8; w2B3add rbp,8mov [rbp],raxmov rax,qword[w2B3]; (_i7B:; wACcall wAC; w2E5call w2E5; w2D8call w2D8; 1?or rax,raxjz _o7B;; )jmp _i7B_o7B:; DROPmov rax,[rbp]sub rbp,8; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 'w2B5; OPTAV !mov qword[w2B5],raxmov rax,[rbp]sub rbp,8; 'w2B6; OPTAV !mov qword[w2B6],raxmov rax,[rbp]sub rbp,8; w2B7add rbp,8mov [rbp],raxmov rax,qword[w2B7]; 0?or rax,raxjnz _o7C; (; NIPsub rbp,8; ;ret; )_o7C:; 5; OPTN <<shl rax,5; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 'w2BE; OPTAV !mov qword[w2BE],raxmov rax,[rbp]sub rbp,8; 'w2BF; OPTAV !mov qword[w2BF],raxmov rax,[rbp]sub rbp,8; w2C0add rbp,8mov [rbp],raxmov rax,qword[w2C0]; 24; OPTN *imul rax,24; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 'w2B8; OPTAV !mov qword[w2B8],raxmov rax,[rbp]sub rbp,8; 'w2B9; OPTAV !mov qword[w2B9],raxmov rax,[rbp]sub rbp,8; w2BAadd rbp,8mov [rbp],raxmov rax,qword[w2BA]; $38 ; calc; OPTC *imul rax,56; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 'w2BB; OPTAV !mov qword[w2BB],raxmov rax,[rbp]sub rbp,8; 'w2BC; OPTAV !mov qword[w2BC],raxmov rax,[rbp]sub rbp,8; w2BDadd rbp,8mov [rbp],raxmov rax,qword[w2BD]; 24; OPTN *imul rax,24; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 'w2C1; OPTAV !mov qword[w2C1],raxmov rax,[rbp]sub rbp,8; 'w2C2; OPTAV !mov qword[w2C2],raxmov rax,[rbp]sub rbp,8; w2C3add rbp,8mov [rbp],raxmov rax,qword[w2C3]; 24; OPTN *imul rax,24; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 'w2C5; OPTAV !mov qword[w2C5],raxmov rax,[rbp]sub rbp,8; 'w2C6; OPTAV !mov qword[w2C6],raxmov rax,[rbp]sub rbp,8; w2C4add rbp,8mov [rbp],raxmov rax,qword[w2C4]; 1; OPTN +add rax,1; 5; OPTN <<shl rax,5; +add rax,[rbp]sub rbp,8; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; w2B4add rbp,8mov [rbp],raxmov rax,qword[w2B4]; w2E1call w2E1; w2B3add rbp,8mov [rbp],raxmov rax,qword[w2B3]; (_i7D:; wACcall wAC; w2D7call w2D7; w2D8call w2D8; 1?or rax,raxjz _o7D;; )jmp _i7D_o7D:; DROPmov rax,[rbp]sub rbp,8; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; ;ret;--------------------------; :w2EE  |2080|l     .  | calls:2 niv:0 len:82 (  --  )w2EE:;---------OPT; A81772:w2B5	; [ ] ; A81776:>B	; [ 2B5 ] ; A8177A:B@+	; [ ] ; A8177E:DUP	; [ C8 ] ; A81782:'w2E8	; [ C8 C8 ] ; A81786:!	; [ C8 C8 2E8 ] ; A8178A:'w2EB	; [ C8 ] ; A8178E:!	; [ C8 2EB ] ; A81792:B@+	; [ ] ; A81796:DUP	; [ C8 ] ; A8179A:'w2E9	; [ C8 C8 ] ; A8179E:!	; [ C8 C8 2E9 ] ; A817A2:'w2EC	; [ C8 ] ; A817A6:!	; [ C8 2EC ] ; A817AA:B@+	; [ ] ; A817AE:DUP	; [ C8 ] ; A817B2:'w2EA	; [ C8 C8 ] ; A817B6:!	; [ C8 C8 2EA ] ; A817BA:'w2ED	; [ C8 ] ; A817BE:!	; [ C8 2ED ] ; A817C2:8	; [ ] ; A817C6:B+	; [ 0 ] ; A817CA:w2B7	; [ ] ; A817CE:1	; [ 2B7 ] ; A817D2:-	; [ 2B7 1 ] ; A817D6:(	; [ 2B7 ] ; A817DA:1?	; [ 2B7 ] ; A817DE:1	; [ 2B7 ] ; A817E2:-	; [ 2B7 2 ] ; A817E6:B@+	; [ 2B7 ] ; A817EA:w2E8	; [ 2B7 2B7 ] ; A817EE:<?	; [ 2B7 2B7 2E8 ] ; A817F2:(	; [ 2B7 2B7 ] ; A817F6:DUP	; [ 2B7 2B7 ] ; A817FA:'w2E8	; [ 2B7 2B7 2B7 ] ; A817FE:!	; [ 2B7 2B7 2B7 2E8 ] ; A81802:)	; [ 2B7 2B7 ] ; A81806:w2EB	; [ 2B7 2B7 ] ; A8180A:>?	; [ 2B7 2B7 2EB ] ; A8180E:(	; [ 2B7 2B7 ] ; A81812:DUP	; [ 2B7 2B7 ] ; A81816:'w2EB	; [ 2B7 2B7 2B7 ] ; A8181A:!	; [ 2B7 2B7 2B7 2EB ] ; A8181E:)	; [ 2B7 2B7 ] ; A81822:DROP	; [ 2B7 2B7 ] ; A81826:B@+	; [ 2B7 ] ; A8182A:w2E9	; [ 2B7 2B7 ] ; A8182E:<?	; [ 2B7 2B7 2E9 ] ; A81832:(	; [ 2B7 2B7 ] ; A81836:DUP	; [ 2B7 2B7 ] ; A8183A:'w2E9	; [ 2B7 2B7 2B7 ] ; A8183E:!	; [ 2B7 2B7 2B7 2E9 ] ; A81842:)	; [ 2B7 2B7 ] ; A81846:w2EC	; [ 2B7 2B7 ] ; A8184A:>?	; [ 2B7 2B7 2EC ] ; A8184E:(	; [ 2B7 2B7 ] ; A81852:DUP	; [ 2B7 2B7 ] ; A81856:'w2EC	; [ 2B7 2B7 2B7 ] ; A8185A:!	; [ 2B7 2B7 2B7 2EC ] ; A8185E:)	; [ 2B7 2B7 ] ; A81862:DROP	; [ 2B7 2B7 ] ; A81866:B@+	; [ 2B7 ] ; A8186A:w2EA	; [ 2B7 2B7 ] ; A8186E:<?	; [ 2B7 2B7 2EA ] ; A81872:(	; [ 2B7 2B7 ] ; A81876:DUP	; [ 2B7 2B7 ] ; A8187A:'w2EA	; [ 2B7 2B7 2B7 ] ; A8187E:!	; [ 2B7 2B7 2B7 2EA ] ; A81882:)	; [ 2B7 2B7 ] ; A81886:w2ED	; [ 2B7 2B7 ] ; A8188A:>?	; [ 2B7 2B7 2ED ] ; A8188E:(	; [ 2B7 2B7 ] ; A81892:DUP	; [ 2B7 2B7 ] ; A81896:'w2ED	; [ 2B7 2B7 2B7 ] ; A8189A:!	; [ 2B7 2B7 2B7 2ED ] ; A8189E:)	; [ 2B7 2B7 ] ; A818A2:DROP	; [ 2B7 2B7 ] ; A818A6:8	; [ 2B7 ] ; A818AA:B+	; [ 2B7 3 ] ; A818AE:)	; [ 2B7 ] ; A818B2:DROP	; [ 2B7 ] ; A818B6:;	; [ ] ;---------ANA;---------GEN; w2B5; OPTV >Bmov r15,qword[w2B5]; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; DUPadd rbp,8mov [rbp],rax; 'w2E8; OPTAV !mov qword[w2E8],raxmov rax,[rbp]sub rbp,8; 'w2EB; OPTAV !mov qword[w2EB],raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; DUPadd rbp,8mov [rbp],rax; 'w2E9; OPTAV !mov qword[w2E9],raxmov rax,[rbp]sub rbp,8; 'w2EC; OPTAV !mov qword[w2EC],raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; DUPadd rbp,8mov [rbp],rax; 'w2EA; OPTAV !mov qword[w2EA],raxmov rax,[rbp]sub rbp,8; 'w2ED; OPTAV !mov qword[w2ED],raxmov rax,[rbp]sub rbp,8; 8; OPTN B+add r15,8; w2B7add rbp,8mov [rbp],raxmov rax,qword[w2B7]; 1; OPTN -sub rax,1; (_i7E:; 1?or rax,raxjz _o7E;; 1; OPTN -sub rax,1; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; w2E8; OPTV <?cmp rax,qword[w2E8]jge _o7F; (; DUPadd rbp,8mov [rbp],rax; 'w2E8; OPTAV !mov qword[w2E8],raxmov rax,[rbp]sub rbp,8; )_o7F:; w2EB; OPTV >?cmp rax,qword[w2EB]jle _o80; (; DUPadd rbp,8mov [rbp],rax; 'w2EB; OPTAV !mov qword[w2EB],raxmov rax,[rbp]sub rbp,8; )_o80:; DROPmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; w2E9; OPTV <?cmp rax,qword[w2E9]jge _o81; (; DUPadd rbp,8mov [rbp],rax; 'w2E9; OPTAV !mov qword[w2E9],raxmov rax,[rbp]sub rbp,8; )_o81:; w2EC; OPTV >?cmp rax,qword[w2EC]jle _o82; (; DUPadd rbp,8mov [rbp],rax; 'w2EC; OPTAV !mov qword[w2EC],raxmov rax,[rbp]sub rbp,8; )_o82:; DROPmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; w2EA; OPTV <?cmp rax,qword[w2EA]jge _o83; (; DUPadd rbp,8mov [rbp],rax; 'w2EA; OPTAV !mov qword[w2EA],raxmov rax,[rbp]sub rbp,8; )_o83:; w2ED; OPTV >?cmp rax,qword[w2ED]jle _o84; (; DUPadd rbp,8mov [rbp],rax; 'w2ED; OPTAV !mov qword[w2ED],raxmov rax,[rbp]sub rbp,8; )_o84:; DROPmov rax,[rbp]sub rbp,8; 8; OPTN B+add r15,8; )jmp _i7E_o7E:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w2EF  |1080|l     .  | calls:1 niv:0 len:24 ( abc --  )w2EF:;---------OPT; A818BA:w2B5	; [ 2 1 0 ] ; A818BE:>B	; [ 2 1 0 2B5 ] ; A818C2:w2B7	; [ 2 1 0 ] ; A818C6:(	; [ 2 1 0 2B7 ] ; A818CA:1?	; [ 2 1 0 2B7 ] ; A818CE:1	; [ 2 1 0 2B7 ] ; A818D2:-	; [ 2 1 0 2B7 0 ] ; A818D6:B@	; [ 2 1 0 2B7 ] ; A818DA:PICK4	; [ 2 1 0 2B7 2B7 ] ; A818DE:+	; [ 2 1 0 2B7 2B7 2 ] ; A818E2:B!+	; [ 2 1 0 2B7 2B7 ] ; A818E6:B@	; [ 2 1 0 2B7 ] ; A818EA:PICK3	; [ 2 1 0 2B7 2B7 ] ; A818EE:+	; [ 2 1 0 2B7 2B7 1 ] ; A818F2:B!+	; [ 2 1 0 2B7 2B7 ] ; A818F6:B@	; [ 2 1 0 2B7 ] ; A818FA:PICK2	; [ 2 1 0 2B7 2B7 ] ; A818FE:+	; [ 2 1 0 2B7 2B7 0 ] ; A81902:B!+	; [ 2 1 0 2B7 2B7 ] ; A81906:8	; [ 2 1 0 2B7 ] ; A8190A:B+	; [ 2 1 0 2B7 1 ] ; A8190E:)	; [ 2 1 0 2B7 ] ; A81912:4DROP	; [ 2 1 0 2B7 ] ; A81916:;	; [ ] ;---------ANA;---------GEN; w2B5; OPTV >Bmov r15,qword[w2B5]; w2B7add rbp,8mov [rbp],raxmov rax,qword[w2B7]; (_i85:; 1?or rax,raxjz _o85;; 1; OPTN -sub rax,1; B@add rbp,8mov [rbp],raxmov rax,qword[r15]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; +add rax,[rbp]sub rbp,8; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; B@add rbp,8mov [rbp],raxmov rax,qword[r15]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; +add rax,[rbp]sub rbp,8; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; B@add rbp,8mov [rbp],raxmov rax,qword[r15]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; B!+mov qword[r15],raxadd r15,8mov rax,[rbp]sub rbp,8; 8; OPTN B+add r15,8; )jmp _i85_o85:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret;--------------------------; :w2F0  |1002080|l     .  | calls:2 niv:1 len:20 (  --  )w2F0:;---------OPT; A8191A:w2EB	; [ ] ; A8191E:w2E8	; [ 2EB ] ; A81922:+	; [ 2EB 2E8 ] ; A81926:1	; [ 2EB ] ; A8192A:>>	; [ 2EB 0 ] ; A8192E:NEG	; [ 2EB ] ; A81932:w2EC	; [ 2EB ] ; A81936:w2E9	; [ 2EB 2EC ] ; A8193A:+	; [ 2EB 2EC 2E9 ] ; A8193E:1	; [ 2EB 2EC ] ; A81942:>>	; [ 2EB 2EC 1 ] ; A81946:NEG	; [ 2EB 2EC ] ; A8194A:w2ED	; [ 2EB 2EC ] ; A8194E:w2EA	; [ 2EB 2EC 2ED ] ; A81952:+	; [ 2EB 2EC 2ED 2EA ] ; A81956:1	; [ 2EB 2EC 2ED ] ; A8195A:>>	; [ 2EB 2EC 2ED 2 ] ; A8195E:NEG	; [ 2EB 2EC 2ED ] ; A81962:w2EF	; [ 2EB 2EC 2ED ] ; A81966:;	; [ ] ;---------ANA;---------GEN; w2EBadd rbp,8mov [rbp],raxmov rax,qword[w2EB]; w2E8; OPTV +add rax,qword[w2E8]; 1; OPTN >>sar rax,1; NEGneg rax; w2ECadd rbp,8mov [rbp],raxmov rax,qword[w2EC]; w2E9; OPTV +add rax,qword[w2E9]; 1; OPTN >>sar rax,1; NEGneg rax; w2EDadd rbp,8mov [rbp],raxmov rax,qword[w2ED]; w2EA; OPTV +add rax,qword[w2EA]; 1; OPTN >>sar rax,1; NEGneg rax; w2EFjmp w2EF; ;;--------------------------; :w2FA  |3080|l     .  | calls:3 niv:0 len:9 ( a -- bc )w2FA:;---------OPT; A81B32:DUP	; [ 0 ] ; A81B36:32	; [ 0 0 ] ; A81B3A:>>	; [ 0 0 0 ] ; A81B3E:SWAP	; [ 0 0 ] ; A81B42:32	; [ 0 0 ] ; A81B46:<<	; [ 0 0 1 ] ; A81B4A:32	; [ 0 0 ] ; A81B4E:>>	; [ 0 0 2 ] ; A81B52:;	; [ 0 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; SWAPxchg rax,[rbp]; 32; OPTN <<shl rax,32; 32; OPTN >>sar rax,32; ;ret;--------------------------; :w2FE  |2001080|l     .  | calls:1 niv:2 len:12 ( abcdef --  )w2FE:;---------OPT; A81D06:>R	; [ 5 4 3 2 1 0 ] ; A81D0A:>R	; [ 5 4 3 2 1 ] ; A81D0E:2OVER	; [ 5 4 3 2 ] ; A81D12:2OVER	; [ 5 4 3 2 5 4 ] ; A81D16:w257	; [ 5 4 3 2 5 4 3 2 ] ; A81D1A:R>	; [ 5 4 3 2 ] ; A81D1E:R>	; [ 5 4 3 2 2 ] ; A81D22:2SWAP	; [ 5 4 3 2 2 2 ] ; A81D26:2OVER	; [ 5 4 2 2 3 2 ] ; A81D2A:w257	; [ 5 4 2 2 3 2 2 2 ] ; A81D2E:w257	; [ 5 4 2 2 ] ; A81D32:;	; [ ] ;---------ANA;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; w257call w257; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; w257call w257; w257jmp w257; ;;--------------------------; :w2FF  |1001480|l     . I| calls:1 niv:1 len:68 (  --  )w2FF:;---------OPT; A81D36:wCB	; [ ] ; A7C0CE:wC8	; [ ] ; A7C0D2:wCA	; [ C8 ] ; A7C0D6:!+	; [ C8 CA ] ; A7C0DA:'wCA	; [ C8 ] ; A7C0DE:!	; [ C8 CA ] ; A81D3A:wC8	; [ ] ; A81D3E:'w2F3	; [ C8 ] ; A81D42:!	; [ C8 2F3 ] ; A81D46:w2B5	; [ ] ; A81D4A:>B	; [ 2B5 ] ; A81D4E:w2B7	; [ ] ; A81D52:(	; [ 2B7 ] ; A81D56:1?	; [ 2B7 ] ; A81D5A:1	; [ 2B7 ] ; A81D5E:-	; [ 2B7 0 ] ; A81D62:B@+	; [ 2B7 ] ; A81D66:B@+	; [ 2B7 2B7 ] ; A81D6A:B@+	; [ 2B7 2B7 2B7 ] ; A81D6E:8	; [ 2B7 2B7 2B7 2B7 ] ; A81D72:B+	; [ 2B7 2B7 2B7 2B7 1 ] ; A81D76:w29C	; [ 2B7 2B7 2B7 2B7 ] ; A81D7A:w2FB	; [ 2B7 1 0 ] ; A81B56:$ffffffff	; [ 2B7 1 0 ] ; A81B5A:AND	; [ 2B7 1 0 2 ] ; A81B5E:SWAP	; [ 2B7 1 0 ] ; A81B62:32	; [ 2B7 0 1 ] ; A81B66:<<	; [ 2B7 0 1 3 ] ; A81B6A:OR	; [ 2B7 0 1 ] ; A81D7E:wD5	; [ 2B7 0 ] ; A7C236:wC8	; [ 2B7 0 ] ; A7C23A:!+	; [ 2B7 0 C8 ] ; A7C23E:'wC8	; [ 2B7 0 ] ; A7C242:!	; [ 2B7 0 C8 ] ; A81D82:)	; [ 2B7 ] ; A81D86:DROP	; [ 2B7 ] ; A81D8A:w2B8	; [ ] ; A81D8E:>B	; [ 2B8 ] ; A81D92:w2BA	; [ ] ; A81D96:(	; [ 2BA ] ; A81D9A:1?	; [ 2BA ] ; A81D9E:1	; [ 2BA ] ; A81DA2:-	; [ 2BA 4 ] ; A81DA6:B@+	; [ 2BA ] ; A81DAA:8	; [ 2BA 2BA ] ; A81DAE:B+	; [ 2BA 2BA 5 ] ; A81DB2:1	; [ 2BA 2BA ] ; A81DB6:-	; [ 2BA 2BA 6 ] ; A81DBA:3	; [ 2BA 2BA ] ; A81DBE:<<	; [ 2BA 2BA 7 ] ; A81DC2:w2F3	; [ 2BA 2BA ] ; A81DC6:+	; [ 2BA 2BA 2F3 ] ; A81DCA:@	; [ 2BA 2BA ] ; A81DCE:w2FA	; [ 2BA 2BA ] ; A81DD2:B@+	; [ 2BA 1 0 ] ; A81DD6:8	; [ 2BA 1 0 0 ] ; A81DDA:B+	; [ 2BA 1 0 0 8 ] ; A81DDE:1	; [ 2BA 1 0 0 ] ; A81DE2:-	; [ 2BA 1 0 0 9 ] ; A81DE6:3	; [ 2BA 1 0 0 ] ; A81DEA:<<	; [ 2BA 1 0 0 A ] ; A81DEE:w2F3	; [ 2BA 1 0 0 ] ; A81DF2:+	; [ 2BA 1 0 0 2F3 ] ; A81DF6:@	; [ 2BA 1 0 0 ] ; A81DFA:w2FA	; [ 2BA 1 0 0 ] ; A81DFE:B@+	; [ 2BA 1 0 1 0 ] ; A81E02:8	; [ 2BA 1 0 1 0 0 ] ; A81E06:B+	; [ 2BA 1 0 1 0 0 B ] ; A81E0A:1	; [ 2BA 1 0 1 0 0 ] ; A81E0E:-	; [ 2BA 1 0 1 0 0 C ] ; A81E12:3	; [ 2BA 1 0 1 0 0 ] ; A81E16:<<	; [ 2BA 1 0 1 0 0 D ] ; A81E1A:w2F3	; [ 2BA 1 0 1 0 0 ] ; A81E1E:+	; [ 2BA 1 0 1 0 0 2F3 ] ; A81E22:@	; [ 2BA 1 0 1 0 0 ] ; A81E26:w2FA	; [ 2BA 1 0 1 0 0 ] ; A81E2A:8	; [ 2BA 1 0 1 0 1 0 ] ; A81E2E:B+	; [ 2BA 1 0 1 0 1 0 E ] ; A81E32:w2FE	; [ 2BA 1 0 1 0 1 0 ] ; A81E36:)	; [ 2BA ] ; A81E3A:DROP	; [ 2BA ] ; A81E3E:wCC	; [ ] ; A81E42:;	; [ ] ;---------ANA;---------GEN; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; wCA; OPTV !+mov rbx,qword[wCA]mov [rbx],raxadd rbx,8mov rax,rbx; 'wCA; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; 'w2F3; OPTAV !mov qword[w2F3],raxmov rax,[rbp]sub rbp,8; w2B5; OPTV >Bmov r15,qword[w2B5]; w2B7add rbp,8mov [rbp],raxmov rax,qword[w2B7]; (_i86:; 1?or rax,raxjz _o86;; 1; OPTN -sub rax,1; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 8; OPTN B+add r15,8; w29Ccall w29C; $ffffffff; OPTN ANDmov rbx,4294967295and rax,rbx; SWAPxchg rax,[rbp]; 32; OPTN <<shl rax,32; ORor rax,[rbp]sub rbp,8; wC8; OPTV !+mov rbx,qword[wC8]mov [rbx],raxadd rbx,8mov rax,rbx; 'wC8; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; )jmp _i86_o86:; DROPmov rax,[rbp]sub rbp,8; w2B8; OPTV >Bmov r15,qword[w2B8]; w2BAadd rbp,8mov [rbp],raxmov rax,qword[w2BA]; (_i87:; 1?or rax,raxjz _o87;; 1; OPTN -sub rax,1; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 8; OPTN B+add r15,8; 1; OPTN -sub rax,1; 3; OPTN <<shl rax,3; w2F3; OPTV +add rax,qword[w2F3]; @mov rax,qword[rax]; w2FAcall w2FA; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 8; OPTN B+add r15,8; 1; OPTN -sub rax,1; 3; OPTN <<shl rax,3; w2F3; OPTV +add rax,qword[w2F3]; @mov rax,qword[rax]; w2FAcall w2FA; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 8; OPTN B+add r15,8; 1; OPTN -sub rax,1; 3; OPTN <<shl rax,3; w2F3; OPTV +add rax,qword[w2F3]; @mov rax,qword[rax]; w2FAcall w2FA; 8; OPTN B+add r15,8; w2FEcall w2FE; )jmp _i87_o87:; DROPmov rax,[rbp]sub rbp,8; wCCjmp wCC; ;;--------------------------; :w305  |2001080|l     .  | calls:1 niv:2 len:21 (  --  )w305:;---------OPT; A81E52:w24B	; [ ] ; A81E56:w24C	; [ 24B ] ; A81E5A:w23F	; [ 24B 24C ] ; A81E5E:1	; [ 24B 24C 23F ] ; A81E62:>>	; [ 24B 24C 23F 0 ] ; A81E66:-	; [ 24B 24C 23F ] ; A81E6A:7	; [ 24B 24C ] ; A81E6E:<<	; [ 24B 24C 1 ] ; A81E72:SWAP	; [ 24B 24C ] ; A81E76:w23E	; [ 24C 24B ] ; A81E7A:1	; [ 24C 24B 23E ] ; A81E7E:>>	; [ 24C 24B 23E 2 ] ; A81E82:-	; [ 24C 24B 23E ] ; A81E86:NEG	; [ 24C 24B ] ; A81E8A:7	; [ 24C 24B ] ; A81E8E:<<	; [ 24C 24B 3 ] ; A81E92:SWAP	; [ 24C 24B ] ; A81E96:NEG	; [ 24B 24C ] ; A81E9A:w282	; [ 24B 24C ] ; A81E9E:w284	; [ 24B ] ; A81EA2:;	; [ ] ;---------ANA;---------GEN; w24Badd rbp,8mov [rbp],raxmov rax,qword[w24B]; w24Cadd rbp,8mov [rbp],raxmov rax,qword[w24C]; w23Fadd rbp,8mov [rbp],raxmov rax,qword[w23F]; 1; OPTN >>sar rax,1; -neg raxadd rax,[rbp]sub rbp,8; 7; OPTN <<shl rax,7; SWAPxchg rax,[rbp]; w23Eadd rbp,8mov [rbp],raxmov rax,qword[w23E]; 1; OPTN >>sar rax,1; -neg raxadd rax,[rbp]sub rbp,8; NEGneg rax; 7; OPTN <<shl rax,7; SWAPxchg rax,[rbp]; NEGneg rax; w282call w282; w284jmp w284; ;;--------------------------; :w307  |1001484|l'    . I| calls:1 niv:1 len:41 (  --  )w307:;---------OPT; A81EA6:0	; [ ] ; A81EAA:w25F	; [ 0 ] ; A7E6B6:w255	; [ 0 ] ; A7E6BA:w23D	; [ ] ; A7E6BE:w21C	; [ 23D ] ; A7DBDE:w1EA	; [ 23D ] ; A7DBE2:SYS1	; [ 23D 1EA ] ; A7DBE6:DROP	; [ 23D ] ; A81EAE:1.0	; [ ] ; A81EB2:w290	; [ 1 ] ; A81EB6:w305	; [ ] ; A81EBA:w300	; [ ] ; INLINE CTE; A81EBE:w301	; [ 2 ] ; INLINE CTE; A81EC2:w302	; [ 2 3 ] ; A81EC6:w27E	; [ 2 3 302 ] ; A81ECA:$ffffff	; [ ] ; A81ECE:w255	; [ 4 ] ; A81ED2:w2FF	; [ ] ; A81ED6:w260	; [ ] ; A7E6C6:w23D	; [ ] ; A7E6CA:w21F	; [ 23D ] ; A7DC0E:w1ED	; [ 23D ] ; A7DC12:SYS1	; [ 23D 1ED ] ; A7DC16:DROP	; [ 23D ] ; A81EDA:w249	; [ ] ; A81EDE:w17F	; [ 249 ] ; INLINE CTE; A81EE2:=?	; [ 249 5 ] ; A81EE6:(	; [ 249 ] ; A81EEA:1.0	; [ 249 ] ; A81EEE:'w302	; [ 249 6 ] ; A81EF2:+!	; [ 249 6 302 ] ; A81EF6:)	; [ 249 ] ; A81EFA:w17D	; [ 249 ] ; INLINE CTE; A81EFE:=?	; [ 249 7 ] ; A81F02:(	; [ 249 ] ; A81F06:-1.0	; [ 249 ] ; A81F0A:'w302	; [ 249 8 ] ; A81F0E:+!	; [ 249 8 302 ] ; A81F12:)	; [ 249 ] ; A81F16:w181	; [ 249 ] ; INLINE CTE; A81F1A:=?	; [ 249 9 ] ; A81F1E:(	; [ 249 ] ; A81F22:w2EE	; [ 249 ] ; A81F26:w2F0	; [ 249 ] ; A81F2A:)	; [ 249 ] ; A81F2E:w16A	; [ 249 ] ; INLINE CTE; A81F32:=?	; [ 249 A ] ; A81F36:(	; [ 249 ] ; A81F3A:w253	; [ 249 ] ; A7E15A:1	; [ 249 ] ; A7E15E:'w251	; [ 249 B ] ; A7E162:!	; [ 249 B 251 ] ; A81F3E:)	; [ 249 ] ; A81F42:DROP	; [ 249 ] ; A81F46:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; w255call w255; w23Dadd rbp,8mov [rbp],raxmov rax,qword[w23D]; w1EAadd rbp,8mov [rbp],raxmov rax,qword[w1EA]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; 1.0add rbp,8mov [rbp],raxmov rax,65536; w290call w290; w305call w305; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; w302add rbp,8mov [rbp],raxmov rax,qword[w302]; w27Ecall w27E; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; w255call w255; w2FFcall w2FF; w23Dadd rbp,8mov [rbp],raxmov rax,qword[w23D]; w1EDadd rbp,8mov [rbp],raxmov rax,qword[w1ED]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; w249add rbp,8mov [rbp],raxmov rax,qword[w249]; $4052; OPTN =?cmp rax,16466jne _o88; (; 1.0add rbp,8mov [rbp],raxmov rax,65536; 'w302; OPTAV +!add [w302],raxmov rax,[rbp]sub rbp,8; )_o88:; $4051; OPTN =?cmp rax,16465jne _o89; (; -1.0add rbp,8mov [rbp],raxmov rax,-65536; 'w302; OPTAV +!add [w302],raxmov rax,[rbp]sub rbp,8; )_o89:; $403a; OPTN =?cmp rax,16442jne _o8A; (; w2EEcall w2EE; w2F0call w2F0; )_o8A:; $101b; OPTN =?cmp rax,4123jne _o8B; (; 1add rbp,8mov [rbp],raxmov rax,1; 'w251; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; )_o8B:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |2001480|l     . I| calls:1 niv:2 len:11 ( a -- bc )INICIO:;---------OPT; A81F6A:w2B2	; [ 0 ] ; A81F6E:w308	; [ 0 ] ; A81F4A:wCB	; [ 0 ] ; A7C0CE:wC8	; [ 0 ] ; A7C0D2:wCA	; [ 0 C8 ] ; A7C0D6:!+	; [ 0 C8 CA ] ; A7C0DA:'wCA	; [ 0 C8 ] ; A7C0DE:!	; [ 0 C8 CA ] ; A81F4E:"media/obj/mario/mario.obj"	; [ 0 ] ; A81F52:w2E7	; [ 0 8BDE ] ; A81F56:'w306	; [ 0 ] ; A81F5A:!	; [ 0 306 ] ; A81F5E:w2EE	; [ ] ; A81F62:w2F0	; [ ] ; A81F72:3	; [ ] ; A81F76:"r3sdl"	; [ 0 ] ; A81F7A:800	; [ 0 8C21 ] ; A81F7E:600	; [ 0 8C21 1 ] ; A81F82:w243	; [ 0 8C21 1 2 ] ; A81F86:'w307	; [ 0 ] ; A81F8A:w252	; [ 0 307 ] ; A81F8E:w247	; [ 0 ] ; A7DF02:w23D	; [ 0 ] ; A7DF06:w21A	; [ 0 23D ] ; A7DBC6:w1E8	; [ 0 23D ] ; A7DBCA:SYS1	; [ 0 23D 1E8 ] ; A7DF0A:w23B	; [ 0 23D ] ; A7DF0E:w214	; [ 0 23D 23B ] ; A7DB6E:w1E4	; [ 0 23D 23B ] ; A7DB72:SYS1	; [ 0 23D 23B 1E4 ] ; A7DB76:DROP	; [ 0 23D 23B ] ; A7DF12:w20C	; [ 0 23D ] ; A7DAFA:w1DC	; [ 0 23D ] ; A7DAFE:SYS0	; [ 0 23D 1DC ] ; A7DB02:DROP	; [ 0 23D 1DC ] ; A81F92:;	; [ 0 23D ] ;---------ANA;---------GEN; w2B2call w2B2; wC8add rbp,8mov [rbp],raxmov rax,qword[wC8]; wCA; OPTV !+mov rbx,qword[wCA]mov [rbx],raxadd rbx,8mov rax,rbx; 'wCA; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; "media/obj/mario/mario.obj"add rbp,8mov [rbp],raxmov rax,str8BDE; w2E7call w2E7; 'w306; OPTAV !mov qword[w306],raxmov rax,[rbp]sub rbp,8; w2EEcall w2EE; w2F0call w2F0; 3add rbp,8mov [rbp],raxmov rax,3; "r3sdl"add rbp,8mov [rbp],raxmov rax,str8C21; 800add rbp,8mov [rbp],raxmov rax,800; 600add rbp,8mov [rbp],raxmov rax,600; w243call w243; 'w307add rbp,8mov [rbp],raxmov rax,w307; w252call w252; w23Dadd rbp,8mov [rbp],raxmov rax,qword[w23D]; w1E8add rbp,8mov [rbp],raxmov rax,qword[w1E8]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; w23Badd rbp,8mov [rbp],raxmov rax,qword[w23B]; w1E4add rbp,8mov [rbp],raxmov rax,qword[w1E4]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; w1DCadd rbp,8mov [rbp],raxmov rax,qword[w1DC]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret 