;---r3 compiler code.asm; r3/demo/timeline.r3;--------------------------; :  |1080|l     .  | calls:1 niv:0 len:174 (  --  )w44:;---------OPT; C48870:"KERNEL32.DLL"	; [ ] ; C48874:LOADLIB	; [ 283F ] ; C48878:DUP	; [ 283F ] ; C4887C:"AllocConsole"	; [ 283F 283F ] ; C48880:GETPROC	; [ 283F 283F 285C ] ; C48884:'sys-AllocConsole	; [ 283F 283F ] ; C48888:!	; [ 283F 283F 0 ] ; C4888C:DUP	; [ 283F ] ; C48890:"ExitProcess"	; [ 283F 283F ] ; C48894:GETPROC	; [ 283F 283F 288C ] ; C48898:'sys-ExitProcess	; [ 283F 283F ] ; C4889C:!	; [ 283F 283F 1 ] ; C488A0:DUP	; [ 283F ] ; C488A4:"GetStdHandle"	; [ 283F 283F ] ; C488A8:GETPROC	; [ 283F 283F 28BB ] ; C488AC:'sys-GetStdHandle	; [ 283F 283F ] ; C488B0:!	; [ 283F 283F 2 ] ; C488B4:DUP	; [ 283F ] ; C488B8:"ReadFile"	; [ 283F 283F ] ; C488BC:GETPROC	; [ 283F 283F 28ED ] ; C488C0:'sys-ReadFile	; [ 283F 283F ] ; C488C4:!	; [ 283F 283F 3 ] ; C488C8:DUP	; [ 283F ] ; C488CC:"WriteFile"	; [ 283F 283F ] ; C488D0:GETPROC	; [ 283F 283F 2915 ] ; C488D4:'sys-WriteFile	; [ 283F 283F ] ; C488D8:!	; [ 283F 283F 4 ] ; C488DC:DUP	; [ 283F ] ; C488E0:"GetConsoleMode"	; [ 283F 283F ] ; C488E4:GETPROC	; [ 283F 283F 2941 ] ; C488E8:'sys-GetConsoleMode	; [ 283F 283F ] ; C488EC:!	; [ 283F 283F 5 ] ; C488F0:DUP	; [ 283F ] ; C488F4:"SetConsoleMode"	; [ 283F 283F ] ; C488F8:GETPROC	; [ 283F 283F 2975 ] ; C488FC:'sys-SetConsoleMode	; [ 283F 283F ] ; C48900:!	; [ 283F 283F 6 ] ; C48904:DUP	; [ 283F ] ; C48908:"PeekConsoleInputW"	; [ 283F 283F ] ; C4890C:GETPROC	; [ 283F 283F 29A9 ] ; C48910:'sys-PeekConsoleInput	; [ 283F 283F ] ; C48914:!	; [ 283F 283F 7 ] ; C48918:DUP	; [ 283F ] ; C4891C:"ReadConsoleInputW"	; [ 283F 283F ] ; C48920:GETPROC	; [ 283F 283F 29E2 ] ; C48924:'sys-ReadConsoleInput	; [ 283F 283F ] ; C48928:!	; [ 283F 283F 8 ] ; C4892C:DUP	; [ 283F ] ; C48930:"WriteConsole"	; [ 283F 283F ] ; C48934:GETPROC	; [ 283F 283F 2A1B ] ; C48938:'sys-WriteConsole	; [ 283F 283F ] ; C4893C:!	; [ 283F 283F 9 ] ; C48940:DUP	; [ 283F ] ; C48944:"FlushConsoleInputBuffer"	; [ 283F 283F ] ; C48948:GETPROC	; [ 283F 283F 2A4D ] ; C4894C:'sys-FlushConsoleInputBuffer	; [ 283F 283F ] ; C48950:!	; [ 283F 283F A ] ; C48954:DUP	; [ 283F ] ; C48958:"Sleep"	; [ 283F 283F ] ; C4895C:GETPROC	; [ 283F 283F 2A93 ] ; C48960:'sys-Sleep	; [ 283F 283F ] ; C48964:!	; [ 283F 283F B ] ; C48968:DUP	; [ 283F ] ; C4896C:"WaitForSingleObject"	; [ 283F 283F ] ; C48970:GETPROC	; [ 283F 283F 2AB5 ] ; C48974:'sys-WaitForSingleObject	; [ 283F 283F ] ; C48978:!	; [ 283F 283F C ] ; C4897C:DUP	; [ 283F ] ; C48980:"GetLastError"	; [ 283F 283F ] ; C48984:GETPROC	; [ 283F 283F 2AF4 ] ; C48988:'sys-GetLastError	; [ 283F 283F ] ; C4898C:!	; [ 283F 283F D ] ; C48990:DUP	; [ 283F ] ; C48994:"CreateFileA"	; [ 283F 283F ] ; C48998:GETPROC	; [ 283F 283F 2B25 ] ; C4899C:'sys-CreateFile	; [ 283F 283F ] ; C489A0:!	; [ 283F 283F E ] ; C489A4:DUP	; [ 283F ] ; C489A8:"CloseHandle"	; [ 283F 283F ] ; C489AC:GETPROC	; [ 283F 283F 2B53 ] ; C489B0:'sys-CloseHandle	; [ 283F 283F ] ; C489B4:!	; [ 283F 283F F ] ; C489B8:DUP	; [ 283F ] ; C489BC:"FlushFileBuffers"	; [ 283F 283F ] ; C489C0:GETPROC	; [ 283F 283F 2B81 ] ; C489C4:'sys-FlushFileBuffers	; [ 283F 283F ] ; C489C8:!	; [ 283F 283F 10 ] ; C489CC:DUP	; [ 283F ] ; C489D0:"DeleteFileA"	; [ 283F 283F ] ; C489D4:GETPROC	; [ 283F 283F 2BB9 ] ; C489D8:'sys-DeleteFile	; [ 283F 283F ] ; C489DC:!	; [ 283F 283F 11 ] ; C489E0:DUP	; [ 283F ] ; C489E4:"MoveFileA"	; [ 283F 283F ] ; C489E8:GETPROC	; [ 283F 283F 2BE6 ] ; C489EC:'sys-MoveFile	; [ 283F 283F ] ; C489F0:!	; [ 283F 283F 12 ] ; C489F4:DUP	; [ 283F ] ; C489F8:"SetFilePointer"	; [ 283F 283F ] ; C489FC:GETPROC	; [ 283F 283F 2C0F ] ; C48A00:'sys-SetFilePointer	; [ 283F 283F ] ; C48A04:!	; [ 283F 283F 13 ] ; C48A08:DUP	; [ 283F ] ; C48A0C:"SetEndOfFile"	; [ 283F 283F ] ; C48A10:GETPROC	; [ 283F 283F 2C43 ] ; C48A14:'sys-SetEndOfFile	; [ 283F 283F ] ; C48A18:!	; [ 283F 283F 14 ] ; C48A1C:DUP	; [ 283F ] ; C48A20:"GetFileSize"	; [ 283F 283F ] ; C48A24:GETPROC	; [ 283F 283F 2C73 ] ; C48A28:'sys-GetFileSize	; [ 283F 283F ] ; C48A2C:!	; [ 283F 283F 15 ] ; C48A30:DUP	; [ 283F ] ; C48A34:"GetProcessHeap"	; [ 283F 283F ] ; C48A38:GETPROC	; [ 283F 283F 2CA2 ] ; C48A3C:'sys-GetProcessHeap	; [ 283F 283F ] ; C48A40:!	; [ 283F 283F 16 ] ; C48A44:DUP	; [ 283F ] ; C48A48:"HeapAlloc"	; [ 283F 283F ] ; C48A4C:GETPROC	; [ 283F 283F 2CD6 ] ; C48A50:'sys-HeapAlloc	; [ 283F 283F ] ; C48A54:!	; [ 283F 283F 17 ] ; C48A58:DUP	; [ 283F ] ; C48A5C:"HeapFree"	; [ 283F 283F ] ; C48A60:GETPROC	; [ 283F 283F 2D00 ] ; C48A64:'sys-HeapFree	; [ 283F 283F ] ; C48A68:!	; [ 283F 283F 18 ] ; C48A6C:DUP	; [ 283F ] ; C48A70:"HeapReAlloc"	; [ 283F 283F ] ; C48A74:GETPROC	; [ 283F 283F 2D28 ] ; C48A78:'sys-HeapReAlloc	; [ 283F 283F ] ; C48A7C:!	; [ 283F 283F 19 ] ; C48A80:DUP	; [ 283F ] ; C48A84:"GetLocalTime"	; [ 283F 283F ] ; C48A88:GETPROC	; [ 283F 283F 2D57 ] ; C48A8C:'sys-GetLocalTime	; [ 283F 283F ] ; C48A90:!	; [ 283F 283F 1B ] ; C48A94:DUP	; [ 283F ] ; C48A98:"FindFirstFileA"	; [ 283F 283F ] ; C48A9C:GETPROC	; [ 283F 283F 2D87 ] ; C48AA0:'sys-FindFirstFile	; [ 283F 283F ] ; C48AA4:!	; [ 283F 283F 1C ] ; C48AA8:DUP	; [ 283F ] ; C48AAC:"FindNextFileA"	; [ 283F 283F ] ; C48AB0:GETPROC	; [ 283F 283F 2DBA ] ; C48AB4:'sys-FindNextFile	; [ 283F 283F ] ; C48AB8:!	; [ 283F 283F 1D ] ; C48ABC:DUP	; [ 283F ] ; C48AC0:"FindClose"	; [ 283F 283F ] ; C48AC4:GETPROC	; [ 283F 283F 2DEB ] ; C48AC8:'sys-FindClose	; [ 283F 283F ] ; C48ACC:!	; [ 283F 283F 1E ] ; C48AD0:DUP	; [ 283F ] ; C48AD4:"CreateProcessA"	; [ 283F 283F ] ; C48AD8:GETPROC	; [ 283F 283F 2E16 ] ; C48ADC:'sys-CreateProcess	; [ 283F 283F ] ; C48AE0:!	; [ 283F 283F 1F ] ; C48AE4:DUP	; [ 283F ] ; C48AE8:"GetTickCount"	; [ 283F 283F ] ; C48AEC:GETPROC	; [ 283F 283F 2E49 ] ; C48AF0:'sys-GetTickCount	; [ 283F 283F ] ; C48AF4:!	; [ 283F 283F 1A ] ; C48AF8:DUP	; [ 283F ] ; C48AFC:"GetConsoleScreenBufferInfo"	; [ 283F 283F ] ; C48B00:GETPROC	; [ 283F 283F 2E79 ] ; C48B04:'sys-GetConsoleScreenBufferInfo	; [ 283F 283F ] ; C48B08:!	; [ 283F 283F 20 ] ; C48B0C:DUP	; [ 283F ] ; C48B10:"GetCommandLineA"	; [ 283F 283F ] ; C48B14:GETPROC	; [ 283F 283F 2EC5 ] ; C48B18:'sys-GetCommandLine	; [ 283F 283F ] ; C48B1C:!	; [ 283F 283F 21 ] ; C48B20:DROP	; [ 283F ] ; C48B24:;	; [ ] ;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str283F; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str285C; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str288C; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str28BB; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str28ED; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2915; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2941; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2975; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "PeekConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str29A9; 'sys-PeekConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str29E2; 'sys-ReadConsoleInput; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2A1B; 'sys-WriteConsole; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2A4D; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2A93; 'sys-Sleep; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2AB5; 'sys-WaitForSingleObject; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2AF4; 'sys-GetLastError; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B25; 'sys-CreateFile; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B53; 'sys-CloseHandle; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B81; 'sys-FlushFileBuffers; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2BB9; 'sys-DeleteFile; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2BE6; 'sys-MoveFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C0F; 'sys-SetFilePointer; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C43; 'sys-SetEndOfFile; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C73; 'sys-GetFileSize; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2CA2; 'sys-GetProcessHeap; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2CD6; 'sys-HeapAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D00; 'sys-HeapFree; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D28; 'sys-HeapReAlloc; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D57; 'sys-GetLocalTime; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D87; 'sys-FindFirstFile; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2DBA; 'sys-FindNextFile; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2DEB; 'sys-FindClose; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E16; 'sys-CreateProcess; OPTAV !mov qword[w1F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E49; 'sys-GetTickCount; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E79; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w20],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetCommandLineA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2EC5; 'sys-GetCommandLine; OPTAV !mov qword[w21],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sinp  |2080|l     .  | calls:2 niv:0 len:21 ( a -- b )w52:;---------OPT; C48BF4:$7fff	; [ 0 ] ; C48BF8:AND	; [ 0 0 ] ; C48BFC:$4000	; [ 0 ] ; C48C00:-	; [ 0 1 ] ; C48C04:DUP	; [ 0 ] ; C48C08:DUP	; [ 0 0 ] ; C48C0C:16	; [ 0 0 0 ] ; C48C10:*>>	; [ 0 0 0 2 ] ; C48C14:DUP	; [ 0 0 ] ; C48C18:4876210	; [ 0 0 0 ] ; C48C1C:16	; [ 0 0 0 3 ] ; C48C20:*>>	; [ 0 0 0 3 4 ] ; C48C24:2699161	; [ 0 0 0 ] ; C48C28:-	; [ 0 0 0 5 ] ; C48C2C:16	; [ 0 0 0 ] ; C48C30:*>>	; [ 0 0 0 6 ] ; C48C34:411769	; [ 0 0 ] ; C48C38:+	; [ 0 0 7 ] ; C48C3C:16	; [ 0 0 ] ; C48C40:*>>	; [ 0 0 8 ] ; C48C44:;	; [ 0 ] ;---------ANA;---------GEN; $7fff; OPTN ANDand rax,32767; $4000; OPTN -sub rax,16384; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 4876210add rbp,8mov [rbp],raxmov rax,4876210; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 2699161; OPTN -sub rax,2699161; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 411769; OPTN +add rax,411769; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; ;ret;--------------------------; :sin  |1002092|e  ;  .  | calls:2 niv:1 len:11 ( a -- b )w54:;---------OPT; C48C74:$4000	; [ 0 ] ; C48C78:+	; [ 0 0 ] ; C48C7C:$8000	; [ 0 ] ; C48C80:nand?	; [ 0 1 ] ; C48C84:(	; [ 0 ] ; C48C88:sinp	; [ 0 ] ; C48C8C:;	; [ 0 ] ; C48C90:)	; [ 0 ] ; C48C94:sinp	; [ 0 ] ; C48C98:NEG	; [ 0 ] ; C48C9C:;	; [ 0 ] ;---------ANA;---------GEN; $4000; OPTN +add rax,16384; $8000; OPTN nand?test rax,32768jnz _o0; (; sinpjmp w52; ;; )_o0:; sinpcall w52; NEGneg rax; ;ret;--------------------------; :l1  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w69:;---------OPT; C4913C:OVER	; [ 1 0 ] ; C49140:DUP	; [ 1 0 1 ] ; C49144:1	; [ 1 0 1 1 ] ; C49148:>>	; [ 1 0 1 1 0 ] ; C4914C:+	; [ 1 0 1 1 ] ; C49150:+?	; [ 1 0 1 ] ; C49154:(	; [ 1 0 1 ] ; C49158:ROT	; [ 1 0 1 ] ; C4915C:DROP	; [ 0 1 1 ] ; C49160:SWAP	; [ 0 1 ] ; C49164:$67cd	; [ 1 0 ] ; C49168:-	; [ 1 0 1 ] ; C4916C:;	; [ 1 0 ] ; C49170:)	; [ 1 0 ] ; C49174:DROP	; [ 1 0 1 ] ; C49178:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; +add rax,[rbp]sub rbp,8; +?or rax,raxjs _o1; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $67cd; OPTN -sub rax,26573; ;ret; )_o1:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :l2  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w6A:;---------OPT; C4917C:OVER	; [ 1 0 ] ; C49180:DUP	; [ 1 0 1 ] ; C49184:2	; [ 1 0 1 1 ] ; C49188:>>	; [ 1 0 1 1 0 ] ; C4918C:+	; [ 1 0 1 1 ] ; C49190:+?	; [ 1 0 1 ] ; C49194:(	; [ 1 0 1 ] ; C49198:ROT	; [ 1 0 1 ] ; C4919C:DROP	; [ 0 1 1 ] ; C491A0:SWAP	; [ 0 1 ] ; C491A4:$3920	; [ 1 0 ] ; C491A8:-	; [ 1 0 1 ] ; C491AC:;	; [ 1 0 ] ; C491B0:)	; [ 1 0 ] ; C491B4:DROP	; [ 1 0 1 ] ; C491B8:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; +?or rax,raxjs _o2; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $3920; OPTN -sub rax,14624; ;ret; )_o2:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :l3  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w6B:;---------OPT; C491BC:OVER	; [ 1 0 ] ; C491C0:DUP	; [ 1 0 1 ] ; C491C4:3	; [ 1 0 1 1 ] ; C491C8:>>	; [ 1 0 1 1 0 ] ; C491CC:+	; [ 1 0 1 1 ] ; C491D0:+?	; [ 1 0 1 ] ; C491D4:(	; [ 1 0 1 ] ; C491D8:ROT	; [ 1 0 1 ] ; C491DC:DROP	; [ 0 1 1 ] ; C491E0:SWAP	; [ 0 1 ] ; C491E4:$1e27	; [ 1 0 ] ; C491E8:-	; [ 1 0 1 ] ; C491EC:;	; [ 1 0 ] ; C491F0:)	; [ 1 0 ] ; C491F4:DROP	; [ 1 0 1 ] ; C491F8:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 3; OPTN >>sar rax,3; +add rax,[rbp]sub rbp,8; +?or rax,raxjs _o3; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $1e27; OPTN -sub rax,7719; ;ret; )_o3:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :l4  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w6C:;---------OPT; C491FC:OVER	; [ 1 0 ] ; C49200:DUP	; [ 1 0 1 ] ; C49204:4	; [ 1 0 1 1 ] ; C49208:>>	; [ 1 0 1 1 0 ] ; C4920C:+	; [ 1 0 1 1 ] ; C49210:+?	; [ 1 0 1 ] ; C49214:(	; [ 1 0 1 ] ; C49218:ROT	; [ 1 0 1 ] ; C4921C:DROP	; [ 0 1 1 ] ; C49220:SWAP	; [ 0 1 ] ; C49224:$f85	; [ 1 0 ] ; C49228:-	; [ 1 0 1 ] ; C4922C:;	; [ 1 0 ] ; C49230:)	; [ 1 0 ] ; C49234:DROP	; [ 1 0 1 ] ; C49238:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; +?or rax,raxjs _o4; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $f85; OPTN -sub rax,3973; ;ret; )_o4:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :l5  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w6D:;---------OPT; C4923C:OVER	; [ 1 0 ] ; C49240:DUP	; [ 1 0 1 ] ; C49244:5	; [ 1 0 1 1 ] ; C49248:>>	; [ 1 0 1 1 0 ] ; C4924C:+	; [ 1 0 1 1 ] ; C49250:+?	; [ 1 0 1 ] ; C49254:(	; [ 1 0 1 ] ; C49258:ROT	; [ 1 0 1 ] ; C4925C:DROP	; [ 0 1 1 ] ; C49260:SWAP	; [ 0 1 ] ; C49264:$7e1	; [ 1 0 ] ; C49268:-	; [ 1 0 1 ] ; C4926C:;	; [ 1 0 ] ; C49270:)	; [ 1 0 ] ; C49274:DROP	; [ 1 0 1 ] ; C49278:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 5; OPTN >>sar rax,5; +add rax,[rbp]sub rbp,8; +?or rax,raxjs _o5; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $7e1; OPTN -sub rax,2017; ;ret; )_o5:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :l6  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w6E:;---------OPT; C4927C:OVER	; [ 1 0 ] ; C49280:DUP	; [ 1 0 1 ] ; C49284:6	; [ 1 0 1 1 ] ; C49288:>>	; [ 1 0 1 1 0 ] ; C4928C:+	; [ 1 0 1 1 ] ; C49290:+?	; [ 1 0 1 ] ; C49294:(	; [ 1 0 1 ] ; C49298:ROT	; [ 1 0 1 ] ; C4929C:DROP	; [ 0 1 1 ] ; C492A0:SWAP	; [ 0 1 ] ; C492A4:$3f8	; [ 1 0 ] ; C492A8:-	; [ 1 0 1 ] ; C492AC:;	; [ 1 0 ] ; C492B0:)	; [ 1 0 ] ; C492B4:DROP	; [ 1 0 1 ] ; C492B8:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 6; OPTN >>sar rax,6; +add rax,[rbp]sub rbp,8; +?or rax,raxjs _o6; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $3f8; OPTN -sub rax,1016; ;ret; )_o6:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :l7  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w6F:;---------OPT; C492BC:OVER	; [ 1 0 ] ; C492C0:DUP	; [ 1 0 1 ] ; C492C4:7	; [ 1 0 1 1 ] ; C492C8:>>	; [ 1 0 1 1 0 ] ; C492CC:+	; [ 1 0 1 1 ] ; C492D0:+?	; [ 1 0 1 ] ; C492D4:(	; [ 1 0 1 ] ; C492D8:ROT	; [ 1 0 1 ] ; C492DC:DROP	; [ 0 1 1 ] ; C492E0:SWAP	; [ 0 1 ] ; C492E4:$1fe	; [ 1 0 ] ; C492E8:-	; [ 1 0 1 ] ; C492EC:;	; [ 1 0 ] ; C492F0:)	; [ 1 0 ] ; C492F4:DROP	; [ 1 0 1 ] ; C492F8:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 7; OPTN >>sar rax,7; +add rax,[rbp]sub rbp,8; +?or rax,raxjs _o7; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $1fe; OPTN -sub rax,510; ;ret; )_o7:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ln.  |1001092|e  ;  .  | calls:1 niv:1 len:73 ( a -- b )w70:;---------OPT; C492FC:-?	; [ 0 ] ; C49300:(	; [ 0 ] ; C49304:$80000000	; [ 0 ] ; C49308:NIP	; [ 0 0 ] ; C4930C:;	; [ 0 ] ; C49310:)	; [ 0 ] ; C49314:$a65af	; [ 0 ] ; C49318:SWAP	; [ 0 1 ] ; C4931C:$8000	; [ 1 0 ] ; C49320:<?	; [ 1 0 2 ] ; C49324:(	; [ 1 0 ] ; C49328:16	; [ 1 0 ] ; C4932C:<<	; [ 1 0 3 ] ; C49330:SWAP	; [ 1 0 ] ; C49334:$b1721	; [ 0 1 ] ; C49338:-	; [ 0 1 4 ] ; C4933C:SWAP	; [ 0 1 ] ; C49340:)	; [ 1 0 ] ; C49344:$800000	; [ 1 0 ] ; C49348:<?	; [ 1 0 5 ] ; C4934C:(	; [ 1 0 ] ; C49350:8	; [ 1 0 ] ; C49354:<<	; [ 1 0 6 ] ; C49358:SWAP	; [ 1 0 ] ; C4935C:$58b91	; [ 0 1 ] ; C49360:-	; [ 0 1 7 ] ; C49364:SWAP	; [ 0 1 ] ; C49368:)	; [ 1 0 ] ; C4936C:$8000000	; [ 1 0 ] ; C49370:<?	; [ 1 0 8 ] ; C49374:(	; [ 1 0 ] ; C49378:4	; [ 1 0 ] ; C4937C:<<	; [ 1 0 9 ] ; C49380:SWAP	; [ 1 0 ] ; C49384:$2c5c8	; [ 0 1 ] ; C49388:-	; [ 0 1 A ] ; C4938C:SWAP	; [ 0 1 ] ; C49390:)	; [ 1 0 ] ; C49394:$20000000	; [ 1 0 ] ; C49398:<?	; [ 1 0 B ] ; C4939C:(	; [ 1 0 ] ; C493A0:2	; [ 1 0 ] ; C493A4:<<	; [ 1 0 C ] ; C493A8:SWAP	; [ 1 0 ] ; C493AC:$162e4	; [ 0 1 ] ; C493B0:-	; [ 0 1 D ] ; C493B4:SWAP	; [ 0 1 ] ; C493B8:)	; [ 1 0 ] ; C493BC:$40000000	; [ 1 0 ] ; C493C0:<?	; [ 1 0 E ] ; C493C4:(	; [ 1 0 ] ; C493C8:1	; [ 1 0 ] ; C493CC:<<	; [ 1 0 F ] ; C493D0:SWAP	; [ 1 0 ] ; C493D4:$b172	; [ 0 1 ] ; C493D8:-	; [ 0 1 10 ] ; C493DC:SWAP	; [ 0 1 ] ; C493E0:)	; [ 1 0 ] ; C493E4:SWAP	; [ 1 0 ] ; C493E8:l1	; [ 0 1 ] ; C493EC:l2	; [ 1 0 ] ; C493F0:l3	; [ 1 0 ] ; C493F4:l4	; [ 1 0 ] ; C493F8:l5	; [ 1 0 ] ; C493FC:l6	; [ 1 0 ] ; C49400:l7	; [ 1 0 ] ; C49404:$80000000	; [ 1 0 ] ; C49408:ROT	; [ 1 0 11 ] ; C4940C:-	; [ 0 11 1 ] ; C49410:15	; [ 0 11 ] ; C49414:>>	; [ 0 11 12 ] ; C49418:-	; [ 0 11 ] ; C4941C:;	; [ 0 ] ;---------ANA;---------GEN; -?or rax,raxjns _o8; (; $80000000add rbp,8mov [rbp],raxmov rax,2147483648; NIPsub rbp,8; ;ret; )_o8:; $a65afadd rbp,8mov [rbp],raxmov rax,681391; SWAPxchg rax,[rbp]; $8000; OPTN <?cmp rax,32768jge _o9; (; 16; OPTN <<shl rax,16; SWAPxchg rax,[rbp]; $b1721; OPTN -sub rax,726817; SWAPxchg rax,[rbp]; )_o9:; $800000; OPTN <?cmp rax,8388608jge _oA; (; 8; OPTN <<shl rax,8; SWAPxchg rax,[rbp]; $58b91; OPTN -sub rax,363409; SWAPxchg rax,[rbp]; )_oA:; $8000000; OPTN <?cmp rax,134217728jge _oB; (; 4; OPTN <<shl rax,4; SWAPxchg rax,[rbp]; $2c5c8; OPTN -sub rax,181704; SWAPxchg rax,[rbp]; )_oB:; $20000000; OPTN <?cmp rax,536870912jge _oC; (; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; $162e4; OPTN -sub rax,90852; SWAPxchg rax,[rbp]; )_oC:; $40000000; OPTN <?cmp rax,1073741824jge _oD; (; 1; OPTN <<shl rax,1; SWAPxchg rax,[rbp]; $b172; OPTN -sub rax,45426; SWAPxchg rax,[rbp]; )_oD:; SWAPxchg rax,[rbp]; l1call w69; l2call w6A; l3call w6B; l4call w6C; l5call w6D; l6call w6E; l7call w6F; $80000000add rbp,8mov [rbp],raxmov rax,2147483648; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; -neg raxadd rax,[rbp]sub rbp,8; 15; OPTN >>sar rax,15; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex1  |1090|l  ;  .  | calls:1 niv:0 len:14 ( ab -- cd )w71:;---------OPT; C49420:OVER	; [ 1 0 ] ; C49424:$58b91	; [ 1 0 1 ] ; C49428:-	; [ 1 0 1 0 ] ; C4942C:+?	; [ 1 0 1 ] ; C49430:(	; [ 1 0 1 ] ; C49434:ROT	; [ 1 0 1 ] ; C49438:DROP	; [ 0 1 1 ] ; C4943C:SWAP	; [ 0 1 ] ; C49440:8	; [ 1 0 ] ; C49444:<<	; [ 1 0 1 ] ; C49448:;	; [ 1 0 ] ; C4944C:)	; [ 1 0 ] ; C49450:DROP	; [ 1 0 1 ] ; C49454:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $58b91; OPTN -sub rax,363409; +?or rax,raxjs _oE; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 8; OPTN <<shl rax,8; ;ret; )_oE:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex2  |1090|l  ;  .  | calls:1 niv:0 len:14 ( ab -- cd )w72:;---------OPT; C49458:OVER	; [ 1 0 ] ; C4945C:$2c5c8	; [ 1 0 1 ] ; C49460:-	; [ 1 0 1 0 ] ; C49464:+?	; [ 1 0 1 ] ; C49468:(	; [ 1 0 1 ] ; C4946C:ROT	; [ 1 0 1 ] ; C49470:DROP	; [ 0 1 1 ] ; C49474:SWAP	; [ 0 1 ] ; C49478:4	; [ 1 0 ] ; C4947C:<<	; [ 1 0 1 ] ; C49480:;	; [ 1 0 ] ; C49484:)	; [ 1 0 ] ; C49488:DROP	; [ 1 0 1 ] ; C4948C:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $2c5c8; OPTN -sub rax,181704; +?or rax,raxjs _oF; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 4; OPTN <<shl rax,4; ;ret; )_oF:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex3  |1090|l  ;  .  | calls:1 niv:0 len:14 ( ab -- cd )w73:;---------OPT; C49490:OVER	; [ 1 0 ] ; C49494:$162e4	; [ 1 0 1 ] ; C49498:-	; [ 1 0 1 0 ] ; C4949C:+?	; [ 1 0 1 ] ; C494A0:(	; [ 1 0 1 ] ; C494A4:ROT	; [ 1 0 1 ] ; C494A8:DROP	; [ 0 1 1 ] ; C494AC:SWAP	; [ 0 1 ] ; C494B0:2	; [ 1 0 ] ; C494B4:<<	; [ 1 0 1 ] ; C494B8:;	; [ 1 0 ] ; C494BC:)	; [ 1 0 ] ; C494C0:DROP	; [ 1 0 1 ] ; C494C4:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $162e4; OPTN -sub rax,90852; +?or rax,raxjs _o10; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; ;ret; )_o10:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex4  |1090|l  ;  .  | calls:1 niv:0 len:14 ( ab -- cd )w74:;---------OPT; C494C8:OVER	; [ 1 0 ] ; C494CC:$b172	; [ 1 0 1 ] ; C494D0:-	; [ 1 0 1 0 ] ; C494D4:+?	; [ 1 0 1 ] ; C494D8:(	; [ 1 0 1 ] ; C494DC:ROT	; [ 1 0 1 ] ; C494E0:DROP	; [ 0 1 1 ] ; C494E4:SWAP	; [ 0 1 ] ; C494E8:1	; [ 1 0 ] ; C494EC:<<	; [ 1 0 1 ] ; C494F0:;	; [ 1 0 ] ; C494F4:)	; [ 1 0 ] ; C494F8:DROP	; [ 1 0 1 ] ; C494FC:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $b172; OPTN -sub rax,45426; +?or rax,raxjs _o11; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1; OPTN <<shl rax,1; ;ret; )_o11:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex5  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w75:;---------OPT; C49500:OVER	; [ 1 0 ] ; C49504:$67cd	; [ 1 0 1 ] ; C49508:-	; [ 1 0 1 0 ] ; C4950C:+?	; [ 1 0 1 ] ; C49510:(	; [ 1 0 1 ] ; C49514:ROT	; [ 1 0 1 ] ; C49518:DROP	; [ 0 1 1 ] ; C4951C:SWAP	; [ 0 1 ] ; C49520:DUP	; [ 1 0 ] ; C49524:1	; [ 1 0 0 ] ; C49528:>>	; [ 1 0 0 1 ] ; C4952C:+	; [ 1 0 0 ] ; C49530:;	; [ 1 0 ] ; C49534:)	; [ 1 0 ] ; C49538:DROP	; [ 1 0 1 ] ; C4953C:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $67cd; OPTN -sub rax,26573; +?or rax,raxjs _o12; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; +add rax,[rbp]sub rbp,8; ;ret; )_o12:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex6  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w76:;---------OPT; C49540:OVER	; [ 1 0 ] ; C49544:$3920	; [ 1 0 1 ] ; C49548:-	; [ 1 0 1 0 ] ; C4954C:+?	; [ 1 0 1 ] ; C49550:(	; [ 1 0 1 ] ; C49554:ROT	; [ 1 0 1 ] ; C49558:DROP	; [ 0 1 1 ] ; C4955C:SWAP	; [ 0 1 ] ; C49560:DUP	; [ 1 0 ] ; C49564:2	; [ 1 0 0 ] ; C49568:>>	; [ 1 0 0 1 ] ; C4956C:+	; [ 1 0 0 ] ; C49570:;	; [ 1 0 ] ; C49574:)	; [ 1 0 ] ; C49578:DROP	; [ 1 0 1 ] ; C4957C:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $3920; OPTN -sub rax,14624; +?or rax,raxjs _o13; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; ;ret; )_o13:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex7  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w77:;---------OPT; C49580:OVER	; [ 1 0 ] ; C49584:$1e27	; [ 1 0 1 ] ; C49588:-	; [ 1 0 1 0 ] ; C4958C:+?	; [ 1 0 1 ] ; C49590:(	; [ 1 0 1 ] ; C49594:ROT	; [ 1 0 1 ] ; C49598:DROP	; [ 0 1 1 ] ; C4959C:SWAP	; [ 0 1 ] ; C495A0:DUP	; [ 1 0 ] ; C495A4:3	; [ 1 0 0 ] ; C495A8:>>	; [ 1 0 0 1 ] ; C495AC:+	; [ 1 0 0 ] ; C495B0:;	; [ 1 0 ] ; C495B4:)	; [ 1 0 ] ; C495B8:DROP	; [ 1 0 1 ] ; C495BC:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $1e27; OPTN -sub rax,7719; +?or rax,raxjs _o14; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 3; OPTN >>sar rax,3; +add rax,[rbp]sub rbp,8; ;ret; )_o14:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex8  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w78:;---------OPT; C495C0:OVER	; [ 1 0 ] ; C495C4:$f85	; [ 1 0 1 ] ; C495C8:-	; [ 1 0 1 0 ] ; C495CC:+?	; [ 1 0 1 ] ; C495D0:(	; [ 1 0 1 ] ; C495D4:ROT	; [ 1 0 1 ] ; C495D8:DROP	; [ 0 1 1 ] ; C495DC:SWAP	; [ 0 1 ] ; C495E0:DUP	; [ 1 0 ] ; C495E4:4	; [ 1 0 0 ] ; C495E8:>>	; [ 1 0 0 1 ] ; C495EC:+	; [ 1 0 0 ] ; C495F0:;	; [ 1 0 ] ; C495F4:)	; [ 1 0 ] ; C495F8:DROP	; [ 1 0 1 ] ; C495FC:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $f85; OPTN -sub rax,3973; +?or rax,raxjs _o15; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; ;ret; )_o15:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ex9  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w79:;---------OPT; C49600:OVER	; [ 1 0 ] ; C49604:$7e1	; [ 1 0 1 ] ; C49608:-	; [ 1 0 1 0 ] ; C4960C:+?	; [ 1 0 1 ] ; C49610:(	; [ 1 0 1 ] ; C49614:ROT	; [ 1 0 1 ] ; C49618:DROP	; [ 0 1 1 ] ; C4961C:SWAP	; [ 0 1 ] ; C49620:DUP	; [ 1 0 ] ; C49624:5	; [ 1 0 0 ] ; C49628:>>	; [ 1 0 0 1 ] ; C4962C:+	; [ 1 0 0 ] ; C49630:;	; [ 1 0 ] ; C49634:)	; [ 1 0 ] ; C49638:DROP	; [ 1 0 1 ] ; C4963C:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $7e1; OPTN -sub rax,2017; +?or rax,raxjs _o16; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 5; OPTN >>sar rax,5; +add rax,[rbp]sub rbp,8; ;ret; )_o16:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :exa  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w7A:;---------OPT; C49640:OVER	; [ 1 0 ] ; C49644:$3f8	; [ 1 0 1 ] ; C49648:-	; [ 1 0 1 0 ] ; C4964C:+?	; [ 1 0 1 ] ; C49650:(	; [ 1 0 1 ] ; C49654:ROT	; [ 1 0 1 ] ; C49658:DROP	; [ 0 1 1 ] ; C4965C:SWAP	; [ 0 1 ] ; C49660:DUP	; [ 1 0 ] ; C49664:6	; [ 1 0 0 ] ; C49668:>>	; [ 1 0 0 1 ] ; C4966C:+	; [ 1 0 0 ] ; C49670:;	; [ 1 0 ] ; C49674:)	; [ 1 0 ] ; C49678:DROP	; [ 1 0 1 ] ; C4967C:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $3f8; OPTN -sub rax,1016; +?or rax,raxjs _o17; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 6; OPTN >>sar rax,6; +add rax,[rbp]sub rbp,8; ;ret; )_o17:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :exb  |1090|l  ;  .  | calls:1 niv:0 len:16 ( ab -- cd )w7B:;---------OPT; C49680:OVER	; [ 1 0 ] ; C49684:$1fe	; [ 1 0 1 ] ; C49688:-	; [ 1 0 1 0 ] ; C4968C:+?	; [ 1 0 1 ] ; C49690:(	; [ 1 0 1 ] ; C49694:ROT	; [ 1 0 1 ] ; C49698:DROP	; [ 0 1 1 ] ; C4969C:SWAP	; [ 0 1 ] ; C496A0:DUP	; [ 1 0 ] ; C496A4:7	; [ 1 0 0 ] ; C496A8:>>	; [ 1 0 0 1 ] ; C496AC:+	; [ 1 0 0 ] ; C496B0:;	; [ 1 0 ] ; C496B4:)	; [ 1 0 ] ; C496B8:DROP	; [ 1 0 1 ] ; C496BC:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $1fe; OPTN -sub rax,510; +?or rax,raxjs _o18; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 7; OPTN >>sar rax,7; +add rax,[rbp]sub rbp,8; ;ret; )_o18:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :xp  |1090|l  ;  .  | calls:1 niv:0 len:12 ( ab -- cd )w7C:;---------OPT; C496C0:SWAP	; [ 1 0 ] ; C496C4:-?	; [ 0 1 ] ; C496C8:(	; [ 0 1 ] ; C496CC:$b1721	; [ 0 1 ] ; C496D0:+	; [ 0 1 0 ] ; C496D4:SWAP	; [ 0 1 ] ; C496D8:16	; [ 1 0 ] ; C496DC:>>	; [ 1 0 1 ] ; C496E0:;	; [ 1 0 ] ; C496E4:)	; [ 1 0 ] ; C496E8:SWAP	; [ 0 1 ] ; C496EC:;	; [ 1 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; -?or rax,raxjns _o19; (; $b1721; OPTN +add rax,726817; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ;ret; )_o19:; SWAPxchg rax,[rbp]; ;ret;--------------------------; :exp.  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )w7D:;---------OPT; C496F0:1.0	; [ 0 ] ; C496F4:xp	; [ 0 0 ] ; C496F8:ex1	; [ 1 0 ] ; C496FC:ex2	; [ 1 0 ] ; C49700:ex3	; [ 1 0 ] ; C49704:ex4	; [ 1 0 ] ; C49708:ex5	; [ 1 0 ] ; C4970C:ex6	; [ 1 0 ] ; C49710:ex7	; [ 1 0 ] ; C49714:ex8	; [ 1 0 ] ; C49718:ex9	; [ 1 0 ] ; C4971C:exa	; [ 1 0 ] ; C49720:exb	; [ 1 0 ] ; C49724:SWAP	; [ 1 0 ] ; C49728:OVER	; [ 0 1 ] ; C4972C:8	; [ 0 1 0 ] ; C49730:>>	; [ 0 1 0 1 ] ; C49734:*.	; [ 0 1 0 ] ; C48B84:16	; [ 0 1 0 ] ; C48B88:*>>	; [ 0 1 0 2 ] ; C48B8C:DUP	; [ 0 1 ] ; C48B90:63	; [ 0 1 1 ] ; C48B94:>>	; [ 0 1 1 3 ] ; C48B98:-	; [ 0 1 1 ] ; C49738:8	; [ 0 1 ] ; C4973C:>>	; [ 0 1 4 ] ; C49740:+	; [ 0 1 ] ; C49744:;	; [ 0 ] ;---------ANA;---------GEN; 1.0add rbp,8mov [rbp],raxmov rax,65536; xpcall w7C; ex1call w71; ex2call w72; ex3call w73; ex4call w74; ex5call w75; ex6call w76; ex7call w77; ex8call w78; ex9call w79; exacall w7A; exbcall w7B; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN >>sar rax,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |1001480|l     . I| calls:1 niv:1 len:36 (  --  )w162:;---------OPT; C4C110:	; [ ] ; C4AE0C:	; [ ] ; C4A944:	; [ ] ; C4A948:GetProcessHeap	; [ ] ; C487CC:sys-GetProcessHeap	; [ ] ; C487D0:SYS0	; [ 16 ] ; C4A94C:'process-heap	; [ 16 ] ; C4A950:!	; [ 16 B3 ] ; C4AE10:MEM	; [ ] ; C4AE14:'here	; [ 0 ] ; C4AE18:!	; [ 0 C8 ] ; C4C114:AllocConsole	; [ ] ; C486AC:sys-AllocConsole	; [ ] ; C486B0:SYS0	; [ 0 ] ; C486B4:DROP	; [ 0 ] ; C4C118:-10	; [ ] ; C4C11C:GetStdHandle	; [ 0 ] ; C486C8:sys-GetStdHandle	; [ 0 ] ; C486CC:SYS1	; [ 0 2 ] ; C4C120:'stdin	; [ 0 ] ; C4C124:!	; [ 0 113 ] ; C4C128:-11	; [ ] ; C4C12C:GetStdHandle	; [ 1 ] ; C486C8:sys-GetStdHandle	; [ 1 ] ; C486CC:SYS1	; [ 1 2 ] ; C4C130:'stdout	; [ 1 ] ; C4C134:!	; [ 1 114 ] ; C4C138:-12	; [ ] ; C4C13C:GetStdHandle	; [ 2 ] ; C486C8:sys-GetStdHandle	; [ 2 ] ; C486CC:SYS1	; [ 2 2 ] ; C4C140:'stderr	; [ 2 ] ; C4C144:!	; [ 2 115 ] ; C4C148:stdin	; [ ] ; C4C14C:'console-mode	; [ 113 ] ; C4C150:GetConsoleMode	; [ 113 161 ] ; C486EC:sys-GetConsoleMode	; [ 113 161 ] ; C486F0:SYS2	; [ 113 161 5 ] ; C4C154:DROP	; [ 113 ] ; C4C158:stdin	; [ ] ; C4C15C:console-mode	; [ 113 ] ; C4C160:$1a	; [ 113 161 ] ; C4C164:NEG	; [ 113 161 3 ] ; C4C168:AND	; [ 113 161 3 ] ; C4C16C:SetConsoleMode	; [ 113 161 ] ; C486F8:sys-SetConsoleMode	; [ 113 161 ] ; C486FC:SYS2	; [ 113 161 6 ] ; C4C170:DROP	; [ 113 ] ; C4C174:stdout	; [ ] ; C4C178:'console-mode	; [ 114 ] ; C4C17C:GetConsoleMode	; [ 114 161 ] ; C486EC:sys-GetConsoleMode	; [ 114 161 ] ; C486F0:SYS2	; [ 114 161 5 ] ; C4C180:DROP	; [ 114 ] ; C4C184:stdout	; [ ] ; C4C188:console-mode	; [ 114 ] ; C4C18C:$4	; [ 114 161 ] ; C4C190:OR	; [ 114 161 4 ] ; C4C194:SetConsoleMode	; [ 114 161 ] ; C486F8:sys-SetConsoleMode	; [ 114 161 ] ; C486FC:SYS2	; [ 114 161 6 ] ; C4C198:DROP	; [ 114 ] ; C4C19C:;	; [ ] ;---------ANA;---------GEN; call w44; sys-GetProcessHeapadd rbp,8mov [rbp],raxmov rax,qword[w16]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; 'process-heap; OPTAV !mov qword[wB3],raxmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stdin; OPTAV !mov qword[w113],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stdout; OPTAV !mov qword[w114],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stderr; OPTAV !mov qword[w115],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w113]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w161; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w113]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w161]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w114]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w161; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w114]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w161]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLinit  |1001482|e     . I| calls:1 niv:1 len:42 ( abc --  )w243:;---------OPT; C4C644:2DUP	; [ 2 1 0 ] ; C4C648:*	; [ 2 1 0 1 0 ] ; C4C64C:'sizebuffer	; [ 2 1 0 1 ] ; C4C650:!	; [ 2 1 0 1 241 ] ; C4C654:'sh	; [ 2 1 0 ] ; C4C658:!	; [ 2 1 0 23F ] ; C4C65C:'sw	; [ 2 1 ] ; C4C660:!	; [ 2 1 23E ] ; C4C664:$3231	; [ 2 ] ; C4C668:SDL_Init	; [ 2 0 ] ; C4C378:sys-SDL_Init	; [ 2 0 ] ; C4C37C:SYS1	; [ 2 0 1DB ] ; C4C380:DROP	; [ 2 0 ] ; C4C66C:$1FFF0000	; [ 2 ] ; C4C670:$1FFF0000	; [ 2 1 ] ; C4C674:sw	; [ 2 1 2 ] ; C4C678:sh	; [ 2 1 2 23E ] ; C4C67C:$0	; [ 2 1 2 23E 23F ] ; C4C680:SDL_CreateWindow	; [ 2 1 2 23E 23F 3 ] ; C4C3A4:sys-SDL_CreateWindow	; [ 2 1 2 23E 23F 3 ] ; C4C3A8:SYS6	; [ 2 1 2 23E 23F 3 1DE ] ; C4C684:DUP	; [ 2 ] ; C4C688:'SDL_windows	; [ 2 2 ] ; C4C68C:!	; [ 2 2 23B ] ; C4C690:SDL_GetWindowSurface	; [ 2 ] ; C4C3D0:sys-SDL_GetWindowSurface	; [ 2 ] ; C4C3D4:SYS1	; [ 2 1E0 ] ; C4C694:DUP	; [ 2 ] ; C4C698:'SDL_screen	; [ 2 2 ] ; C4C69C:!	; [ 2 2 23C ] ; C4C6A0:24	; [ 2 ] ; C4C6A4:+	; [ 2 4 ] ; C4C6A8:D@+	; [ 2 ] ; C4C6AC:'pitch	; [ 2 2 ] ; C4C6B0:!	; [ 2 2 240 ] ; C4C6B4:4	; [ 2 ] ; C4C6B8:+	; [ 2 5 ] ; C4C6BC:@	; [ 2 ] ; C4C6C0:'vframe	; [ 2 ] ; C4C6C4:!	; [ 2 242 ] ; C4C6C8:SDL_windows	; [ ] ; C4C6CC:-1	; [ 23B ] ; C4C6D0:0	; [ 23B 6 ] ; C4C6D4:SDL_CreateRenderer	; [ 23B 6 7 ] ; C4C40C:sys-SDL_CreateRenderer	; [ 23B 6 7 ] ; C4C410:SYS3	; [ 23B 6 7 1E5 ] ; C4C6D8:'SDLrenderer	; [ 23B ] ; C4C6DC:!	; [ 23B 23D ] ; C4C6E0:SDL_windows	; [ ] ; C4C6E4:SDL_RaiseWindow	; [ 23B ] ; C4C3C0:sys-SDL_RaiseWindow	; [ 23B ] ; C4C3C4:SYS1	; [ 23B 1E1 ] ; C4C3C8:DROP	; [ 23B ] ; C4C6E8:;	; [ ] ;---------ANA;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; *imul rax,[rbp]sub rbp,8; 'sizebuffer; OPTAV !mov qword[w241],raxmov rax,[rbp]sub rbp,8; 'sh; OPTAV !mov qword[w23F],raxmov rax,[rbp]sub rbp,8; 'sw; OPTAV !mov qword[w23E],raxmov rax,[rbp]sub rbp,8; $3231add rbp,8mov [rbp],raxmov rax,12849; sys-SDL_Initadd rbp,8mov [rbp],raxmov rax,qword[w1DB]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; swadd rbp,8mov [rbp],raxmov rax,qword[w23E]; shadd rbp,8mov [rbp],raxmov rax,qword[w23F]; $0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateWindowadd rbp,8mov [rbp],raxmov rax,qword[w1DE]; SYS6PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rdx,[rbp]mov [rsp+$28],rdxmov rcx,[rbp-1*8]mov [rsp+$20],rcxmov r9,[rbp-2*8]mov r8,[rbp-3*8]mov rdx,[rbp-4*8]mov rcx,[rbp-5*8]call raxsub rbp,8*6add RSP,$30POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_windows; OPTAV !mov qword[w23B],raxmov rax,[rbp]sub rbp,8; sys-SDL_GetWindowSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1E0]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_screen; OPTAV !mov qword[w23C],raxmov rax,[rbp]sub rbp,8; 24; OPTN +add rax,24; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'pitch; OPTAV !mov qword[w240],raxmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; @mov rax,qword[rax]; 'vframe; OPTAV !mov qword[w242],raxmov rax,[rbp]sub rbp,8; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w23B]; -1add rbp,8mov [rbp],raxmov rax,-1; 0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateRendereradd rbp,8mov [rbp],raxmov rax,qword[w1E5]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; 'SDLrenderer; OPTAV !mov qword[w23D],raxmov rax,[rbp]sub rbp,8; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w23B]; sys-SDL_RaiseWindowadd rbp,8mov [rbp],raxmov rax,qword[w1E1]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLupdate  |1001482|e     . I| calls:1 niv:1 len:103 (  --  )w24E:;---------OPT; C4C7B0:0	; [ ] ; C4C7B4:'SDLkey	; [ 0 ] ; C4C7B8:!	; [ 0 249 ] ; C4C7BC:0	; [ ] ; C4C7C0:'SDLkeychar	; [ 1 ] ; C4C7C4:!	; [ 1 24A ] ; C4C7C8:10	; [ ] ; C4C7CC:SDL_Delay	; [ 2 ] ; C4C5A4:sys-SDL_Delay	; [ 2 ] ; C4C5A8:SYS1	; [ 2 1FF ] ; C4C5AC:DROP	; [ 2 ] ; C4C7D0:(	; [ ] ; C4C7D4:'SDLevent	; [ ] ; C4C7D8:SDL_PollEvent	; [ 248 ] ; C4C5B4:sys-SDL_PollEvent	; [ 248 ] ; C4C5B8:SYS1	; [ 248 200 ] ; C4C7DC:1?	; [ 248 ] ; C4C7E0:DROP	; [ 248 ] ; C4C7E4:'SDLevent	; [ ] ; C4C7E8:D@	; [ 248 ] ; C4C7EC:$300	; [ 248 ] ; C4C7F0:=?	; [ 248 3 ] ; C4C7F4:(	; [ 248 ] ; C4C7F8:'SDLevent	; [ 248 ] ; C4C7FC:20	; [ 248 248 ] ; C4C800:+	; [ 248 248 4 ] ; C4C804:D@	; [ 248 248 ] ; C4C808:DUP	; [ 248 248 ] ; C4C80C:$ffff	; [ 248 248 248 ] ; C4C810:AND	; [ 248 248 248 5 ] ; C4C814:SWAP	; [ 248 248 248 ] ; C4C818:16	; [ 248 248 248 ] ; C4C81C:>>	; [ 248 248 248 6 ] ; C4C820:OR	; [ 248 248 248 ] ; C4C824:'SDLkey	; [ 248 248 ] ; C4C828:!	; [ 248 248 249 ] ; C4C82C:)	; [ 248 ] ; C4C830:$301	; [ 248 ] ; C4C834:=?	; [ 248 7 ] ; C4C838:(	; [ 248 ] ; C4C83C:'SDLevent	; [ 248 ] ; C4C840:20	; [ 248 248 ] ; C4C844:+	; [ 248 248 8 ] ; C4C848:D@	; [ 248 248 ] ; C4C84C:DUP	; [ 248 248 ] ; C4C850:$ffff	; [ 248 248 248 ] ; C4C854:AND	; [ 248 248 248 9 ] ; C4C858:SWAP	; [ 248 248 248 ] ; C4C85C:16	; [ 248 248 248 ] ; C4C860:>>	; [ 248 248 248 A ] ; C4C864:OR	; [ 248 248 248 ] ; C4C868:$1000	; [ 248 248 ] ; C4C86C:OR	; [ 248 248 B ] ; C4C870:'SDLkey	; [ 248 248 ] ; C4C874:!	; [ 248 248 249 ] ; C4C878:)	; [ 248 ] ; C4C87C:$303	; [ 248 ] ; C4C880:=?	; [ 248 C ] ; C4C884:(	; [ 248 ] ; C4C888:'SDLevent	; [ 248 ] ; C4C88C:12	; [ 248 248 ] ; C4C890:+	; [ 248 248 D ] ; C4C894:C@	; [ 248 248 ] ; C4C898:'SDLkeychar	; [ 248 248 ] ; C4C89C:!	; [ 248 248 24A ] ; C4C8A0:)	; [ 248 ] ; C4C8A4:$400	; [ 248 ] ; C4C8A8:=?	; [ 248 E ] ; C4C8AC:(	; [ 248 ] ; C4C8B0:'SDLevent	; [ 248 ] ; C4C8B4:20	; [ 248 248 ] ; C4C8B8:+	; [ 248 248 F ] ; C4C8BC:D@+	; [ 248 248 ] ; C4C8C0:'SDLx	; [ 248 248 248 ] ; C4C8C4:!	; [ 248 248 248 24B ] ; C4C8C8:D@	; [ 248 248 ] ; C4C8CC:'SDLy	; [ 248 248 ] ; C4C8D0:!	; [ 248 248 24C ] ; C4C8D4:)	; [ 248 ] ; C4C8D8:$401	; [ 248 ] ; C4C8DC:=?	; [ 248 10 ] ; C4C8E0:(	; [ 248 ] ; C4C8E4:'SDLevent	; [ 248 ] ; C4C8E8:16	; [ 248 248 ] ; C4C8EC:+	; [ 248 248 11 ] ; C4C8F0:C@	; [ 248 248 ] ; C4C8F4:SDLb	; [ 248 248 ] ; C4C8F8:OR	; [ 248 248 24D ] ; C4C8FC:'SDLb	; [ 248 248 ] ; C4C900:!	; [ 248 248 24D ] ; C4C904:)	; [ 248 ] ; C4C908:$402	; [ 248 ] ; C4C90C:=?	; [ 248 12 ] ; C4C910:(	; [ 248 ] ; C4C914:'SDLevent	; [ 248 ] ; C4C918:16	; [ 248 248 ] ; C4C91C:+	; [ 248 248 13 ] ; C4C920:C@	; [ 248 248 ] ; C4C924:NOT	; [ 248 248 ] ; C4C928:SDLb	; [ 248 248 ] ; C4C92C:AND	; [ 248 248 24D ] ; C4C930:'SDLb	; [ 248 248 ] ; C4C934:!	; [ 248 248 24D ] ; C4C938:)	; [ 248 ] ; C4C93C:DROP	; [ 248 ] ; C4C940:)	; [ ] ; C4C944:DROP	; [ 248 ] ; C4C948:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkey; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkeychar; OPTAV !mov qword[w24A],raxmov rax,[rbp]sub rbp,8; 10add rbp,8mov [rbp],raxmov rax,10; sys-SDL_Delayadd rbp,8mov [rbp],raxmov rax,qword[w1FF]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; (_i1A:; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; sys-SDL_PollEventadd rbp,8mov [rbp],raxmov rax,qword[w200]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 1?or rax,raxjz _o1A;; DROPmov rax,[rbp]sub rbp,8; 'SDLevent; OPTAV D@add rbp,8mov [rbp],raxmovsxd rax,dword [w248]; $300; OPTN =?cmp rax,768jne _o1B; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; 'SDLkey; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; )_o1B:; $301; OPTN =?cmp rax,769jne _o1C; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; $1000; OPTN ORor rax,4096; 'SDLkey; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; )_o1C:; $303; OPTN =?cmp rax,771jne _o1D; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 12; OPTN +add rax,12; C@movsx rax,byte [rax]; 'SDLkeychar; OPTAV !mov qword[w24A],raxmov rax,[rbp]sub rbp,8; )_o1D:; $400; OPTN =?cmp rax,1024jne _o1E; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'SDLx; OPTAV !mov qword[w24B],raxmov rax,[rbp]sub rbp,8; D@movsxd rax,dword [rax]; 'SDLy; OPTAV !mov qword[w24C],raxmov rax,[rbp]sub rbp,8; )_o1E:; $401; OPTN =?cmp rax,1025jne _o1F; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; SDLb; OPTV ORor rax,qword[w24D]; 'SDLb; OPTAV !mov qword[w24D],raxmov rax,[rbp]sub rbp,8; )_o1F:; $402; OPTN =?cmp rax,1026jne _o20; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; NOTnot rax; SDLb; OPTV ANDand rax,qword[w24D]; 'SDLb; OPTAV !mov qword[w24D],raxmov rax,[rbp]sub rbp,8; )_o20:; DROPmov rax,[rbp]sub rbp,8; )jmp _i1A_o1A:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLshow  |1001082|e     .  | calls:1 niv:1 len:16 ( a --  )w252:;---------OPT; C4C9A8:0	; [ 0 ] ; C4C9AC:'.exit	; [ 0 0 ] ; C4C9B0:!	; [ 0 0 251 ] ; C4C9B4:(	; [ 0 ] ; C4C9B8:.exit	; [ 0 ] ; C4C9BC:0?	; [ 0 251 ] ; C4C9C0:DROP	; [ 0 251 ] ; C4C9C4:SDLupdate	; [ 0 ] ; C4C9C8:DUP	; [ 0 ] ; C4C9CC:EX	; [ 0 0 ] ; C4C9D0:)	; [ 0 0 ] ; C4C9D4:2DROP	; [ 0 251 ] ; C4C9D8:0	; [ ] ; C4C9DC:'.exit	; [ 1 ] ; C4C9E0:!	; [ 1 251 ] ; C4C9E4:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; (_i21:; .exitadd rbp,8mov [rbp],raxmov rax,qword[w251]; 0?or rax,raxjnz _o21; DROPmov rax,[rbp]sub rbp,8; SDLupdatecall w24E; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )jmp _i21_o21:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |2001080|l     .  | calls:1 niv:2 len:235 (  --  )w254:;---------OPT; C4C9F8:	; [ ] ; C4C9FC:"SDL2.DLL"	; [ ] ; C4CA00:LOADLIB	; [ 96CE ] ; C4CA04:DUP	; [ 96CE ] ; C4CA08:"SDL_Init"	; [ 96CE 96CE ] ; C4CA0C:GETPROC	; [ 96CE 96CE 96E6 ] ; C4CA10:'sys-SDL_Init	; [ 96CE 96CE ] ; C4CA14:!	; [ 96CE 96CE 1DB ] ; C4CA18:DUP	; [ 96CE ] ; C4CA1C:"SDL_Quit"	; [ 96CE 96CE ] ; C4CA20:GETPROC	; [ 96CE 96CE 970E ] ; C4CA24:'sys-SDL_Quit	; [ 96CE 96CE ] ; C4CA28:!	; [ 96CE 96CE 1DC ] ; C4CA2C:DUP	; [ 96CE ] ; C4CA30:"SDL_GetNumVideoDisplays"	; [ 96CE 96CE ] ; C4CA34:GETPROC	; [ 96CE 96CE 9736 ] ; C4CA38:'sys-SDL_GetNumVideoDisplays	; [ 96CE 96CE ] ; C4CA3C:!	; [ 96CE 96CE 1DD ] ; C4CA40:DUP	; [ 96CE ] ; C4CA44:"SDL_CreateWindow"	; [ 96CE 96CE ] ; C4CA48:GETPROC	; [ 96CE 96CE 977C ] ; C4CA4C:'sys-SDL_CreateWindow	; [ 96CE 96CE ] ; C4CA50:!	; [ 96CE 96CE 1DE ] ; C4CA54:DUP	; [ 96CE ] ; C4CA58:"SDL_SetWindowFullscreen"	; [ 96CE 96CE ] ; C4CA5C:GETPROC	; [ 96CE 96CE 97B4 ] ; C4CA60:'sys-SDL_SetWindowFullscreen	; [ 96CE 96CE ] ; C4CA64:!	; [ 96CE 96CE 1DF ] ; C4CA68:DUP	; [ 96CE ] ; C4CA6C:"SDL_GetWindowSurface"	; [ 96CE 96CE ] ; C4CA70:GETPROC	; [ 96CE 96CE 97FA ] ; C4CA74:'sys-SDL_GetWindowSurface	; [ 96CE 96CE ] ; C4CA78:!	; [ 96CE 96CE 1E0 ] ; C4CA7C:DUP	; [ 96CE ] ; C4CA80:"SDL_ShowCursor"	; [ 96CE 96CE ] ; C4CA84:GETPROC	; [ 96CE 96CE 983A ] ; C4CA88:'sys-SDL_ShowCursor	; [ 96CE 96CE ] ; C4CA8C:!	; [ 96CE 96CE 1E2 ] ; C4CA90:DUP	; [ 96CE ] ; C4CA94:"SDL_RaiseWindow"	; [ 96CE 96CE ] ; C4CA98:GETPROC	; [ 96CE 96CE 9870 ] ; C4CA9C:'sys-SDL_RaiseWindow	; [ 96CE 96CE ] ; C4CAA0:!	; [ 96CE 96CE 1E1 ] ; C4CAA4:DUP	; [ 96CE ] ; C4CAA8:"SDL_UpdateWindowSurface"	; [ 96CE 96CE ] ; C4CAAC:GETPROC	; [ 96CE 96CE 98A6 ] ; C4CAB0:'sys-SDL_UpdateWindowSurface	; [ 96CE 96CE ] ; C4CAB4:!	; [ 96CE 96CE 1E3 ] ; C4CAB8:DUP	; [ 96CE ] ; C4CABC:"SDL_DestroyWindow"	; [ 96CE 96CE ] ; C4CAC0:GETPROC	; [ 96CE 96CE 98EC ] ; C4CAC4:'sys-SDL_DestroyWindow	; [ 96CE 96CE ] ; C4CAC8:!	; [ 96CE 96CE 1E4 ] ; C4CACC:DUP	; [ 96CE ] ; C4CAD0:"SDL_CreateRenderer"	; [ 96CE 96CE ] ; C4CAD4:GETPROC	; [ 96CE 96CE 9926 ] ; C4CAD8:'sys-SDL_CreateRenderer	; [ 96CE 96CE ] ; C4CADC:!	; [ 96CE 96CE 1E5 ] ; C4CAE0:DUP	; [ 96CE ] ; C4CAE4:"SDL_CreateTexture"	; [ 96CE 96CE ] ; C4CAE8:GETPROC	; [ 96CE 96CE 9962 ] ; C4CAEC:'sys-SDL_CreateTexture	; [ 96CE 96CE ] ; C4CAF0:!	; [ 96CE 96CE 1E6 ] ; C4CAF4:DUP	; [ 96CE ] ; C4CAF8:"SDL_DestroyTexture"	; [ 96CE 96CE ] ; C4CAFC:GETPROC	; [ 96CE 96CE 999C ] ; C4CB00:'sys-SDL_DestroyTexture	; [ 96CE 96CE ] ; C4CB04:!	; [ 96CE 96CE 1E7 ] ; C4CB08:DUP	; [ 96CE ] ; C4CB0C:"SDL_DestroyRenderer"	; [ 96CE 96CE ] ; C4CB10:GETPROC	; [ 96CE 96CE 99D8 ] ; C4CB14:'sys-SDL_DestroyRenderer	; [ 96CE 96CE ] ; C4CB18:!	; [ 96CE 96CE 1E8 ] ; C4CB1C:DUP	; [ 96CE ] ; C4CB20:"SDL_UpdateTexture"	; [ 96CE 96CE ] ; C4CB24:GETPROC	; [ 96CE 96CE 9A16 ] ; C4CB28:'sys-SDL_UpdateTexture	; [ 96CE 96CE ] ; C4CB2C:!	; [ 96CE 96CE 1E9 ] ; C4CB30:DUP	; [ 96CE ] ; C4CB34:"SDL_RenderClear"	; [ 96CE 96CE ] ; C4CB38:GETPROC	; [ 96CE 96CE 9A50 ] ; C4CB3C:'sys-SDL_RenderClear	; [ 96CE 96CE ] ; C4CB40:!	; [ 96CE 96CE 1EA ] ; C4CB44:DUP	; [ 96CE ] ; C4CB48:"SDL_RenderCopy"	; [ 96CE 96CE ] ; C4CB4C:GETPROC	; [ 96CE 96CE 9A86 ] ; C4CB50:'sys-SDL_RenderCopy	; [ 96CE 96CE ] ; C4CB54:!	; [ 96CE 96CE 1EB ] ; C4CB58:DUP	; [ 96CE ] ; C4CB5C:"SDL_RenderCopyEx"	; [ 96CE 96CE ] ; C4CB60:GETPROC	; [ 96CE 96CE 9ABA ] ; C4CB64:'sys-SDL_RenderCopyEx	; [ 96CE 96CE ] ; C4CB68:!	; [ 96CE 96CE 1EC ] ; C4CB6C:DUP	; [ 96CE ] ; C4CB70:"SDL_RenderPresent"	; [ 96CE 96CE ] ; C4CB74:GETPROC	; [ 96CE 96CE 9AF2 ] ; C4CB78:'sys-SDL_RenderPresent	; [ 96CE 96CE ] ; C4CB7C:!	; [ 96CE 96CE 1ED ] ; C4CB80:DUP	; [ 96CE ] ; C4CB84:"SDL_CreateTextureFromSurface"	; [ 96CE 96CE ] ; C4CB88:GETPROC	; [ 96CE 96CE 9B2C ] ; C4CB8C:'sys-SDL_CreateTextureFromSurface	; [ 96CE 96CE ] ; C4CB90:!	; [ 96CE 96CE 1EF ] ; C4CB94:DUP	; [ 96CE ] ; C4CB98:"SDL_QueryTexture"	; [ 96CE 96CE ] ; C4CB9C:GETPROC	; [ 96CE 96CE 9B7C ] ; C4CBA0:'sys-SDL_QueryTexture	; [ 96CE 96CE ] ; C4CBA4:!	; [ 96CE 96CE 1F0 ] ; C4CBA8:DUP	; [ 96CE ] ; C4CBAC:"SDL_SetTextureColorMod"	; [ 96CE 96CE ] ; C4CBB0:GETPROC	; [ 96CE 96CE 9BB4 ] ; C4CBB4:'sys-SDL_SetTextureColorMod	; [ 96CE 96CE ] ; C4CBB8:!	; [ 96CE 96CE 20A ] ; C4CBBC:DUP	; [ 96CE ] ; C4CBC0:"SDL_SetRenderDrawColor"	; [ 96CE 96CE ] ; C4CBC4:GETPROC	; [ 96CE 96CE 9BF8 ] ; C4CBC8:'sys-SDL_SetRenderDrawColor	; [ 96CE 96CE ] ; C4CBCC:!	; [ 96CE 96CE 1EE ] ; C4CBD0:DUP	; [ 96CE ] ; C4CBD4:"SDL_LockSurface"	; [ 96CE 96CE ] ; C4CBD8:GETPROC	; [ 96CE 96CE 9C3C ] ; C4CBDC:'sys-SDL_LockSurface	; [ 96CE 96CE ] ; C4CBE0:!	; [ 96CE 96CE 1F1 ] ; C4CBE4:DUP	; [ 96CE ] ; C4CBE8:"SDL_UnlockSurface"	; [ 96CE 96CE ] ; C4CBEC:GETPROC	; [ 96CE 96CE 9C72 ] ; C4CBF0:'sys-SDL_UnlockSurface	; [ 96CE 96CE ] ; C4CBF4:!	; [ 96CE 96CE 1F2 ] ; C4CBF8:DUP	; [ 96CE ] ; C4CBFC:"SDL_FreeSurface"	; [ 96CE 96CE ] ; C4CC00:GETPROC	; [ 96CE 96CE 9CAC ] ; C4CC04:'sys-SDL_FreeSurface	; [ 96CE 96CE ] ; C4CC08:!	; [ 96CE 96CE 1F3 ] ; C4CC0C:DUP	; [ 96CE ] ; C4CC10:"SDL_LockTexture"	; [ 96CE 96CE ] ; C4CC14:GETPROC	; [ 96CE 96CE 9CE2 ] ; C4CC18:'sys-SDL_LockTexture	; [ 96CE 96CE ] ; C4CC1C:!	; [ 96CE 96CE 1F4 ] ; C4CC20:DUP	; [ 96CE ] ; C4CC24:"SDL_UnlockTexture"	; [ 96CE 96CE ] ; C4CC28:GETPROC	; [ 96CE 96CE 9D18 ] ; C4CC2C:'sys-SDL_UnlockTexture	; [ 96CE 96CE ] ; C4CC30:!	; [ 96CE 96CE 1F5 ] ; C4CC34:DUP	; [ 96CE ] ; C4CC38:"SDL_RenderSetLogicalSize"	; [ 96CE 96CE ] ; C4CC3C:GETPROC	; [ 96CE 96CE 9D52 ] ; C4CC40:'sys-SDL_RenderSetLogicalSize	; [ 96CE 96CE ] ; C4CC44:!	; [ 96CE 96CE 1F6 ] ; C4CC48:DUP	; [ 96CE ] ; C4CC4C:"SDL_SetRenderDrawBlendMode"	; [ 96CE 96CE ] ; C4CC50:GETPROC	; [ 96CE 96CE 9D9A ] ; C4CC54:'sys-SDL_SetRenderDrawBlendMode	; [ 96CE 96CE ] ; C4CC58:!	; [ 96CE 96CE 1F7 ] ; C4CC5C:DUP	; [ 96CE ] ; C4CC60:"SDL_SetTextureBlendMode"	; [ 96CE 96CE ] ; C4CC64:GETPROC	; [ 96CE 96CE 9DE6 ] ; C4CC68:'sys-SDL_SetTextureBlendMode	; [ 96CE 96CE ] ; C4CC6C:!	; [ 96CE 96CE 1F8 ] ; C4CC70:DUP	; [ 96CE ] ; C4CC74:"SDL_ConvertSurfaceFormat"	; [ 96CE 96CE ] ; C4CC78:GETPROC	; [ 96CE 96CE 9E2C ] ; C4CC7C:'sys-SDL_ConvertSurfaceFormat	; [ 96CE 96CE ] ; C4CC80:!	; [ 96CE 96CE 1F9 ] ; C4CC84:DUP	; [ 96CE ] ; C4CC88:"SDL_RenderDrawPoint"	; [ 96CE 96CE ] ; C4CC8C:GETPROC	; [ 96CE 96CE 9E76 ] ; C4CC90:'sys-SDL_RenderDrawPoint	; [ 96CE 96CE ] ; C4CC94:!	; [ 96CE 96CE 1FA ] ; C4CC98:DUP	; [ 96CE ] ; C4CC9C:"SDL_RenderDrawLine"	; [ 96CE 96CE ] ; C4CCA0:GETPROC	; [ 96CE 96CE 9EB4 ] ; C4CCA4:'sys-SDL_RenderDrawLine	; [ 96CE 96CE ] ; C4CCA8:!	; [ 96CE 96CE 1FB ] ; C4CCAC:DUP	; [ 96CE ] ; C4CCB0:"SDL_RenderDrawRect"	; [ 96CE 96CE ] ; C4CCB4:GETPROC	; [ 96CE 96CE 9EF0 ] ; C4CCB8:'sys-SDL_RenderDrawRect	; [ 96CE 96CE ] ; C4CCBC:!	; [ 96CE 96CE 1FC ] ; C4CCC0:DUP	; [ 96CE ] ; C4CCC4:"SDL_RenderFillRect"	; [ 96CE 96CE ] ; C4CCC8:GETPROC	; [ 96CE 96CE 9F2C ] ; C4CCCC:'sys-SDL_RenderFillRect	; [ 96CE 96CE ] ; C4CCD0:!	; [ 96CE 96CE 1FD ] ; C4CCD4:DUP	; [ 96CE ] ; C4CCD8:"SDL_RenderReadPixels"	; [ 96CE 96CE ] ; C4CCDC:GETPROC	; [ 96CE 96CE 9F68 ] ; C4CCE0:'sys-SDL_RenderReadPixels	; [ 96CE 96CE ] ; C4CCE4:!	; [ 96CE 96CE 1FE ] ; C4CCE8:DUP	; [ 96CE ] ; C4CCEC:"SDL_Delay"	; [ 96CE 96CE ] ; C4CCF0:GETPROC	; [ 96CE 96CE 9FA8 ] ; C4CCF4:'sys-SDL_Delay	; [ 96CE 96CE ] ; C4CCF8:!	; [ 96CE 96CE 1FF ] ; C4CCFC:DUP	; [ 96CE ] ; C4CD00:"SDL_PollEvent"	; [ 96CE 96CE ] ; C4CD04:GETPROC	; [ 96CE 96CE 9FD2 ] ; C4CD08:'sys-SDL_PollEvent	; [ 96CE 96CE ] ; C4CD0C:!	; [ 96CE 96CE 200 ] ; C4CD10:DUP	; [ 96CE ] ; C4CD14:"SDL_GetTicks"	; [ 96CE 96CE ] ; C4CD18:GETPROC	; [ 96CE 96CE A004 ] ; C4CD1C:'sys-SDL_GetTicks	; [ 96CE 96CE ] ; C4CD20:!	; [ 96CE 96CE 201 ] ; C4CD24:DUP	; [ 96CE ] ; C4CD28:"SDL_RWFromFile"	; [ 96CE 96CE ] ; C4CD2C:GETPROC	; [ 96CE 96CE A036 ] ; C4CD30:'sys-SDL_RWFromFile	; [ 96CE 96CE ] ; C4CD34:!	; [ 96CE 96CE 204 ] ; C4CD38:DUP	; [ 96CE ] ; C4CD3C:"SDL_GL_SetAttribute"	; [ 96CE 96CE ] ; C4CD40:GETPROC	; [ 96CE 96CE A06C ] ; C4CD44:'sys-SDL_GL_SetAttribute	; [ 96CE 96CE ] ; C4CD48:!	; [ 96CE 96CE 205 ] ; C4CD4C:DUP	; [ 96CE ] ; C4CD50:"SDL_GL_CreateContext"	; [ 96CE 96CE ] ; C4CD54:GETPROC	; [ 96CE 96CE A0AA ] ; C4CD58:'sys-SDL_GL_CreateContext	; [ 96CE 96CE ] ; C4CD5C:!	; [ 96CE 96CE 206 ] ; C4CD60:DUP	; [ 96CE ] ; C4CD64:"SDL_GL_DeleteContext"	; [ 96CE 96CE ] ; C4CD68:GETPROC	; [ 96CE 96CE A0EA ] ; C4CD6C:'sys-SDL_GL_DeleteContext	; [ 96CE 96CE ] ; C4CD70:!	; [ 96CE 96CE 207 ] ; C4CD74:DUP	; [ 96CE ] ; C4CD78:"SDL_GL_SetSwapInterval"	; [ 96CE 96CE ] ; C4CD7C:GETPROC	; [ 96CE 96CE A12A ] ; C4CD80:'sys-SDL_GL_SetSwapInterval	; [ 96CE 96CE ] ; C4CD84:!	; [ 96CE 96CE 208 ] ; C4CD88:DUP	; [ 96CE ] ; C4CD8C:"SDL_GL_SwapWindow"	; [ 96CE 96CE ] ; C4CD90:GETPROC	; [ 96CE 96CE A16E ] ; C4CD94:'sys-SDL_GL_SwapWindow	; [ 96CE 96CE ] ; C4CD98:!	; [ 96CE 96CE 209 ] ; C4CD9C:DROP	; [ 96CE ] ; C4CDA0:;	; [ ] ;---------ANA;---------GEN; call w162; "SDL2.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str96CE; DUPadd rbp,8mov [rbp],rax; "SDL_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str96E6; 'sys-SDL_Init; OPTAV !mov qword[w1DB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str970E; 'sys-SDL_Quit; OPTAV !mov qword[w1DC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetNumVideoDisplays"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9736; 'sys-SDL_GetNumVideoDisplays; OPTAV !mov qword[w1DD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str977C; 'sys-SDL_CreateWindow; OPTAV !mov qword[w1DE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetWindowFullscreen"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str97B4; 'sys-SDL_SetWindowFullscreen; OPTAV !mov qword[w1DF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str97FA; 'sys-SDL_GetWindowSurface; OPTAV !mov qword[w1E0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ShowCursor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str983A; 'sys-SDL_ShowCursor; OPTAV !mov qword[w1E2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RaiseWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9870; 'sys-SDL_RaiseWindow; OPTAV !mov qword[w1E1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str98A6; 'sys-SDL_UpdateWindowSurface; OPTAV !mov qword[w1E3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str98EC; 'sys-SDL_DestroyWindow; OPTAV !mov qword[w1E4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9926; 'sys-SDL_CreateRenderer; OPTAV !mov qword[w1E5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9962; 'sys-SDL_CreateTexture; OPTAV !mov qword[w1E6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str999C; 'sys-SDL_DestroyTexture; OPTAV !mov qword[w1E7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str99D8; 'sys-SDL_DestroyRenderer; OPTAV !mov qword[w1E8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9A16; 'sys-SDL_UpdateTexture; OPTAV !mov qword[w1E9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderClear"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9A50; 'sys-SDL_RenderClear; OPTAV !mov qword[w1EA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopy"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9A86; 'sys-SDL_RenderCopy; OPTAV !mov qword[w1EB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopyEx"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9ABA; 'sys-SDL_RenderCopyEx; OPTAV !mov qword[w1EC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderPresent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9AF2; 'sys-SDL_RenderPresent; OPTAV !mov qword[w1ED],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTextureFromSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9B2C; 'sys-SDL_CreateTextureFromSurface; OPTAV !mov qword[w1EF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_QueryTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9B7C; 'sys-SDL_QueryTexture; OPTAV !mov qword[w1F0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureColorMod"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9BB4; 'sys-SDL_SetTextureColorMod; OPTAV !mov qword[w20A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawColor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9BF8; 'sys-SDL_SetRenderDrawColor; OPTAV !mov qword[w1EE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9C3C; 'sys-SDL_LockSurface; OPTAV !mov qword[w1F1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9C72; 'sys-SDL_UnlockSurface; OPTAV !mov qword[w1F2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_FreeSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9CAC; 'sys-SDL_FreeSurface; OPTAV !mov qword[w1F3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9CE2; 'sys-SDL_LockTexture; OPTAV !mov qword[w1F4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9D18; 'sys-SDL_UnlockTexture; OPTAV !mov qword[w1F5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderSetLogicalSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9D52; 'sys-SDL_RenderSetLogicalSize; OPTAV !mov qword[w1F6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9D9A; 'sys-SDL_SetRenderDrawBlendMode; OPTAV !mov qword[w1F7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9DE6; 'sys-SDL_SetTextureBlendMode; OPTAV !mov qword[w1F8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ConvertSurfaceFormat"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9E2C; 'sys-SDL_ConvertSurfaceFormat; OPTAV !mov qword[w1F9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawPoint"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9E76; 'sys-SDL_RenderDrawPoint; OPTAV !mov qword[w1FA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawLine"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9EB4; 'sys-SDL_RenderDrawLine; OPTAV !mov qword[w1FB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9EF0; 'sys-SDL_RenderDrawRect; OPTAV !mov qword[w1FC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderFillRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9F2C; 'sys-SDL_RenderFillRect; OPTAV !mov qword[w1FD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderReadPixels"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9F68; 'sys-SDL_RenderReadPixels; OPTAV !mov qword[w1FE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Delay"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9FA8; 'sys-SDL_Delay; OPTAV !mov qword[w1FF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_PollEvent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str9FD2; 'sys-SDL_PollEvent; OPTAV !mov qword[w200],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetTicks"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strA004; 'sys-SDL_GetTicks; OPTAV !mov qword[w201],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RWFromFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strA036; 'sys-SDL_RWFromFile; OPTAV !mov qword[w204],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetAttribute"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strA06C; 'sys-SDL_GL_SetAttribute; OPTAV !mov qword[w205],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_CreateContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strA0AA; 'sys-SDL_GL_CreateContext; OPTAV !mov qword[w206],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_DeleteContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strA0EA; 'sys-SDL_GL_DeleteContext; OPTAV !mov qword[w207],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetSwapInterval"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strA12A; 'sys-SDL_GL_SetSwapInterval; OPTAV !mov qword[w208],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SwapWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strA16E; 'sys-SDL_GL_SwapWindow; OPTAV !mov qword[w209],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLcolor  |1001482|e     . I| calls:1 niv:1 len:19 ( a --  )w255:;---------OPT; C4CDA4:SDLrenderer	; [ 0 ] ; C4CDA8:SWAP	; [ 0 23D ] ; C4CDAC:DUP	; [ 23D 0 ] ; C4CDB0:16	; [ 23D 0 0 ] ; C4CDB4:>>	; [ 23D 0 0 0 ] ; C4CDB8:$ff	; [ 23D 0 0 ] ; C4CDBC:AND	; [ 23D 0 0 1 ] ; C4CDC0:SWAP	; [ 23D 0 0 ] ; C4CDC4:DUP	; [ 23D 0 0 ] ; C4CDC8:8	; [ 23D 0 0 0 ] ; C4CDCC:>>	; [ 23D 0 0 0 2 ] ; C4CDD0:$ff	; [ 23D 0 0 0 ] ; C4CDD4:AND	; [ 23D 0 0 0 3 ] ; C4CDD8:SWAP	; [ 23D 0 0 0 ] ; C4CDDC:$ff	; [ 23D 0 0 0 ] ; C4CDE0:AND	; [ 23D 0 0 0 4 ] ; C4CDE4:$ff	; [ 23D 0 0 0 ] ; C4CDE8:SDL_SetRenderDrawColor	; [ 23D 0 0 0 5 ] ; C4C4B8:sys-SDL_SetRenderDrawColor	; [ 23D 0 0 0 5 ] ; C4C4BC:SYS5	; [ 23D 0 0 0 5 1EE ] ; C4C4C0:DROP	; [ 23D ] ; C4CDEC:;	; [ ] ;---------ANA;---------GEN; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; $ff; OPTN ANDand rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; sys-SDL_SetRenderDrawColoradd rbp,8mov [rbp],raxmov rax,qword[w1EE]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |3001080|l     .  | calls:1 niv:3 len:75 (  --  )w28F:;---------OPT; C4D7C0:	; [ ] ; C4D7C4:"SDL2_ttf.DLL"	; [ ] ; C4D7C8:LOADLIB	; [ B0E2 ] ; C4D7CC:DUP	; [ B0E2 ] ; C4D7D0:"TTF_Init"	; [ B0E2 B0E2 ] ; C4D7D4:GETPROC	; [ B0E2 B0E2 B0FE ] ; C4D7D8:'sys-TTF_Init	; [ B0E2 B0E2 ] ; C4D7DC:!	; [ B0E2 B0E2 273 ] ; C4D7E0:DUP	; [ B0E2 ] ; C4D7E4:"TTF_OpenFont"	; [ B0E2 B0E2 ] ; C4D7E8:GETPROC	; [ B0E2 B0E2 B126 ] ; C4D7EC:'sys-TTF_OpenFont	; [ B0E2 B0E2 ] ; C4D7F0:!	; [ B0E2 B0E2 274 ] ; C4D7F4:DUP	; [ B0E2 ] ; C4D7F8:"TTF_SetFontStyle"	; [ B0E2 B0E2 ] ; C4D7FC:GETPROC	; [ B0E2 B0E2 B156 ] ; C4D800:'sys-TTF_SetFontStyle	; [ B0E2 B0E2 ] ; C4D804:!	; [ B0E2 B0E2 275 ] ; C4D808:DUP	; [ B0E2 ] ; C4D80C:"TTF_SetFontOutline"	; [ B0E2 B0E2 ] ; C4D810:GETPROC	; [ B0E2 B0E2 B18E ] ; C4D814:'sys-TTF_SetFontOutline	; [ B0E2 B0E2 ] ; C4D818:!	; [ B0E2 B0E2 276 ] ; C4D81C:DUP	; [ B0E2 ] ; C4D820:"TTF_SizeText"	; [ B0E2 B0E2 ] ; C4D824:GETPROC	; [ B0E2 B0E2 B1CA ] ; C4D828:'sys-TTF_SizeText	; [ B0E2 B0E2 ] ; C4D82C:!	; [ B0E2 B0E2 277 ] ; C4D830:DUP	; [ B0E2 ] ; C4D834:"TTF_SizeUTF8"	; [ B0E2 B0E2 ] ; C4D838:GETPROC	; [ B0E2 B0E2 B1FA ] ; C4D83C:'sys-TTF_SizeUTF8	; [ B0E2 B0E2 ] ; C4D840:!	; [ B0E2 B0E2 278 ] ; C4D844:DUP	; [ B0E2 ] ; C4D848:"TTF_RenderText_Solid"	; [ B0E2 B0E2 ] ; C4D84C:GETPROC	; [ B0E2 B0E2 B22A ] ; C4D850:'sys-TTF_RenderText_Solid	; [ B0E2 B0E2 ] ; C4D854:!	; [ B0E2 B0E2 279 ] ; C4D858:DUP	; [ B0E2 ] ; C4D85C:"TTF_RenderUTF8_Solid"	; [ B0E2 B0E2 ] ; C4D860:GETPROC	; [ B0E2 B0E2 B26A ] ; C4D864:'sys-TTF_RenderUTF8_Solid	; [ B0E2 B0E2 ] ; C4D868:!	; [ B0E2 B0E2 27A ] ; C4D86C:DUP	; [ B0E2 ] ; C4D870:"TTF_RenderText_Shaded"	; [ B0E2 B0E2 ] ; C4D874:GETPROC	; [ B0E2 B0E2 B2AA ] ; C4D878:'sys-TTF_RenderText_Shaded	; [ B0E2 B0E2 ] ; C4D87C:!	; [ B0E2 B0E2 27B ] ; C4D880:DUP	; [ B0E2 ] ; C4D884:"TTF_RenderUTF8_Shaded"	; [ B0E2 B0E2 ] ; C4D888:GETPROC	; [ B0E2 B0E2 B2EC ] ; C4D88C:'sys-TTF_RenderUTF8_Shaded	; [ B0E2 B0E2 ] ; C4D890:!	; [ B0E2 B0E2 27C ] ; C4D894:DUP	; [ B0E2 ] ; C4D898:"TTF_RenderText_Blended"	; [ B0E2 B0E2 ] ; C4D89C:GETPROC	; [ B0E2 B0E2 B32E ] ; C4D8A0:'sys-TTF_RenderText_Blended	; [ B0E2 B0E2 ] ; C4D8A4:!	; [ B0E2 B0E2 27D ] ; C4D8A8:DUP	; [ B0E2 ] ; C4D8AC:"TTF_RenderUTF8_Blended"	; [ B0E2 B0E2 ] ; C4D8B0:GETPROC	; [ B0E2 B0E2 B372 ] ; C4D8B4:'sys-TTF_RenderUTF8_Blended	; [ B0E2 B0E2 ] ; C4D8B8:!	; [ B0E2 B0E2 27E ] ; C4D8BC:DUP	; [ B0E2 ] ; C4D8C0:"TTF_CloseFont"	; [ B0E2 B0E2 ] ; C4D8C4:GETPROC	; [ B0E2 B0E2 B3B6 ] ; C4D8C8:'sys-TTF_CloseFont	; [ B0E2 B0E2 ] ; C4D8CC:!	; [ B0E2 B0E2 27F ] ; C4D8D0:DUP	; [ B0E2 ] ; C4D8D4:"TTF_Quit"	; [ B0E2 B0E2 ] ; C4D8D8:GETPROC	; [ B0E2 B0E2 B3E8 ] ; C4D8DC:'sys-TTF_Quit	; [ B0E2 B0E2 ] ; C4D8E0:!	; [ B0E2 B0E2 280 ] ; C4D8E4:DROP	; [ B0E2 ] ; C4D8E8:;	; [ ] ;---------ANA;---------GEN; call w254; "SDL2_ttf.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,strB0E2; DUPadd rbp,8mov [rbp],rax; "TTF_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB0FE; 'sys-TTF_Init; OPTAV !mov qword[w273],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_OpenFont"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB126; 'sys-TTF_OpenFont; OPTAV !mov qword[w274],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SetFontStyle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB156; 'sys-TTF_SetFontStyle; OPTAV !mov qword[w275],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SetFontOutline"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB18E; 'sys-TTF_SetFontOutline; OPTAV !mov qword[w276],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SizeText"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB1CA; 'sys-TTF_SizeText; OPTAV !mov qword[w277],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SizeUTF8"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB1FA; 'sys-TTF_SizeUTF8; OPTAV !mov qword[w278],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderText_Solid"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB22A; 'sys-TTF_RenderText_Solid; OPTAV !mov qword[w279],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderUTF8_Solid"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB26A; 'sys-TTF_RenderUTF8_Solid; OPTAV !mov qword[w27A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderText_Shaded"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB2AA; 'sys-TTF_RenderText_Shaded; OPTAV !mov qword[w27B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderUTF8_Shaded"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB2EC; 'sys-TTF_RenderUTF8_Shaded; OPTAV !mov qword[w27C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderText_Blended"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB32E; 'sys-TTF_RenderText_Blended; OPTAV !mov qword[w27D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderUTF8_Blended"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB372; 'sys-TTF_RenderUTF8_Blended; OPTAV !mov qword[w27E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_CloseFont"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB3B6; 'sys-TTF_CloseFont; OPTAV !mov qword[w27F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB3E8; 'sys-TTF_Quit; OPTAV !mov qword[w280],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :loadimg  |1002492|e  ;  . I| calls:2 niv:1 len:11 ( a -- b )w294:;---------OPT; C4D908:IMG_Load	; [ 0 ] ; C4D8EC:sys-IMG_Load	; [ 0 ] ; C4D8F0:SYS1	; [ 0 291 ] ; C4D90C:0?	; [ 0 ] ; C4D910:(	; [ 0 ] ; C4D914:;	; [ 0 ] ; C4D918:)	; [ 0 ] ; C4D91C:SDLrenderer	; [ 0 ] ; C4D920:OVER	; [ 0 23D ] ; C4D924:SDL_CreateTextureFromSurface	; [ 0 23D 0 ] ; C4C4AC:sys-SDL_CreateTextureFromSurface	; [ 0 23D 0 ] ; C4C4B0:SYS2	; [ 0 23D 0 1EF ] ; C4D928:SWAP	; [ 0 23D ] ; C4D92C:SDL_FreeSurface	; [ 23D 0 ] ; C4C4E8:sys-SDL_FreeSurface	; [ 23D 0 ] ; C4C4EC:SYS1	; [ 23D 0 1F3 ] ; C4C4F0:DROP	; [ 23D 0 ] ; C4D930:;	; [ 23D ] ;---------ANA;---------GEN; sys-IMG_Loadadd rbp,8mov [rbp],raxmov rax,qword[w291]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 0?or rax,raxjnz _o22; (; ;ret; )_o22:; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; sys-SDL_CreateTextureFromSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1EF]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; SWAPxchg rax,[rbp]; sys-SDL_FreeSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1F3]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |1001480|l     . I| calls:1 niv:1 len:17 (  --  )w296:;---------OPT; C4D950:	; [ ] ; C4D954:"SDL2_image.DLL"	; [ ] ; C4D958:LOADLIB	; [ B5AE ] ; C4D95C:DUP	; [ B5AE ] ; C4D960:"IMG_Load"	; [ B5AE B5AE ] ; C4D964:GETPROC	; [ B5AE B5AE B5CC ] ; C4D968:'sys-IMG_Load	; [ B5AE B5AE ] ; C4D96C:!	; [ B5AE B5AE 291 ] ; C4D970:DUP	; [ B5AE ] ; C4D974:"IMG_Init"	; [ B5AE B5AE ] ; C4D978:GETPROC	; [ B5AE B5AE B5F4 ] ; C4D97C:'sys-IMG_Init	; [ B5AE B5AE ] ; C4D980:!	; [ B5AE B5AE 290 ] ; C4D984:DROP	; [ B5AE ] ; C4D988:$3	; [ ] ; C4D98C:IMG_Init	; [ 0 ] ; C4D8F8:sys-IMG_Init	; [ 0 ] ; C4D8FC:SYS1	; [ 0 290 ] ; C4D900:DROP	; [ 0 ] ; C4D990:;	; [ ] ;---------ANA;---------GEN; call w28F; "SDL2_image.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,strB5AE; DUPadd rbp,8mov [rbp],rax; "IMG_Load"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB5CC; 'sys-IMG_Load; OPTAV !mov qword[w291],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "IMG_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB5F4; 'sys-IMG_Init; OPTAV !mov qword[w290],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; $3add rbp,8mov [rbp],raxmov rax,3; sys-IMG_Initadd rbp,8mov [rbp],raxmov rax,qword[w290]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |2001080|l     .  | calls:1 niv:2 len:80 (  --  )w2B8:;---------OPT; C4DAB0:	; [ ] ; C4DAB4:"SDL2_mixer.DLL"	; [ ] ; C4DAB8:LOADLIB	; [ BAF2 ] ; C4DABC:DUP	; [ BAF2 ] ; C4DAC0:"Mix_Init"	; [ BAF2 BAF2 ] ; C4DAC4:GETPROC	; [ BAF2 BAF2 BB10 ] ; C4DAC8:'sys-Mix_Init	; [ BAF2 BAF2 ] ; C4DACC:!	; [ BAF2 BAF2 297 ] ; C4DAD0:DUP	; [ BAF2 ] ; C4DAD4:"Mix_Quit"	; [ BAF2 BAF2 ] ; C4DAD8:GETPROC	; [ BAF2 BAF2 BB38 ] ; C4DADC:'sys-Mix_Quit	; [ BAF2 BAF2 ] ; C4DAE0:!	; [ BAF2 BAF2 298 ] ; C4DAE4:DUP	; [ BAF2 ] ; C4DAE8:"Mix_LoadWAV_RW"	; [ BAF2 BAF2 ] ; C4DAEC:GETPROC	; [ BAF2 BAF2 BB60 ] ; C4DAF0:'sys-Mix_LoadWAV_RW	; [ BAF2 BAF2 ] ; C4DAF4:!	; [ BAF2 BAF2 299 ] ; C4DAF8:DUP	; [ BAF2 ] ; C4DAFC:"Mix_LoadMUS"	; [ BAF2 BAF2 ] ; C4DB00:GETPROC	; [ BAF2 BAF2 BB94 ] ; C4DB04:'sys-Mix_LoadMUS	; [ BAF2 BAF2 ] ; C4DB08:!	; [ BAF2 BAF2 29A ] ; C4DB0C:DUP	; [ BAF2 ] ; C4DB10:"Mix_PlayChannelTimed"	; [ BAF2 BAF2 ] ; C4DB14:GETPROC	; [ BAF2 BAF2 BBC2 ] ; C4DB18:'sys-Mix_PlayChannelTimed	; [ BAF2 BAF2 ] ; C4DB1C:!	; [ BAF2 BAF2 29B ] ; C4DB20:DUP	; [ BAF2 ] ; C4DB24:"Mix_HaltChannel"	; [ BAF2 BAF2 ] ; C4DB28:GETPROC	; [ BAF2 BAF2 BC02 ] ; C4DB2C:'sys-Mix_HaltChannel	; [ BAF2 BAF2 ] ; C4DB30:!	; [ BAF2 BAF2 29C ] ; C4DB34:DUP	; [ BAF2 ] ; C4DB38:"Mix_PlayMusic"	; [ BAF2 BAF2 ] ; C4DB3C:GETPROC	; [ BAF2 BAF2 BC38 ] ; C4DB40:'sys-Mix_PlayMusic	; [ BAF2 BAF2 ] ; C4DB44:!	; [ BAF2 BAF2 29D ] ; C4DB48:DUP	; [ BAF2 ] ; C4DB4C:"Mix_HaltMusic"	; [ BAF2 BAF2 ] ; C4DB50:GETPROC	; [ BAF2 BAF2 BC6A ] ; C4DB54:'sys-Mix_HaltMusic	; [ BAF2 BAF2 ] ; C4DB58:!	; [ BAF2 BAF2 29E ] ; C4DB5C:DUP	; [ BAF2 ] ; C4DB60:"Mix_FadeOutMusic"	; [ BAF2 BAF2 ] ; C4DB64:GETPROC	; [ BAF2 BAF2 BC9C ] ; C4DB68:'sys-Mix_fadeOutMusic	; [ BAF2 BAF2 ] ; C4DB6C:!	; [ BAF2 BAF2 29F ] ; C4DB70:DUP	; [ BAF2 ] ; C4DB74:"Mix_VolumeMusic"	; [ BAF2 BAF2 ] ; C4DB78:GETPROC	; [ BAF2 BAF2 BCD4 ] ; C4DB7C:'sys-Mix_VolumeMusic	; [ BAF2 BAF2 ] ; C4DB80:!	; [ BAF2 BAF2 2A0 ] ; C4DB84:DUP	; [ BAF2 ] ; C4DB88:"Mix_FreeChunk"	; [ BAF2 BAF2 ] ; C4DB8C:GETPROC	; [ BAF2 BAF2 BD0A ] ; C4DB90:'sys-Mix_FreeChunk	; [ BAF2 BAF2 ] ; C4DB94:!	; [ BAF2 BAF2 2A1 ] ; C4DB98:DUP	; [ BAF2 ] ; C4DB9C:"Mix_FreeMusic"	; [ BAF2 BAF2 ] ; C4DBA0:GETPROC	; [ BAF2 BAF2 BD3C ] ; C4DBA4:'sys-Mix_FreeMusic	; [ BAF2 BAF2 ] ; C4DBA8:!	; [ BAF2 BAF2 2A2 ] ; C4DBAC:DUP	; [ BAF2 ] ; C4DBB0:"Mix_OpenAudio"	; [ BAF2 BAF2 ] ; C4DBB4:GETPROC	; [ BAF2 BAF2 BD6E ] ; C4DBB8:'sys-Mix_OpenAudio	; [ BAF2 BAF2 ] ; C4DBBC:!	; [ BAF2 BAF2 2A3 ] ; C4DBC0:DUP	; [ BAF2 ] ; C4DBC4:"Mix_CloseAudio"	; [ BAF2 BAF2 ] ; C4DBC8:GETPROC	; [ BAF2 BAF2 BDA0 ] ; C4DBCC:'sys-Mix_CloseAudio	; [ BAF2 BAF2 ] ; C4DBD0:!	; [ BAF2 BAF2 2A4 ] ; C4DBD4:DUP	; [ BAF2 ] ; C4DBD8:"Mix_PlayingMusic"	; [ BAF2 BAF2 ] ; C4DBDC:GETPROC	; [ BAF2 BAF2 BDD4 ] ; C4DBE0:'sys-Mix_PlayingMusic	; [ BAF2 BAF2 ] ; C4DBE4:!	; [ BAF2 BAF2 2A5 ] ; C4DBE8:DROP	; [ BAF2 ] ; C4DBEC:;	; [ ] ;---------ANA;---------GEN; call w296; "SDL2_mixer.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,strBAF2; DUPadd rbp,8mov [rbp],rax; "Mix_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBB10; 'sys-Mix_Init; OPTAV !mov qword[w297],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBB38; 'sys-Mix_Quit; OPTAV !mov qword[w298],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_LoadWAV_RW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBB60; 'sys-Mix_LoadWAV_RW; OPTAV !mov qword[w299],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_LoadMUS"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBB94; 'sys-Mix_LoadMUS; OPTAV !mov qword[w29A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_PlayChannelTimed"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBBC2; 'sys-Mix_PlayChannelTimed; OPTAV !mov qword[w29B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_HaltChannel"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBC02; 'sys-Mix_HaltChannel; OPTAV !mov qword[w29C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_PlayMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBC38; 'sys-Mix_PlayMusic; OPTAV !mov qword[w29D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_HaltMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBC6A; 'sys-Mix_HaltMusic; OPTAV !mov qword[w29E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_FadeOutMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBC9C; 'sys-Mix_fadeOutMusic; OPTAV !mov qword[w29F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_VolumeMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBCD4; 'sys-Mix_VolumeMusic; OPTAV !mov qword[w2A0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_FreeChunk"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBD0A; 'sys-Mix_FreeChunk; OPTAV !mov qword[w2A1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_FreeMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBD3C; 'sys-Mix_FreeMusic; OPTAV !mov qword[w2A2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_OpenAudio"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBD6E; 'sys-Mix_OpenAudio; OPTAV !mov qword[w2A3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_CloseAudio"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBDA0; 'sys-Mix_CloseAudio; OPTAV !mov qword[w2A4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_PlayingMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strBDD4; 'sys-Mix_PlayingMusic; OPTAV !mov qword[w2A5],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :delp  |1080|l     .  | calls:1 niv:0 len:15 ( abc -- def )w2BD:;---------OPT; C4DC70:NIP	; [ 2 1 0 ] ; C4DC74:OVER	; [ 2 0 ] ; C4DC78:@	; [ 2 0 2 ] ; C4DC7C:64	; [ 2 0 2 ] ; C4DC80:-	; [ 2 0 2 0 ] ; C4DC84:2DUP	; [ 2 0 2 ] ; C4DC88:8	; [ 2 0 2 0 2 ] ; C4DC8C:MOVE	; [ 2 0 2 0 2 1 ] ; C4DC90:DUP	; [ 2 0 2 ] ; C4DC94:PICK3	; [ 2 0 2 2 ] ; C4DC98:!	; [ 2 0 2 2 2 ] ; C4DC9C:SWAP	; [ 2 0 2 ] ; C4DCA0:64	; [ 2 2 0 ] ; C4DCA4:-	; [ 2 2 0 2 ] ; C4DCA8:;	; [ 2 2 0 ] ;---------ANA;---------GEN; NIPsub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; @mov rax,qword[rax]; 64; OPTN -sub rax,64; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 8add rbp,8mov [rbp],raxmov rax,8; MOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 64; OPTN -sub rax,64; ;ret;--------------------------; :p.draw  |1001082|e     .  | calls:1 niv:1 len:20 ( a --  )w2BE:;---------OPT; C4DCAC:DUP	; [ 0 ] ; C4DCB0:@+	; [ 0 0 ] ; C4DCB4:SWAP	; [ 0 0 0 ] ; C4DCB8:@	; [ 0 0 0 ] ; C4DCBC:(	; [ 0 0 0 ] ; C4DCC0:OVER	; [ 0 0 0 ] ; C4DCC4:<?	; [ 0 0 0 0 ] ; C4DCC8:DUP	; [ 0 0 0 ] ; C4DCCC:@+	; [ 0 0 0 0 ] ; C4DCD0:EX	; [ 0 0 0 0 0 ] ; C4DCD4:0?	; [ 0 0 0 0 0 ] ; C4DCD8:(	; [ 0 0 0 0 0 ] ; C4DCDC:DROP	; [ 0 0 0 0 0 ] ; C4DCE0:delp	; [ 0 0 0 0 ] ; C4DCE4:)	; [ 0 2 1 0 ] ; C4DCE8:64	; [ 0 0 0 0 0 ] ; C4DCEC:+	; [ 0 0 0 0 0 0 ] ; C4DCF0:)	; [ 0 0 0 0 0 ] ; C4DCF4:3DROP	; [ 0 0 0 ] ; C4DCF8:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @mov rax,qword[rax]; (_i23:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o23; DUPadd rbp,8mov [rbp],rax; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 0?or rax,raxjnz _o24; (; DROPmov rax,[rbp]sub rbp,8; delpcall w2BD; )_o24:; 64; OPTN +add rax,64; )jmp _i23_o23:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :delpo  |1080|l     .  | calls:1 niv:0 len:20 ( abc -- def )w2BF:;---------OPT; C4DCFC:DUP	; [ 2 1 0 ] ; C4DD00:DUP	; [ 2 1 0 0 ] ; C4DD04:64	; [ 2 1 0 0 0 ] ; C4DD08:+	; [ 2 1 0 0 0 0 ] ; C4DD0C:PICK3	; [ 2 1 0 0 0 ] ; C4DD10:OVER	; [ 2 1 0 0 0 1 ] ; C4DD14:-	; [ 2 1 0 0 0 1 0 ] ; C4DD18:3	; [ 2 1 0 0 0 1 ] ; C4DD1C:>>	; [ 2 1 0 0 0 1 1 ] ; C4DD20:MOVE	; [ 2 1 0 0 0 1 ] ; C4DD24:SWAP	; [ 2 1 0 ] ; C4DD28:64	; [ 2 0 1 ] ; C4DD2C:-	; [ 2 0 1 2 ] ; C4DD30:DUP	; [ 2 0 1 ] ; C4DD34:PICK3	; [ 2 0 1 1 ] ; C4DD38:!	; [ 2 0 1 1 2 ] ; C4DD3C:SWAP	; [ 2 0 1 ] ; C4DD40:64	; [ 2 1 0 ] ; C4DD44:-	; [ 2 1 0 3 ] ; C4DD48:;	; [ 2 1 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 64; OPTN +add rax,64; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; MOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; SWAPxchg rax,[rbp]; 64; OPTN -sub rax,64; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 64; OPTN -sub rax,64; ;ret;--------------------------; :p.drawo  |1001082|e     .  | calls:1 niv:1 len:20 ( a --  )w2C0:;---------OPT; C4DD4C:DUP	; [ 0 ] ; C4DD50:@+	; [ 0 0 ] ; C4DD54:SWAP	; [ 0 0 0 ] ; C4DD58:@	; [ 0 0 0 ] ; C4DD5C:(	; [ 0 0 0 ] ; C4DD60:OVER	; [ 0 0 0 ] ; C4DD64:<?	; [ 0 0 0 0 ] ; C4DD68:DUP	; [ 0 0 0 ] ; C4DD6C:@+	; [ 0 0 0 0 ] ; C4DD70:EX	; [ 0 0 0 0 0 ] ; C4DD74:0?	; [ 0 0 0 0 0 ] ; C4DD78:(	; [ 0 0 0 0 0 ] ; C4DD7C:DROP	; [ 0 0 0 0 0 ] ; C4DD80:delpo	; [ 0 0 0 0 ] ; C4DD84:)	; [ 0 2 1 0 ] ; C4DD88:64	; [ 0 0 0 0 0 ] ; C4DD8C:+	; [ 0 0 0 0 0 0 ] ; C4DD90:)	; [ 0 0 0 0 0 ] ; C4DD94:3DROP	; [ 0 0 0 ] ; C4DD98:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @mov rax,qword[rax]; (_i25:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o25; DUPadd rbp,8mov [rbp],rax; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 0?or rax,raxjnz _o26; (; DROPmov rax,[rbp]sub rbp,8; delpocall w2BF; )_o26:; 64; OPTN +add rax,64; )jmp _i25_o25:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :Quad_In  |1004486|e'    . I| calls:4 niv:1 len:3 ( a -- b )w2CB:;---------OPT; C4DF80:DUP	; [ 0 ] ; C4DF84:*.	; [ 0 0 ] ; C48B84:16	; [ 0 0 ] ; C48B88:*>>	; [ 0 0 0 ] ; C48B8C:DUP	; [ 0 ] ; C48B90:63	; [ 0 0 ] ; C48B94:>>	; [ 0 0 1 ] ; C48B98:-	; [ 0 0 ] ; C4DF88:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :Ela_In  |1001492|e  ;  . I| calls:1 niv:1 len:26 ( a -- b )w2E0:;---------OPT; C4E2DC:0?	; [ 0 ] ; C4E2E0:(	; [ 0 ] ; C4E2E4:;	; [ 0 ] ; C4E2E8:)	; [ 0 ] ; C4E2EC:1.0	; [ 0 ] ; C4E2F0:=?	; [ 0 0 ] ; C4E2F4:(	; [ 0 ] ; C4E2F8:;	; [ 0 ] ; C4E2FC:)	; [ 0 ] ; C4E300:DUP	; [ 0 ] ; C4E304:1.0	; [ 0 0 ] ; C4E308:-	; [ 0 0 1 ] ; C4E30C:10	; [ 0 0 ] ; C4E310:*	; [ 0 0 2 ] ; C4E314:2.0	; [ 0 0 ] ; C4E318:SWAP	; [ 0 0 3 ] ; C4E31C:pow.	; [ 0 3 0 ] ; C49808:SWAP	; [ 0 3 0 ] ; C4980C:ln.	; [ 0 0 3 ] ; C49810:*.	; [ 0 0 0 ] ; C48B84:16	; [ 0 0 0 ] ; C48B88:*>>	; [ 0 0 0 4 ] ; C48B8C:DUP	; [ 0 0 ] ; C48B90:63	; [ 0 0 0 ] ; C48B94:>>	; [ 0 0 0 5 ] ; C48B98:-	; [ 0 0 0 ] ; C49814:exp.	; [ 0 0 ] ; C4E320:NEG	; [ 0 0 ] ; C4E324:SWAP	; [ 0 0 ] ; C4E328:1.1	; [ 0 0 ] ; C4E32C:-	; [ 0 0 6 ] ; C4E330:2.5	; [ 0 0 ] ; C4E334:*.	; [ 0 0 7 ] ; C48B84:16	; [ 0 0 7 ] ; C48B88:*>>	; [ 0 0 7 8 ] ; C48B8C:DUP	; [ 0 0 ] ; C48B90:63	; [ 0 0 0 ] ; C48B94:>>	; [ 0 0 0 9 ] ; C48B98:-	; [ 0 0 0 ] ; C4E338:sin	; [ 0 0 ] ; C4E33C:*.	; [ 0 0 ] ; C48B84:16	; [ 0 0 ] ; C48B88:*>>	; [ 0 0 A ] ; C48B8C:DUP	; [ 0 ] ; C48B90:63	; [ 0 0 ] ; C48B94:>>	; [ 0 0 B ] ; C48B98:-	; [ 0 0 ] ; C4E340:;	; [ 0 ] ;---------ANA;---------GEN; 0?or rax,raxjnz _o27; (; ;ret; )_o27:; 1.0; OPTN =?cmp rax,65536jne _o28; (; ;ret; )_o28:; DUPadd rbp,8mov [rbp],rax; 1.0; OPTN -sub rax,65536; 10; OPTN *imul rax,10; 2.0add rbp,8mov [rbp],raxmov rax,131072; SWAPxchg rax,[rbp]; SWAPxchg rax,[rbp]; ln.call w70; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; exp.call w7D; NEGneg rax; SWAPxchg rax,[rbp]; 1.1; OPTN -sub rax,72089; 2.5add rbp,8mov [rbp],raxmov rax,163840; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; sincall w54; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :Ela_Out  |1001492|e  ;  . I| calls:1 niv:1 len:25 ( a -- b )w2E1:;---------OPT; C4E344:0?	; [ 0 ] ; C4E348:(	; [ 0 ] ; C4E34C:;	; [ 0 ] ; C4E350:)	; [ 0 ] ; C4E354:1.0	; [ 0 ] ; C4E358:=?	; [ 0 0 ] ; C4E35C:(	; [ 0 ] ; C4E360:;	; [ 0 ] ; C4E364:)	; [ 0 ] ; C4E368:DUP	; [ 0 ] ; C4E36C:-10	; [ 0 0 ] ; C4E370:*	; [ 0 0 1 ] ; C4E374:2.0	; [ 0 0 ] ; C4E378:SWAP	; [ 0 0 2 ] ; C4E37C:pow.	; [ 0 2 0 ] ; C49808:SWAP	; [ 0 2 0 ] ; C4980C:ln.	; [ 0 0 2 ] ; C49810:*.	; [ 0 0 0 ] ; C48B84:16	; [ 0 0 0 ] ; C48B88:*>>	; [ 0 0 0 3 ] ; C48B8C:DUP	; [ 0 0 ] ; C48B90:63	; [ 0 0 0 ] ; C48B94:>>	; [ 0 0 0 4 ] ; C48B98:-	; [ 0 0 0 ] ; C49814:exp.	; [ 0 0 ] ; C4E380:SWAP	; [ 0 0 ] ; C4E384:0.1	; [ 0 0 ] ; C4E388:-	; [ 0 0 5 ] ; C4E38C:2.5	; [ 0 0 ] ; C4E390:*.	; [ 0 0 6 ] ; C48B84:16	; [ 0 0 6 ] ; C48B88:*>>	; [ 0 0 6 7 ] ; C48B8C:DUP	; [ 0 0 ] ; C48B90:63	; [ 0 0 0 ] ; C48B94:>>	; [ 0 0 0 8 ] ; C48B98:-	; [ 0 0 0 ] ; C4E394:sin	; [ 0 0 ] ; C4E398:*.	; [ 0 0 ] ; C48B84:16	; [ 0 0 ] ; C48B88:*>>	; [ 0 0 9 ] ; C48B8C:DUP	; [ 0 ] ; C48B90:63	; [ 0 0 ] ; C48B94:>>	; [ 0 0 A ] ; C48B98:-	; [ 0 0 ] ; C4E39C:1.0	; [ 0 ] ; C4E3A0:+	; [ 0 B ] ; C4E3A4:;	; [ 0 ] ;---------ANA;---------GEN; 0?or rax,raxjnz _o29; (; ;ret; )_o29:; 1.0; OPTN =?cmp rax,65536jne _o2A; (; ;ret; )_o2A:; DUPadd rbp,8mov [rbp],rax; -10; OPTN *imul rax,-10; 2.0add rbp,8mov [rbp],raxmov rax,131072; SWAPxchg rax,[rbp]; SWAPxchg rax,[rbp]; ln.call w70; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; exp.call w7D; SWAPxchg rax,[rbp]; 0.1; OPTN -sub rax,6553; 2.5add rbp,8mov [rbp],raxmov rax,163840; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; sincall w54; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; 1.0; OPTN +add rax,65536; ;ret;--------------------------; :Ela_InOut  |2003096|e' ;  .  | calls:3 niv:2 len:18 ( a -- b )w2E2:;---------OPT; C4E3A8:1	; [ 0 ] ; C4E3AC:<<	; [ 0 0 ] ; C4E3B0:1.0	; [ 0 ] ; C4E3B4:<?	; [ 0 1 ] ; C4E3B8:(	; [ 0 ] ; C4E3BC:Ela_In	; [ 0 ] ; C4E3C0:1	; [ 0 ] ; C4E3C4:>>	; [ 0 2 ] ; C4E3C8:;	; [ 0 ] ; C4E3CC:)	; [ 0 ] ; C4E3D0:1.0	; [ 0 ] ; C4E3D4:-	; [ 0 3 ] ; C4E3D8:Ela_Out	; [ 0 ] ; C4E3DC:1	; [ 0 ] ; C4E3E0:>>	; [ 0 4 ] ; C4E3E4:0.5	; [ 0 ] ; C4E3E8:+	; [ 0 5 ] ; C4E3EC:;	; [ 0 ] ;---------ANA;---------GEN; 1; OPTN <<shl rax,1; 1.0; OPTN <?cmp rax,65536jge _o2B; (; Ela_Incall w2E0; 1; OPTN >>sar rax,1; ;ret; )_o2B:; 1.0; OPTN -sub rax,65536; Ela_Outcall w2E1; 1; OPTN >>sar rax,1; 0.5; OPTN +add rax,32768; ;ret;--------------------------; :dtime  |2001480|l     . I| calls:1 niv:2 len:9 (  --  )w311:;---------OPT; C4F118:msec	; [ ] ; C4A628:GetTickCount	; [ ] ; C48808:sys-GetTickCount	; [ ] ; C4880C:SYS0	; [ 1A ] ; C4F11C:DUP	; [ 1A ] ; C4F120:prevt	; [ 1A 1A ] ; C4F124:-	; [ 1A 1A 30E ] ; C4F128:'timenow	; [ 1A 1A ] ; C4F12C:+!	; [ 1A 1A 30F ] ; C4F130:'prevt	; [ 1A ] ; C4F134:!	; [ 1A 30E ] ; C4F138:;	; [ ] ;---------ANA;---------GEN; sys-GetTickCountadd rbp,8mov [rbp],raxmov rax,qword[w1A]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DUPadd rbp,8mov [rbp],rax; prevt; OPTV -sub rax,qword[w30E]; 'timenow; OPTAV +!add [w30F],raxmov rax,[rbp]sub rbp,8; 'prevt; OPTAV !mov qword[w30E],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :timeline.clear  |1001482|e     . I| calls:1 niv:1 len:16 (  --  )w315:;---------OPT; C4F148:'fxp	; [ ] ; C4F14C:p.clear	; [ 30D ] ; C4DC18:DUP	; [ 30D ] ; C4DC1C:8	; [ 30D 30D ] ; C4DC20:+	; [ 30D 30D 0 ] ; C4DC24:@	; [ 30D 30D ] ; C4DC28:SWAP	; [ 30D 30D ] ; C4DC2C:!	; [ 30D 30D ] ; C4F150:'fx	; [ ] ; C4F154:p.clear	; [ 30C ] ; C4DC18:DUP	; [ 30C ] ; C4DC1C:8	; [ 30C 30C ] ; C4DC20:+	; [ 30C 30C 1 ] ; C4DC24:@	; [ 30C 30C ] ; C4DC28:SWAP	; [ 30C 30C ] ; C4DC2C:!	; [ 30C 30C ] ; C4F158:'screen	; [ ] ; C4F15C:p.clear	; [ 30B ] ; C4DC18:DUP	; [ 30B ] ; C4DC1C:8	; [ 30B 30B ] ; C4DC20:+	; [ 30B 30B 2 ] ; C4DC24:@	; [ 30B 30B ] ; C4DC28:SWAP	; [ 30B 30B ] ; C4DC2C:!	; [ 30B 30B ] ; C4F160:timeline	; [ ] ; INLINE CTE; C4F164:DUP	; [ 3 ] ; C4F168:'timeline>	; [ 3 3 ] ; C4F16C:!	; [ 3 3 314 ] ; C4F170:'timeline<	; [ 3 ] ; C4F174:!	; [ 3 313 ] ; C4F178:0	; [ ] ; C4F17C:'endtimeline	; [ 4 ] ; C4F180:!	; [ 4 30A ] ; C4F184:;	; [ ] ;---------ANA;---------GEN; 'fxpadd rbp,8mov [rbp],raxmov rax,w30D; DUPadd rbp,8mov [rbp],rax; 8; OPTN +add rax,8; @mov rax,qword[rax]; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 'fxadd rbp,8mov [rbp],raxmov rax,w30C; DUPadd rbp,8mov [rbp],rax; 8; OPTN +add rax,8; @mov rax,qword[rax]; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 'screenadd rbp,8mov [rbp],raxmov rax,w30B; DUPadd rbp,8mov [rbp],rax; 8; OPTN +add rax,8; @mov rax,qword[rax]; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; DUPadd rbp,8mov [rbp],rax; 'timeline>; OPTAV !mov qword[w314],raxmov rax,[rbp]sub rbp,8; 'timeline<; OPTAV !mov qword[w313],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'endtimeline; OPTAV !mov qword[w30A],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :searchless  |1090|l  ;  .  | calls:1 niv:0 len:20 ( ab -- cd )w316:;---------OPT; C4F188:(	; [ 1 0 ] ; C4F18C:32	; [ 1 0 ] ; C4F190:-	; [ 1 0 0 ] ; C4F194:timeline	; [ 1 0 ] ; INLINE CTE; C4F198:>=?	; [ 1 0 1 ] ; C4F19C:DUP	; [ 1 0 ] ; C4F1A0:@	; [ 1 0 0 ] ; C4F1A4:PICK2	; [ 1 0 0 ] ; C4F1A8:<=?	; [ 1 0 0 1 ] ; C4F1AC:(	; [ 1 0 0 ] ; C4F1B0:DROP	; [ 1 0 0 ] ; C4F1B4:32	; [ 1 0 ] ; C4F1B8:+	; [ 1 0 2 ] ; C4F1BC:;	; [ 1 0 ] ; C4F1C0:)	; [ 1 0 ] ; C4F1C4:DROP	; [ 1 0 0 ] ; C4F1C8:)	; [ 1 0 ] ; C4F1CC:32	; [ 1 0 ] ; C4F1D0:+	; [ 1 0 3 ] ; C4F1D4:;	; [ 1 0 ] ;---------ANA;---------GEN; (_i2C:; 32; OPTN -sub rax,32; 0; OPTN >=?cmp rax,0jl _o2C; DUPadd rbp,8mov [rbp],rax; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; <=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjg _o2D; (; DROPmov rax,[rbp]sub rbp,8; 32; OPTN +add rax,32; ;ret; )_o2D:; DROPmov rax,[rbp]sub rbp,8; )jmp _i2C_o2C:; 32; OPTN +add rax,32; ;ret;--------------------------; :+tline  |1006480|l     . I| calls:6 niv:1 len:24 ( abcd --  )w317:;---------OPT; C4F1D8:1000	; [ 3 2 1 0 ] ; C4F1DC:*.	; [ 3 2 1 0 0 ] ; C48B84:16	; [ 3 2 1 0 0 ] ; C48B88:*>>	; [ 3 2 1 0 0 1 ] ; C48B8C:DUP	; [ 3 2 1 0 ] ; C48B90:63	; [ 3 2 1 0 0 ] ; C48B94:>>	; [ 3 2 1 0 0 2 ] ; C48B98:-	; [ 3 2 1 0 0 ] ; C4F1E0:timeline>	; [ 3 2 1 0 ] ; C4F1E4:searchless	; [ 3 2 1 0 314 ] ; C4F1E8:DUP	; [ 3 2 1 1 0 ] ; C4F1EC:DUP	; [ 3 2 1 1 0 0 ] ; C4F1F0:32	; [ 3 2 1 1 0 0 0 ] ; C4F1F4:+	; [ 3 2 1 1 0 0 0 3 ] ; C4F1F8:SWAP	; [ 3 2 1 1 0 0 0 ] ; C4F1FC:timeline>	; [ 3 2 1 1 0 0 0 ] ; C4F200:OVER	; [ 3 2 1 1 0 0 0 314 ] ; C4F204:-	; [ 3 2 1 1 0 0 0 314 0 ] ; C4F208:2	; [ 3 2 1 1 0 0 0 314 ] ; C4F20C:>>	; [ 3 2 1 1 0 0 0 314 4 ] ; C4F210:MOVE>	; [ 3 2 1 1 0 0 0 314 ] ; C4F214:>A	; [ 3 2 1 1 0 ] ; C4F218:A!+	; [ 3 2 1 1 ] ; C4F21C:A!+	; [ 3 2 1 ] ; C4F220:A!+	; [ 3 2 ] ; C4F224:A!	; [ 3 ] ; C4F228:32	; [ ] ; C4F22C:'timeline>	; [ 5 ] ; C4F230:+!	; [ 5 314 ] ; C4F234:;	; [ ] ;---------ANA;---------GEN; 1000add rbp,8mov [rbp],raxmov rax,1000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; timeline>add rbp,8mov [rbp],raxmov rax,qword[w314]; searchlesscall w316; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 32; OPTN +add rax,32; SWAPxchg rax,[rbp]; timeline>add rbp,8mov [rbp],raxmov rax,qword[w314]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 2; OPTN >>sar rax,2; MOVE>mov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]lea rsi,[rsi+rcx*8-8]lea rdi,[rdi+rcx*8-8]stdrep movsqcldmov rax,[rbp-8*2]sub rbp,8*3; >Amov r14,raxmov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; 32add rbp,8mov [rbp],raxmov rax,32; 'timeline>; OPTAV +!add [w314],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :tictline  |1001090|l  ;  .  | calls:1 niv:1 len:28 (  --  )w318:;---------OPT; C4F238:timeline<	; [ ] ; C4F23C:timenow	; [ 313 ] ; C4F240:(	; [ 313 30F ] ; C4F244:OVER	; [ 313 30F ] ; C4F248:timeline>	; [ 313 30F 313 ] ; C4F24C:=?	; [ 313 30F 313 314 ] ; C4F250:(	; [ 313 30F 313 ] ; C4F254:'timeline<	; [ 313 30F 313 ] ; C4F258:!	; [ 313 30F 313 313 ] ; C4F25C:2DROP	; [ 313 30F ] ; C4F260:;	; [ ] ; C4F264:)	; [ ] ; C4F268:@	; [ 313 30F 313 ] ; C4F26C:>=?	; [ 313 30F 313 ] ; C4F270:SWAP	; [ 313 30F ] ; C4F274:DUP	; [ 30F 313 ] ; C4F278:8	; [ 30F 313 313 ] ; C4F27C:+	; [ 30F 313 313 0 ] ; C4F280:@	; [ 30F 313 313 ] ; C4F284:EX	; [ 30F 313 313 ] ; C4F288:32	; [ 30F 313 313 ] ; C4F28C:+	; [ 30F 313 313 1 ] ; C4F290:SWAP	; [ 30F 313 313 ] ; C4F294:)	; [ 30F 313 313 ] ; C4F298:DROP	; [ 313 30F ] ; C4F29C:'timeline<	; [ 313 ] ; C4F2A0:!	; [ 313 313 ] ; C4F2A4:;	; [ ] ;---------ANA;---------GEN; timeline<add rbp,8mov [rbp],raxmov rax,qword[w313]; timenowadd rbp,8mov [rbp],raxmov rax,qword[w30F]; (_i2E:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; timeline>; OPTV =?cmp rax,qword[w314]jne _o2F; (; 'timeline<; OPTAV !mov qword[w313],raxmov rax,[rbp]sub rbp,8; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o2F:; @mov rax,qword[rax]; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o2E; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 8; OPTN +add rax,8; @mov rax,qword[rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 32; OPTN +add rax,32; SWAPxchg rax,[rbp]; )jmp _i2E_o2E:; DROPmov rax,[rbp]sub rbp,8; 'timeline<; OPTAV !mov qword[w313],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :evt.restart  |3001484|l'    . I| calls:1 niv:3 len:7 (  --  )w319:;---------OPT; C4F2A8:'fx	; [ ] ; C4F2AC:p.clear	; [ 30C ] ; C4DC18:DUP	; [ 30C ] ; C4DC1C:8	; [ 30C 30C ] ; C4DC20:+	; [ 30C 30C 0 ] ; C4DC24:@	; [ 30C 30C ] ; C4DC28:SWAP	; [ 30C 30C ] ; C4DC2C:!	; [ 30C 30C ] ; C4F2B0:timeline	; [ ] ; INLINE CTE; C4F2B4:'timeline<	; [ 1 ] ; C4F2B8:!	; [ 1 313 ] ; C4F2BC:timeline.start	; [ ] ; C4F0FC:msec	; [ ] ; C4A628:GetTickCount	; [ ] ; C48808:sys-GetTickCount	; [ ] ; C4880C:SYS0	; [ 1A ] ; C4F100:'prevt	; [ 1A ] ; C4F104:!	; [ 1A 30E ] ; C4F108:0	; [ ] ; C4F10C:'timenow	; [ 2 ] ; C4F110:!	; [ 2 30F ] ; C4F2C0:;	; [ ] ;---------ANA;---------GEN; 'fxadd rbp,8mov [rbp],raxmov rax,w30C; DUPadd rbp,8mov [rbp],rax; 8; OPTN +add rax,8; @mov rax,qword[rax]; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; 'timeline<; OPTAV !mov qword[w313],raxmov rax,[rbp]sub rbp,8; sys-GetTickCountadd rbp,8mov [rbp],raxmov rax,qword[w1A]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; 'prevt; OPTAV !mov qword[w30E],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'timenow; OPTAV !mov qword[w30F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :xywh%64  |1010482|e     . I| calls:16 niv:1 len:25 ( abcd -- e )w320:;---------OPT; C4F388:h%	; [ 3 2 1 0 ] ; C4F378:sh	; [ 3 2 1 0 ] ; C4F37C:16	; [ 3 2 1 0 23F ] ; C4F380:*>>	; [ 3 2 1 0 23F 0 ] ; C4F38C:$ffff	; [ 3 2 1 0 ] ; C4F390:AND	; [ 3 2 1 0 1 ] ; C4F394:SWAP	; [ 3 2 1 0 ] ; C4F398:w%	; [ 3 2 0 1 ] ; C4F368:sw	; [ 3 2 0 1 ] ; C4F36C:16	; [ 3 2 0 1 23E ] ; C4F370:*>>	; [ 3 2 0 1 23E 2 ] ; C4F39C:$ffff	; [ 3 2 0 1 ] ; C4F3A0:AND	; [ 3 2 0 1 3 ] ; C4F3A4:16	; [ 3 2 0 1 ] ; C4F3A8:<<	; [ 3 2 0 1 4 ] ; C4F3AC:OR	; [ 3 2 0 1 ] ; C4F3B0:SWAP	; [ 3 2 0 ] ; C4F3B4:h%	; [ 3 0 2 ] ; C4F378:sh	; [ 3 0 2 ] ; C4F37C:16	; [ 3 0 2 23F ] ; C4F380:*>>	; [ 3 0 2 23F 5 ] ; C4F3B8:$ffff	; [ 3 0 2 ] ; C4F3BC:AND	; [ 3 0 2 6 ] ; C4F3C0:32	; [ 3 0 2 ] ; C4F3C4:<<	; [ 3 0 2 7 ] ; C4F3C8:OR	; [ 3 0 2 ] ; C4F3CC:SWAP	; [ 3 0 ] ; C4F3D0:w%	; [ 0 3 ] ; C4F368:sw	; [ 0 3 ] ; C4F36C:16	; [ 0 3 23E ] ; C4F370:*>>	; [ 0 3 23E 8 ] ; C4F3D4:$ffff	; [ 0 3 ] ; C4F3D8:AND	; [ 0 3 9 ] ; C4F3DC:48	; [ 0 3 ] ; C4F3E0:<<	; [ 0 3 A ] ; C4F3E4:OR	; [ 0 3 ] ; C4F3E8:;	; [ 0 ] ;---------ANA;---------GEN; shadd rbp,8mov [rbp],raxmov rax,qword[w23F]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; swadd rbp,8mov [rbp],raxmov rax,qword[w23E]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; $ffff; OPTN ANDand rax,65535; 16; OPTN <<shl rax,16; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; shadd rbp,8mov [rbp],raxmov rax,qword[w23F]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; $ffff; OPTN ANDand rax,65535; 32; OPTN <<shl rax,32; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; swadd rbp,8mov [rbp],raxmov rax,qword[w23E]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; $ffff; OPTN ANDand rax,65535; 48; OPTN <<shl rax,48; ORor rax,[rbp]sub rbp,8; ;ret;--------------------------; :64box  |4082|e     .  | calls:4 niv:0 len:30 ( ab --  )w327:;---------OPT; C4F500:SWAP	; [ 1 0 ] ; C4F504:DUP	; [ 0 1 ] ; C4F508:48	; [ 0 1 1 ] ; C4F50C:>>	; [ 0 1 1 0 ] ; C4F510:ROT	; [ 0 1 1 ] ; C4F514:D!+	; [ 1 1 0 ] ; C4F518:SWAP	; [ 1 1 ] ; C4F51C:DUP	; [ 1 1 ] ; C4F520:16	; [ 1 1 1 ] ; C4F524:<<	; [ 1 1 1 1 ] ; C4F528:48	; [ 1 1 1 ] ; C4F52C:>>	; [ 1 1 1 2 ] ; C4F530:ROT	; [ 1 1 1 ] ; C4F534:D!+	; [ 1 1 1 ] ; C4F538:SWAP	; [ 1 1 ] ; C4F53C:DUP	; [ 1 1 ] ; C4F540:32	; [ 1 1 1 ] ; C4F544:<<	; [ 1 1 1 3 ] ; C4F548:48	; [ 1 1 1 ] ; C4F54C:>>	; [ 1 1 1 4 ] ; C4F550:ROT	; [ 1 1 1 ] ; C4F554:D!+	; [ 1 1 1 ] ; C4F558:SWAP	; [ 1 1 ] ; C4F55C:48	; [ 1 1 ] ; C4F560:<<	; [ 1 1 5 ] ; C4F564:48	; [ 1 1 ] ; C4F568:>>	; [ 1 1 6 ] ; C4F56C:SWAP	; [ 1 1 ] ; C4F570:D!	; [ 1 1 ] ; C4F574:;	; [ ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 48; OPTN >>sar rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN <<shl rax,16; 48; OPTN >>sar rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 32; OPTN <<shl rax,32; 48; OPTN >>sar rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; SWAPxchg rax,[rbp]; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; SWAPxchg rax,[rbp]; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :drawbox  |1001494|l' ;  . I| calls:1 niv:1 len:35 ( a --  )w32C:;---------OPT; C4F6E4:>B	; [ 0 ] ; C4F6E8:B@+	; [ ] ; C4F6EC:1	; [ 0 ] ; C4F6F0:and?	; [ 0 0 ] ; C4F6F4:(	; [ 0 ] ; C4F6F8:DROP	; [ 0 ] ; C4F6FC:;	; [ ] ; C4F700:)	; [ ] ; C4F704:SDLrenderer	; [ 0 ] ; C4F708:SWAP	; [ 0 23D ] ; C4F70C:DUP	; [ 23D 0 ] ; C4F710:24	; [ 23D 0 0 ] ; C4F714:>>	; [ 23D 0 0 1 ] ; C4F718:$ff	; [ 23D 0 0 ] ; C4F71C:AND	; [ 23D 0 0 2 ] ; C4F720:SWAP	; [ 23D 0 0 ] ; C4F724:DUP	; [ 23D 0 0 ] ; C4F728:16	; [ 23D 0 0 0 ] ; C4F72C:>>	; [ 23D 0 0 0 3 ] ; C4F730:$ff	; [ 23D 0 0 0 ] ; C4F734:AND	; [ 23D 0 0 0 4 ] ; C4F738:SWAP	; [ 23D 0 0 0 ] ; C4F73C:8	; [ 23D 0 0 0 ] ; C4F740:>>	; [ 23D 0 0 0 5 ] ; C4F744:$ff	; [ 23D 0 0 0 ] ; C4F748:AND	; [ 23D 0 0 0 6 ] ; C4F74C:$ff	; [ 23D 0 0 0 ] ; C4F750:SDL_SetRenderDrawColor	; [ 23D 0 0 0 7 ] ; C4C4B8:sys-SDL_SetRenderDrawColor	; [ 23D 0 0 0 7 ] ; C4C4BC:SYS5	; [ 23D 0 0 0 7 1EE ] ; C4C4C0:DROP	; [ 23D ] ; C4F754:B@	; [ ] ; C4F758:'sdlbox	; [ 0 ] ; C4F75C:64box	; [ 0 326 ] ; C4F760:SDLrenderer	; [ ] ; C4F764:'sdlbox	; [ 23D ] ; C4F768:SDL_RenderFillRect	; [ 23D 326 ] ; C4C584:sys-SDL_RenderFillRect	; [ 23D 326 ] ; C4C588:SYS2	; [ 23D 326 1FD ] ; C4C58C:DROP	; [ 23D ] ; C4F76C:;	; [ ] ;---------ANA;---------GEN; >Bmov r15,raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 1; OPTN and?test rax,1jz _o30; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o30:; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 24; OPTN >>sar rax,24; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; sys-SDL_SetRenderDrawColoradd rbp,8mov [rbp],raxmov rax,qword[w1EE]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; B@add rbp,8mov [rbp],raxmov rax,qword[r15]; 'sdlboxadd rbp,8mov [rbp],raxmov rax,w326; 64boxcall w327; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; 'sdlboxadd rbp,8mov [rbp],raxmov rax,w326; sys-SDL_RenderFillRectadd rbp,8mov [rbp],raxmov rax,qword[w1FD]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+box  |1002482|e     . I| calls:2 niv:1 len:11 ( ab --  )w32D:;---------OPT; C4F770:'drawbox	; [ 1 0 ] ; C4F774:'screen	; [ 1 0 32C ] ; C4F778:p!+	; [ 1 0 32C 30B ] ; C4DC34:DUP	; [ 1 0 32C 30B ] ; C4DC38:>R	; [ 1 0 32C 30B 30B ] ; C4DC3C:@	; [ 1 0 32C 30B ] ; C4DC40:!+	; [ 1 0 32C 30B ] ; C4DC44:64	; [ 1 0 32C ] ; C4DC48:R>	; [ 1 0 32C 0 ] ; C4DC4C:+!	; [ 1 0 32C 0 0 ] ; C4F77C:>A	; [ 1 0 32C ] ; C4F780:8	; [ 1 0 ] ; C4F784:<<	; [ 1 0 1 ] ; C4F788:1	; [ 1 0 ] ; C4F78C:OR	; [ 1 0 2 ] ; C4F790:A!+	; [ 1 0 ] ; C4F794:A!+	; [ 1 ] ; C4F798:;	; [ ] ;---------ANA;---------GEN; 'drawboxadd rbp,8mov [rbp],raxmov rax,w32C; 'screenadd rbp,8mov [rbp],raxmov rax,w30B; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; 1; OPTN ORor rax,1; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drawimg  |1001494|l' ;  . I| calls:1 niv:1 len:23 ( a --  )w32E:;---------OPT; C4F79C:>B	; [ 0 ] ; C4F7A0:B@+	; [ ] ; C4F7A4:1	; [ 0 ] ; C4F7A8:and?	; [ 0 0 ] ; C4F7AC:(	; [ 0 ] ; C4F7B0:DROP	; [ 0 ] ; C4F7B4:;	; [ ] ; C4F7B8:)	; [ ] ; C4F7BC:DROP	; [ 0 ] ; C4F7C0:B@+	; [ ] ; C4F7C4:'sdlbox	; [ 0 ] ; C4F7C8:64box	; [ 0 326 ] ; C4F7CC:SDLrenderer	; [ ] ; C4F7D0:B@+	; [ 23D ] ; C4F7D4:0?	; [ 23D 23D ] ; C4F7D8:(	; [ 23D 23D ] ; C4F7DC:2DROP	; [ 23D 23D ] ; C4F7E0:;	; [ ] ; C4F7E4:)	; [ ] ; C4F7E8:0	; [ 23D 23D ] ; C4F7EC:'sdlbox	; [ 23D 23D 1 ] ; C4F7F0:SDL_RenderCopy	; [ 23D 23D 1 326 ] ; C4C47C:sys-SDL_RenderCopy	; [ 23D 23D 1 326 ] ; C4C480:SYS4	; [ 23D 23D 1 326 1EB ] ; C4C484:DROP	; [ 23D ] ; C4F7F4:;	; [ ] ;---------ANA;---------GEN; >Bmov r15,raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 1; OPTN and?test rax,1jz _o31; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o31:; DROPmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 'sdlboxadd rbp,8mov [rbp],raxmov rax,w326; 64boxcall w327; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 0?or rax,raxjnz _o32; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o32:; 0add rbp,8mov [rbp],raxxor rax,rax; 'sdlboxadd rbp,8mov [rbp],raxmov rax,w326; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w1EB]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+img  |1001482|e     . I| calls:1 niv:1 len:19 ( ab --  )w330:;---------OPT; C4F7FC:'drawimg	; [ 1 0 ] ; C4F800:'screen	; [ 1 0 32E ] ; C4F804:p!+	; [ 1 0 32E 30B ] ; C4DC34:DUP	; [ 1 0 32E 30B ] ; C4DC38:>R	; [ 1 0 32E 30B 30B ] ; C4DC3C:@	; [ 1 0 32E 30B ] ; C4DC40:!+	; [ 1 0 32E 30B ] ; C4DC44:64	; [ 1 0 32E ] ; C4DC48:R>	; [ 1 0 32E 0 ] ; C4DC4C:+!	; [ 1 0 32E 0 0 ] ; C4F808:>A	; [ 1 0 32E ] ; C4F80C:1	; [ 1 0 ] ; C4F810:A!+	; [ 1 0 1 ] ; C4F814:A!+	; [ 1 0 ] ; C4F818:DUP	; [ 1 ] ; C4F81C:0	; [ 1 1 ] ; C4F820:0	; [ 1 1 2 ] ; C4F824:'imgwh	; [ 1 1 2 3 ] ; C4F828:DUP	; [ 1 1 2 3 32F ] ; C4F82C:4	; [ 1 1 2 3 32F 32F ] ; C4F830:+	; [ 1 1 2 3 32F 32F 4 ] ; C4F834:SDL_QueryTexture	; [ 1 1 2 3 32F 32F ] ; C4C424:sys-SDL_QueryTexture	; [ 1 1 2 3 32F 32F ] ; C4C428:SYS5	; [ 1 1 2 3 32F 32F 1F0 ] ; C4C42C:DROP	; [ 1 1 ] ; C4F838:A!+	; [ 1 ] ; C4F83C:imgwh	; [ ] ; C4F840:A!	; [ 32F ] ; C4F844:;	; [ ] ;---------ANA;---------GEN; 'drawimgadd rbp,8mov [rbp],raxmov rax,w32E; 'screenadd rbp,8mov [rbp],raxmov rax,w30B; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; 1; OPTN A!+mov qword[r14],1add r14,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 'imgwhadd rbp,8mov [rbp],raxmov rax,w32F; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; sys-SDL_QueryTextureadd rbp,8mov [rbp],raxmov rax,qword[w1F0]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; imgwh; OPTV A!mov rbx,qword[w32F]mov qword[r14],rbx; ;ret;--------------------------; :drawtxt  |1001494|l' ;  . I| calls:1 niv:1 len:21 ( a --  )w333:;---------OPT; C4F8FC:>B	; [ 0 ] ; C4F900:B@+	; [ ] ; C4F904:1	; [ 0 ] ; C4F908:and?	; [ 0 0 ] ; C4F90C:(	; [ 0 ] ; C4F910:DROP	; [ 0 ] ; C4F914:;	; [ ] ; C4F918:)	; [ ] ; C4F91C:DROP	; [ 0 ] ; C4F920:B@+	; [ ] ; C4F924:'sdlbox	; [ 0 ] ; C4F928:64box	; [ 0 326 ] ; C4F92C:B@+	; [ ] ; C4F930:'sdlbin	; [ 0 ] ; C4F934:64box	; [ 0 325 ] ; C4F938:SDLrenderer	; [ ] ; C4F93C:B@	; [ 23D ] ; C4F940:'sdlbin	; [ 23D 23D ] ; C4F944:'sdlbox	; [ 23D 23D 325 ] ; C4F948:SDL_RenderCopy	; [ 23D 23D 325 326 ] ; C4C47C:sys-SDL_RenderCopy	; [ 23D 23D 325 326 ] ; C4C480:SYS4	; [ 23D 23D 325 326 1EB ] ; C4C484:DROP	; [ 23D ] ; C4F94C:;	; [ ] ;---------ANA;---------GEN; >Bmov r15,raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 1; OPTN and?test rax,1jz _o33; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o33:; DROPmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 'sdlboxadd rbp,8mov [rbp],raxmov rax,w326; 64boxcall w327; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 'sdlbinadd rbp,8mov [rbp],raxmov rax,w325; 64boxcall w327; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; B@add rbp,8mov [rbp],raxmov rax,qword[r15]; 'sdlbinadd rbp,8mov [rbp],raxmov rax,w325; 'sdlboxadd rbp,8mov [rbp],raxmov rax,w326; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w1EB]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+txt  |1001482|e     . I| calls:1 niv:1 len:10 ( abc --  )w334:;---------OPT; C4F950:'drawtxt	; [ 2 1 0 ] ; C4F954:'screen	; [ 2 1 0 333 ] ; C4F958:p!+	; [ 2 1 0 333 30B ] ; C4DC34:DUP	; [ 2 1 0 333 30B ] ; C4DC38:>R	; [ 2 1 0 333 30B 30B ] ; C4DC3C:@	; [ 2 1 0 333 30B ] ; C4DC40:!+	; [ 2 1 0 333 30B ] ; C4DC44:64	; [ 2 1 0 333 ] ; C4DC48:R>	; [ 2 1 0 333 0 ] ; C4DC4C:+!	; [ 2 1 0 333 0 0 ] ; C4F95C:>A	; [ 2 1 0 333 ] ; C4F960:0	; [ 2 1 0 ] ; C4F964:A!+	; [ 2 1 0 1 ] ; C4F968:A!+	; [ 2 1 0 ] ; C4F96C:A!+	; [ 2 1 ] ; C4F970:A!	; [ 2 ] ; C4F974:;	; [ ] ;---------ANA;---------GEN; 'drawtxtadd rbp,8mov [rbp],raxmov rax,w333; 'screenadd rbp,8mov [rbp],raxmov rax,w30B; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; 0; OPTN A!+mov qword[r14],0add r14,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :evt.play  |1001484|l'    . I| calls:1 niv:1 len:9 ( a -- b )w339:;---------OPT; C4FAC0:-1	; [ 0 ] ; C4FAC4:OVER	; [ 0 0 ] ; C4FAC8:16	; [ 0 0 0 ] ; C4FACC:+	; [ 0 0 0 1 ] ; C4FAD0:@	; [ 0 0 0 ] ; C4FAD4:0	; [ 0 0 0 ] ; C4FAD8:-1	; [ 0 0 0 2 ] ; C4FADC:Mix_PlayChannelTimed	; [ 0 0 0 2 3 ] ; C4D9D0:sys-Mix_PlayChannelTimed	; [ 0 0 0 2 3 ] ; C4D9D4:SYS4	; [ 0 0 0 2 3 29B ] ; C4D9D8:DROP	; [ 0 0 ] ; C4FAE0:;	; [ 0 ] ;---------ANA;---------GEN; -1add rbp,8mov [rbp],raxmov rax,-1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 16; OPTN +add rax,16; @mov rax,qword[rax]; 0add rbp,8mov [rbp],raxxor rax,rax; -1add rbp,8mov [rbp],raxmov rax,-1; sys-Mix_PlayChannelTimedadd rbp,8mov [rbp],raxmov rax,qword[w29B]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :evt.on  |1084|l'    .  | calls:1 niv:0 len:14 ( a -- b )w340:;---------OPT; C4FB6C:DUP	; [ 0 ] ; C4FB70:16	; [ 0 0 ] ; C4FB74:+	; [ 0 0 0 ] ; C4FB78:@	; [ 0 0 ] ; C4FB7C:8	; [ 0 0 ] ; C4FB80:+	; [ 0 0 1 ] ; C4FB84:DUP	; [ 0 0 ] ; C4FB88:@	; [ 0 0 0 ] ; C4FB8C:1	; [ 0 0 0 ] ; C4FB90:NOT	; [ 0 0 0 2 ] ; C4FB94:AND	; [ 0 0 0 2 ] ; C4FB98:SWAP	; [ 0 0 0 ] ; C4FB9C:!	; [ 0 0 0 ] ; C4FBA0:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 16; OPTN +add rax,16; @mov rax,qword[rax]; 8; OPTN +add rax,8; DUPadd rbp,8mov [rbp],rax; @mov rax,qword[rax]; $FFFFFFFFFFFFFFFE ; calc; OPTC ANDand rax,-2; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :evt.off  |1084|l'    .  | calls:1 niv:0 len:13 ( a -- b )w342:;---------OPT; C4FBC0:DUP	; [ 0 ] ; C4FBC4:16	; [ 0 0 ] ; C4FBC8:+	; [ 0 0 0 ] ; C4FBCC:@	; [ 0 0 ] ; C4FBD0:8	; [ 0 0 ] ; C4FBD4:+	; [ 0 0 1 ] ; C4FBD8:DUP	; [ 0 0 ] ; C4FBDC:@	; [ 0 0 0 ] ; C4FBE0:1	; [ 0 0 0 ] ; C4FBE4:OR	; [ 0 0 0 2 ] ; C4FBE8:SWAP	; [ 0 0 0 ] ; C4FBEC:!	; [ 0 0 0 ] ; C4FBF0:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 16; OPTN +add rax,16; @mov rax,qword[rax]; 8; OPTN +add rax,8; DUPadd rbp,8mov [rbp],rax; @mov rax,qword[rax]; 1; OPTN ORor rax,1; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :setlastcoor  |1080|l     .  | calls:1 niv:0 len:70 (  --  )w345:;---------OPT; C4FC10:8	; [ ] ; C4FC14:A+	; [ 0 ] ; C4FC18:A@+	; [ ] ; C4FC1C:A@+	; [ 0 ] ; C4FC20:A@	; [ 0 0 ] ; C4FC24:DUP	; [ 0 0 0 ] ; C4FC28:48	; [ 0 0 0 0 ] ; C4FC2C:>>	; [ 0 0 0 0 1 ] ; C4FC30:PICK2	; [ 0 0 0 0 ] ; C4FC34:48	; [ 0 0 0 0 0 ] ; C4FC38:>>	; [ 0 0 0 0 0 2 ] ; C4FC3C:+	; [ 0 0 0 0 0 ] ; C4FC40:$ffff	; [ 0 0 0 0 ] ; C4FC44:AND	; [ 0 0 0 0 3 ] ; C4FC48:48	; [ 0 0 0 0 ] ; C4FC4C:<<	; [ 0 0 0 0 4 ] ; C4FC50:>R	; [ 0 0 0 0 ] ; C4FC54:DUP	; [ 0 0 0 ] ; C4FC58:16	; [ 0 0 0 0 ] ; C4FC5C:<<	; [ 0 0 0 0 5 ] ; C4FC60:48	; [ 0 0 0 0 ] ; C4FC64:>>	; [ 0 0 0 0 6 ] ; C4FC68:PICK2	; [ 0 0 0 0 ] ; C4FC6C:16	; [ 0 0 0 0 0 ] ; C4FC70:<<	; [ 0 0 0 0 0 7 ] ; C4FC74:48	; [ 0 0 0 0 0 ] ; C4FC78:>>	; [ 0 0 0 0 0 8 ] ; C4FC7C:+	; [ 0 0 0 0 0 ] ; C4FC80:$ffff	; [ 0 0 0 0 ] ; C4FC84:AND	; [ 0 0 0 0 9 ] ; C4FC88:32	; [ 0 0 0 0 ] ; C4FC8C:<<	; [ 0 0 0 0 A ] ; C4FC90:R>	; [ 0 0 0 0 ] ; C4FC94:OR	; [ 0 0 0 0 0 ] ; C4FC98:>R	; [ 0 0 0 0 ] ; C4FC9C:DUP	; [ 0 0 0 ] ; C4FCA0:32	; [ 0 0 0 0 ] ; C4FCA4:<<	; [ 0 0 0 0 B ] ; C4FCA8:48	; [ 0 0 0 0 ] ; C4FCAC:>>	; [ 0 0 0 0 C ] ; C4FCB0:PICK2	; [ 0 0 0 0 ] ; C4FCB4:32	; [ 0 0 0 0 0 ] ; C4FCB8:<<	; [ 0 0 0 0 0 D ] ; C4FCBC:48	; [ 0 0 0 0 0 ] ; C4FCC0:>>	; [ 0 0 0 0 0 E ] ; C4FCC4:+	; [ 0 0 0 0 0 ] ; C4FCC8:$ffff	; [ 0 0 0 0 ] ; C4FCCC:AND	; [ 0 0 0 0 F ] ; C4FCD0:16	; [ 0 0 0 0 ] ; C4FCD4:<<	; [ 0 0 0 0 10 ] ; C4FCD8:R>	; [ 0 0 0 0 ] ; C4FCDC:OR	; [ 0 0 0 0 0 ] ; C4FCE0:>R	; [ 0 0 0 0 ] ; C4FCE4:48	; [ 0 0 0 ] ; C4FCE8:<<	; [ 0 0 0 11 ] ; C4FCEC:48	; [ 0 0 0 ] ; C4FCF0:>>	; [ 0 0 0 12 ] ; C4FCF4:SWAP	; [ 0 0 0 ] ; C4FCF8:48	; [ 0 0 0 ] ; C4FCFC:<<	; [ 0 0 0 13 ] ; C4FD00:48	; [ 0 0 0 ] ; C4FD04:>>	; [ 0 0 0 14 ] ; C4FD08:+	; [ 0 0 0 ] ; C4FD0C:$ffff	; [ 0 0 ] ; C4FD10:AND	; [ 0 0 15 ] ; C4FD14:R>	; [ 0 0 ] ; C4FD18:OR	; [ 0 0 0 ] ; C4FD1C:SWAP	; [ 0 0 ] ; C4FD20:!	; [ 0 0 ] ; C4FD24:;	; [ ] ;---------ANA;---------GEN; 8; OPTN A+add r14,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; DUPadd rbp,8mov [rbp],rax; 48; OPTN >>sar rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 48; OPTN <<shl rax,48; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN <<shl rax,16; 48; OPTN >>sar rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN <<shl rax,16; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 32; OPTN <<shl rax,32; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN <<shl rax,32; 48; OPTN >>sar rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 32; OPTN <<shl rax,32; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 16; OPTN <<shl rax,16; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; SWAPxchg rax,[rbp]; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :boxanim  |1001494|l' ;  . I| calls:1 niv:1 len:94 ( a -- b )w346:;---------OPT; C4FD28:>A	; [ 0 ] ; C4FD2C:timenow	; [ ] ; C4FD30:A@+	; [ 30F ] ; C4FD34:-	; [ 30F 30F ] ; C4FD38:A@+	; [ 30F ] ; C4FD3C:*.	; [ 30F 30F ] ; C48B84:16	; [ 30F 30F ] ; C48B88:*>>	; [ 30F 30F 0 ] ; C48B8C:DUP	; [ 30F ] ; C48B90:63	; [ 30F 30F ] ; C48B94:>>	; [ 30F 30F 1 ] ; C48B98:-	; [ 30F 30F ] ; C4FD40:1.0	; [ 30F ] ; C4FD44:>=?	; [ 30F 2 ] ; C4FD48:(	; [ 30F ] ; C4FD4C:DROP	; [ 30F ] ; C4FD50:setlastcoor	; [ ] ; C4FD54:0	; [ ] ; C4FD58:;	; [ 3 ] ; C4FD5C:)	; [ 3 ] ; C4FD60:A@+	; [ 30F ] ; C4FD64:EX	; [ 30F 30F ] ; C4FD68:'t0	; [ 30F 30F ] ; C4FD6C:!	; [ 30F 30F 344 ] ; C4FD70:A@+	; [ 30F ] ; C4FD74:A@+	; [ 30F 30F ] ; C4FD78:A@	; [ 30F 30F 30F ] ; C4FD7C:DUP	; [ 30F 30F 30F 30F ] ; C4FD80:48	; [ 30F 30F 30F 30F 30F ] ; C4FD84:>>	; [ 30F 30F 30F 30F 30F 4 ] ; C4FD88:t0	; [ 30F 30F 30F 30F 30F ] ; C4FD8C:*.	; [ 30F 30F 30F 30F 30F 344 ] ; C48B84:16	; [ 30F 30F 30F 30F 30F 344 ] ; C48B88:*>>	; [ 30F 30F 30F 30F 30F 344 5 ] ; C48B8C:DUP	; [ 30F 30F 30F 30F 30F ] ; C48B90:63	; [ 30F 30F 30F 30F 30F 30F ] ; C48B94:>>	; [ 30F 30F 30F 30F 30F 30F 6 ] ; C48B98:-	; [ 30F 30F 30F 30F 30F 30F ] ; C4FD90:PICK2	; [ 30F 30F 30F 30F 30F ] ; C4FD94:48	; [ 30F 30F 30F 30F 30F 30F ] ; C4FD98:>>	; [ 30F 30F 30F 30F 30F 30F 7 ] ; C4FD9C:+	; [ 30F 30F 30F 30F 30F 30F ] ; C4FDA0:$ffff	; [ 30F 30F 30F 30F 30F ] ; C4FDA4:AND	; [ 30F 30F 30F 30F 30F 8 ] ; C4FDA8:48	; [ 30F 30F 30F 30F 30F ] ; C4FDAC:<<	; [ 30F 30F 30F 30F 30F 9 ] ; C4FDB0:>R	; [ 30F 30F 30F 30F 30F ] ; C4FDB4:DUP	; [ 30F 30F 30F 30F ] ; C4FDB8:16	; [ 30F 30F 30F 30F 30F ] ; C4FDBC:<<	; [ 30F 30F 30F 30F 30F A ] ; C4FDC0:48	; [ 30F 30F 30F 30F 30F ] ; C4FDC4:>>	; [ 30F 30F 30F 30F 30F B ] ; C4FDC8:t0	; [ 30F 30F 30F 30F 30F ] ; C4FDCC:*.	; [ 30F 30F 30F 30F 30F 344 ] ; C48B84:16	; [ 30F 30F 30F 30F 30F 344 ] ; C48B88:*>>	; [ 30F 30F 30F 30F 30F 344 C ] ; C48B8C:DUP	; [ 30F 30F 30F 30F 30F ] ; C48B90:63	; [ 30F 30F 30F 30F 30F 30F ] ; C48B94:>>	; [ 30F 30F 30F 30F 30F 30F D ] ; C48B98:-	; [ 30F 30F 30F 30F 30F 30F ] ; C4FDD0:PICK2	; [ 30F 30F 30F 30F 30F ] ; C4FDD4:16	; [ 30F 30F 30F 30F 30F 30F ] ; C4FDD8:<<	; [ 30F 30F 30F 30F 30F 30F E ] ; C4FDDC:48	; [ 30F 30F 30F 30F 30F 30F ] ; C4FDE0:>>	; [ 30F 30F 30F 30F 30F 30F F ] ; C4FDE4:+	; [ 30F 30F 30F 30F 30F 30F ] ; C4FDE8:$ffff	; [ 30F 30F 30F 30F 30F ] ; C4FDEC:AND	; [ 30F 30F 30F 30F 30F 10 ] ; C4FDF0:32	; [ 30F 30F 30F 30F 30F ] ; C4FDF4:<<	; [ 30F 30F 30F 30F 30F 11 ] ; C4FDF8:R>	; [ 30F 30F 30F 30F 30F ] ; C4FDFC:OR	; [ 30F 30F 30F 30F 30F 30F ] ; C4FE00:>R	; [ 30F 30F 30F 30F 30F ] ; C4FE04:DUP	; [ 30F 30F 30F 30F ] ; C4FE08:32	; [ 30F 30F 30F 30F 30F ] ; C4FE0C:<<	; [ 30F 30F 30F 30F 30F 12 ] ; C4FE10:48	; [ 30F 30F 30F 30F 30F ] ; C4FE14:>>	; [ 30F 30F 30F 30F 30F 13 ] ; C4FE18:t0	; [ 30F 30F 30F 30F 30F ] ; C4FE1C:*.	; [ 30F 30F 30F 30F 30F 344 ] ; C48B84:16	; [ 30F 30F 30F 30F 30F 344 ] ; C48B88:*>>	; [ 30F 30F 30F 30F 30F 344 14 ] ; C48B8C:DUP	; [ 30F 30F 30F 30F 30F ] ; C48B90:63	; [ 30F 30F 30F 30F 30F 30F ] ; C48B94:>>	; [ 30F 30F 30F 30F 30F 30F 15 ] ; C48B98:-	; [ 30F 30F 30F 30F 30F 30F ] ; C4FE20:PICK2	; [ 30F 30F 30F 30F 30F ] ; C4FE24:32	; [ 30F 30F 30F 30F 30F 30F ] ; C4FE28:<<	; [ 30F 30F 30F 30F 30F 30F 16 ] ; C4FE2C:48	; [ 30F 30F 30F 30F 30F 30F ] ; C4FE30:>>	; [ 30F 30F 30F 30F 30F 30F 17 ] ; C4FE34:+	; [ 30F 30F 30F 30F 30F 30F ] ; C4FE38:$ffff	; [ 30F 30F 30F 30F 30F ] ; C4FE3C:AND	; [ 30F 30F 30F 30F 30F 18 ] ; C4FE40:16	; [ 30F 30F 30F 30F 30F ] ; C4FE44:<<	; [ 30F 30F 30F 30F 30F 19 ] ; C4FE48:R>	; [ 30F 30F 30F 30F 30F ] ; C4FE4C:OR	; [ 30F 30F 30F 30F 30F 30F ] ; C4FE50:>R	; [ 30F 30F 30F 30F 30F ] ; C4FE54:48	; [ 30F 30F 30F 30F ] ; C4FE58:<<	; [ 30F 30F 30F 30F 1A ] ; C4FE5C:48	; [ 30F 30F 30F 30F ] ; C4FE60:>>	; [ 30F 30F 30F 30F 1B ] ; C4FE64:t0	; [ 30F 30F 30F 30F ] ; C4FE68:*.	; [ 30F 30F 30F 30F 344 ] ; C48B84:16	; [ 30F 30F 30F 30F 344 ] ; C48B88:*>>	; [ 30F 30F 30F 30F 344 1C ] ; C48B8C:DUP	; [ 30F 30F 30F 30F ] ; C48B90:63	; [ 30F 30F 30F 30F 30F ] ; C48B94:>>	; [ 30F 30F 30F 30F 30F 1D ] ; C48B98:-	; [ 30F 30F 30F 30F 30F ] ; C4FE6C:SWAP	; [ 30F 30F 30F 30F ] ; C4FE70:48	; [ 30F 30F 30F 30F ] ; C4FE74:<<	; [ 30F 30F 30F 30F 1E ] ; C4FE78:48	; [ 30F 30F 30F 30F ] ; C4FE7C:>>	; [ 30F 30F 30F 30F 1F ] ; C4FE80:+	; [ 30F 30F 30F 30F ] ; C4FE84:$ffff	; [ 30F 30F 30F ] ; C4FE88:AND	; [ 30F 30F 30F 20 ] ; C4FE8C:R>	; [ 30F 30F 30F ] ; C4FE90:OR	; [ 30F 30F 30F 30F ] ; C4FE94:SWAP	; [ 30F 30F 30F ] ; C4FE98:!	; [ 30F 30F 30F ] ; C4FE9C:;	; [ 30F ] ;---------ANA;---------GEN; >Amov r14,raxmov rax,[rbp]sub rbp,8; timenowadd rbp,8mov [rbp],raxmov rax,qword[w30F]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; -neg raxadd rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; 1.0; OPTN >=?cmp rax,65536jl _o34; (; DROPmov rax,[rbp]sub rbp,8; setlastcoorcall w345; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o34:; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 't0; OPTAV !mov qword[w344],raxmov rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; DUPadd rbp,8mov [rbp],rax; 48; OPTN >>sar rax,48; t0add rbp,8mov [rbp],raxmov rax,qword[w344]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 48; OPTN <<shl rax,48; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN <<shl rax,16; 48; OPTN >>sar rax,48; t0add rbp,8mov [rbp],raxmov rax,qword[w344]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN <<shl rax,16; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 32; OPTN <<shl rax,32; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN <<shl rax,32; 48; OPTN >>sar rax,48; t0add rbp,8mov [rbp],raxmov rax,qword[w344]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 32; OPTN <<shl rax,32; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 16; OPTN <<shl rax,16; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; t0add rbp,8mov [rbp],raxmov rax,qword[w344]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :evt.box  |1001486|e'    . I| calls:1 niv:1 len:97 ( a -- b )w347:;---------OPT; C4FEA0:'boxanim	; [ 0 ] ; C4FEA4:'fx	; [ 0 346 ] ; C4FEA8:p!+	; [ 0 346 30C ] ; C4DC34:DUP	; [ 0 346 30C ] ; C4DC38:>R	; [ 0 346 30C 30C ] ; C4DC3C:@	; [ 0 346 30C ] ; C4DC40:!+	; [ 0 346 30C ] ; C4DC44:64	; [ 0 346 ] ; C4DC48:R>	; [ 0 346 0 ] ; C4DC4C:+!	; [ 0 346 0 0 ] ; C4FEAC:>A	; [ 0 346 ] ; C4FEB0:DUP	; [ 0 ] ; C4FEB4:24	; [ 0 0 ] ; C4FEB8:+	; [ 0 0 1 ] ; C4FEBC:@	; [ 0 0 ] ; C4FEC0:>B	; [ 0 0 ] ; C4FEC4:B@+	; [ 0 ] ; C4FEC8:1000	; [ 0 0 ] ; C4FECC:*.	; [ 0 0 2 ] ; C48B84:16	; [ 0 0 2 ] ; C48B88:*>>	; [ 0 0 2 3 ] ; C48B8C:DUP	; [ 0 0 ] ; C48B90:63	; [ 0 0 0 ] ; C48B94:>>	; [ 0 0 0 4 ] ; C48B98:-	; [ 0 0 0 ] ; C4FED0:A!+	; [ 0 0 ] ; C4FED4:1.0	; [ 0 ] ; C4FED8:B@+	; [ 0 5 ] ; C4FEDC:1000	; [ 0 5 5 ] ; C4FEE0:*.u	; [ 0 5 5 6 ] ; C48B78:16	; [ 0 5 5 6 ] ; C48B7C:*>>	; [ 0 5 5 6 7 ] ; C4FEE4:/.	; [ 0 5 5 ] ; C48BA0:16	; [ 0 5 5 ] ; C48BA4:<</	; [ 0 5 5 8 ] ; C4FEE8:A!+	; [ 0 5 ] ; C4FEEC:B@+	; [ 0 ] ; C4FEF0:A!+	; [ 0 0 ] ; C4FEF4:DUP	; [ 0 ] ; C4FEF8:16	; [ 0 0 ] ; C4FEFC:+	; [ 0 0 9 ] ; C4FF00:@	; [ 0 0 ] ; C4FF04:16	; [ 0 0 ] ; C4FF08:+	; [ 0 0 A ] ; C4FF0C:A!+	; [ 0 0 ] ; C4FF10:B@+	; [ 0 ] ; C4FF14:B@+	; [ 0 0 ] ; C4FF18:DUP	; [ 0 0 0 ] ; C4FF1C:A!+	; [ 0 0 0 0 ] ; C4FF20:OVER	; [ 0 0 0 ] ; C4FF24:48	; [ 0 0 0 0 ] ; C4FF28:>>	; [ 0 0 0 0 B ] ; C4FF2C:OVER	; [ 0 0 0 0 ] ; C4FF30:48	; [ 0 0 0 0 0 ] ; C4FF34:>>	; [ 0 0 0 0 0 C ] ; C4FF38:-	; [ 0 0 0 0 0 ] ; C4FF3C:$ffff	; [ 0 0 0 0 ] ; C4FF40:AND	; [ 0 0 0 0 D ] ; C4FF44:48	; [ 0 0 0 0 ] ; C4FF48:<<	; [ 0 0 0 0 E ] ; C4FF4C:>R	; [ 0 0 0 0 ] ; C4FF50:OVER	; [ 0 0 0 ] ; C4FF54:16	; [ 0 0 0 0 ] ; C4FF58:<<	; [ 0 0 0 0 F ] ; C4FF5C:48	; [ 0 0 0 0 ] ; C4FF60:>>	; [ 0 0 0 0 10 ] ; C4FF64:OVER	; [ 0 0 0 0 ] ; C4FF68:16	; [ 0 0 0 0 0 ] ; C4FF6C:<<	; [ 0 0 0 0 0 11 ] ; C4FF70:48	; [ 0 0 0 0 0 ] ; C4FF74:>>	; [ 0 0 0 0 0 12 ] ; C4FF78:-	; [ 0 0 0 0 0 ] ; C4FF7C:$ffff	; [ 0 0 0 0 ] ; C4FF80:AND	; [ 0 0 0 0 13 ] ; C4FF84:32	; [ 0 0 0 0 ] ; C4FF88:<<	; [ 0 0 0 0 14 ] ; C4FF8C:R>	; [ 0 0 0 0 ] ; C4FF90:OR	; [ 0 0 0 0 0 ] ; C4FF94:>R	; [ 0 0 0 0 ] ; C4FF98:OVER	; [ 0 0 0 ] ; C4FF9C:32	; [ 0 0 0 0 ] ; C4FFA0:<<	; [ 0 0 0 0 15 ] ; C4FFA4:48	; [ 0 0 0 0 ] ; C4FFA8:>>	; [ 0 0 0 0 16 ] ; C4FFAC:OVER	; [ 0 0 0 0 ] ; C4FFB0:32	; [ 0 0 0 0 0 ] ; C4FFB4:<<	; [ 0 0 0 0 0 17 ] ; C4FFB8:48	; [ 0 0 0 0 0 ] ; C4FFBC:>>	; [ 0 0 0 0 0 18 ] ; C4FFC0:-	; [ 0 0 0 0 0 ] ; C4FFC4:$ffff	; [ 0 0 0 0 ] ; C4FFC8:AND	; [ 0 0 0 0 19 ] ; C4FFCC:16	; [ 0 0 0 0 ] ; C4FFD0:<<	; [ 0 0 0 0 1A ] ; C4FFD4:R>	; [ 0 0 0 0 ] ; C4FFD8:OR	; [ 0 0 0 0 0 ] ; C4FFDC:>R	; [ 0 0 0 0 ] ; C4FFE0:SWAP	; [ 0 0 0 ] ; C4FFE4:48	; [ 0 0 0 ] ; C4FFE8:<<	; [ 0 0 0 1B ] ; C4FFEC:48	; [ 0 0 0 ] ; C4FFF0:>>	; [ 0 0 0 1C ] ; C4FFF4:SWAP	; [ 0 0 0 ] ; C4FFF8:48	; [ 0 0 0 ] ; C4FFFC:<<	; [ 0 0 0 1D ] ; C50000:48	; [ 0 0 0 ] ; C50004:>>	; [ 0 0 0 1E ] ; C50008:-	; [ 0 0 0 ] ; C5000C:$ffff	; [ 0 0 ] ; C50010:AND	; [ 0 0 1F ] ; C50014:R>	; [ 0 0 ] ; C50018:OR	; [ 0 0 0 ] ; C5001C:A!	; [ 0 0 ] ; C50020:;	; [ 0 ] ;---------ANA;---------GEN; 'boxanimadd rbp,8mov [rbp],raxmov rax,w346; 'fxadd rbp,8mov [rbp],raxmov rax,w30C; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 24; OPTN +add rax,24; @mov rax,qword[rax]; >Bmov r15,raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 1000add rbp,8mov [rbp],raxmov rax,1000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; 1.0add rbp,8mov [rbp],raxmov rax,65536; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 1000add rbp,8mov [rbp],raxmov rax,1000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 16; OPTN <</mov rbx,raxmov rax,[rbp]sub rbp,8cqoshld rdx,rax,16shl rax,16idiv rbx; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN +add rax,16; @mov rax,qword[rax]; 16; OPTN +add rax,16; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; DUPadd rbp,8mov [rbp],rax; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 48; OPTN >>sar rax,48; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 48; OPTN >>sar rax,48; -neg raxadd rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 48; OPTN <<shl rax,48; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 16; OPTN <<shl rax,16; 48; OPTN >>sar rax,48; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 16; OPTN <<shl rax,16; 48; OPTN >>sar rax,48; -neg raxadd rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 32; OPTN <<shl rax,32; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 32; OPTN <<shl rax,32; 48; OPTN >>sar rax,48; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 32; OPTN <<shl rax,32; 48; OPTN >>sar rax,48; -neg raxadd rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; 16; OPTN <<shl rax,16; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; SWAPxchg rax,[rbp]; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; -neg raxadd rax,[rbp]sub rbp,8; $ffff; OPTN ANDand rax,65535; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+fx.box  |2006482|e     . I| calls:6 niv:2 len:15 ( abcde --  )w348:;---------OPT; C50024:DUP	; [ 4 3 2 1 0 ] ; C50028:>R	; [ 4 3 2 1 0 0 ] ; C5002C:'fxp	; [ 4 3 2 1 0 ] ; C50030:p!+	; [ 4 3 2 1 0 30D ] ; C4DC34:DUP	; [ 4 3 2 1 0 30D ] ; C4DC38:>R	; [ 4 3 2 1 0 30D 30D ] ; C4DC3C:@	; [ 4 3 2 1 0 30D ] ; C4DC40:!+	; [ 4 3 2 1 0 30D ] ; C4DC44:64	; [ 4 3 2 1 0 ] ; C4DC48:R>	; [ 4 3 2 1 0 0 ] ; C4DC4C:+!	; [ 4 3 2 1 0 0 0 ] ; C50034:>A	; [ 4 3 2 1 0 ] ; C50038:A!+	; [ 4 3 2 1 ] ; C5003C:A!+	; [ 4 3 2 ] ; C50040:A!+	; [ 4 3 ] ; C50044:A!	; [ 4 ] ; C50048:getfx	; [ ] ; C4FB60:'fxp	; [ ] ; C4FB64:p.last	; [ 30D ] ; C4DDBC:@	; [ 30D ] ; C4DDC0:64	; [ 30D ] ; C4DDC4:-	; [ 30D 1 ] ; C5004C:getscr	; [ 30D ] ; C4FB54:'screen	; [ 30D ] ; C4FB58:p.last	; [ 30D 30B ] ; C4DDBC:@	; [ 30D 30B ] ; C4DDC0:64	; [ 30D 30B ] ; C4DDC4:-	; [ 30D 30B 2 ] ; C50050:'evt.box	; [ 30D 30B ] ; C50054:R>	; [ 30D 30B 347 ] ; C50058:+tline	; [ 30D 30B 347 347 ] ; C5005C:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; 'fxpadd rbp,8mov [rbp],raxmov rax,w30D; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; 'fxp; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30D]; 64; OPTN -sub rax,64; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.boxadd rbp,8mov [rbp],raxmov rax,w347; R>add rbp,8mov [rbp],raxpop rax; +tlinejmp w317; ;;--------------------------; :setlastcol  |1080|l     .  | calls:1 niv:0 len:61 (  --  )w34C:;---------OPT; C500C4:8	; [ ] ; C500C8:A+	; [ 0 ] ; C500CC:A@+	; [ ] ; C500D0:A@+	; [ 0 ] ; C500D4:A@	; [ 0 0 ] ; C500D8:DUP	; [ 0 0 0 ] ; C500DC:38	; [ 0 0 0 0 ] ; C500E0:<<	; [ 0 0 0 0 1 ] ; C500E4:55	; [ 0 0 0 0 ] ; C500E8:>>	; [ 0 0 0 0 2 ] ; C500EC:PICK2	; [ 0 0 0 0 ] ; C500F0:16	; [ 0 0 0 0 0 ] ; C500F4:>>	; [ 0 0 0 0 0 3 ] ; C500F8:$ff	; [ 0 0 0 0 0 ] ; C500FC:AND	; [ 0 0 0 0 0 4 ] ; C50100:+	; [ 0 0 0 0 0 ] ; C50104:$ff	; [ 0 0 0 0 ] ; C50108:AND	; [ 0 0 0 0 5 ] ; C5010C:16	; [ 0 0 0 0 ] ; C50110:<<	; [ 0 0 0 0 6 ] ; C50114:>R	; [ 0 0 0 0 ] ; C50118:DUP	; [ 0 0 0 ] ; C5011C:47	; [ 0 0 0 0 ] ; C50120:<<	; [ 0 0 0 0 7 ] ; C50124:55	; [ 0 0 0 0 ] ; C50128:>>	; [ 0 0 0 0 8 ] ; C5012C:PICK2	; [ 0 0 0 0 ] ; C50130:8	; [ 0 0 0 0 0 ] ; C50134:>>	; [ 0 0 0 0 0 9 ] ; C50138:$ff	; [ 0 0 0 0 0 ] ; C5013C:AND	; [ 0 0 0 0 0 A ] ; C50140:+	; [ 0 0 0 0 0 ] ; C50144:$ff	; [ 0 0 0 0 ] ; C50148:AND	; [ 0 0 0 0 B ] ; C5014C:8	; [ 0 0 0 0 ] ; C50150:<<	; [ 0 0 0 0 C ] ; C50154:R>	; [ 0 0 0 0 ] ; C50158:OR	; [ 0 0 0 0 0 ] ; C5015C:>R	; [ 0 0 0 0 ] ; C50160:55	; [ 0 0 0 ] ; C50164:<<	; [ 0 0 0 D ] ; C50168:55	; [ 0 0 0 ] ; C5016C:>>	; [ 0 0 0 E ] ; C50170:SWAP	; [ 0 0 0 ] ; C50174:$ff	; [ 0 0 0 ] ; C50178:AND	; [ 0 0 0 F ] ; C5017C:+	; [ 0 0 0 ] ; C50180:$ff	; [ 0 0 ] ; C50184:AND	; [ 0 0 10 ] ; C50188:R>	; [ 0 0 ] ; C5018C:OR	; [ 0 0 0 ] ; C50190:8	; [ 0 0 ] ; C50194:<<	; [ 0 0 11 ] ; C50198:OVER	; [ 0 0 ] ; C5019C:@	; [ 0 0 0 ] ; C501A0:$ff	; [ 0 0 0 ] ; C501A4:AND	; [ 0 0 0 12 ] ; C501A8:OR	; [ 0 0 0 ] ; C501AC:SWAP	; [ 0 0 ] ; C501B0:!	; [ 0 0 ] ; C501B4:;	; [ ] ;---------ANA;---------GEN; 8; OPTN A+add r14,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; DUPadd rbp,8mov [rbp],rax; 38; OPTN <<shl rax,38; 55; OPTN >>sar rax,55; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; 16; OPTN <<shl rax,16; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 47; OPTN <<shl rax,47; 55; OPTN >>sar rax,55; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; 8; OPTN <<shl rax,8; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 55; OPTN <<shl rax,55; 55; OPTN >>sar rax,55; SWAPxchg rax,[rbp]; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; @mov rax,qword[rax]; $ff; OPTN ANDand rax,255; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :colanim  |1001494|l' ;  . I| calls:1 niv:1 len:80 ( a -- b )w34E:;---------OPT; C501C8:>A	; [ 0 ] ; C501CC:timenow	; [ ] ; C501D0:A@+	; [ 30F ] ; C501D4:-	; [ 30F 30F ] ; C501D8:A@+	; [ 30F ] ; C501DC:*.	; [ 30F 30F ] ; C48B84:16	; [ 30F 30F ] ; C48B88:*>>	; [ 30F 30F 0 ] ; C48B8C:DUP	; [ 30F ] ; C48B90:63	; [ 30F 30F ] ; C48B94:>>	; [ 30F 30F 1 ] ; C48B98:-	; [ 30F 30F ] ; C501E0:1.0	; [ 30F ] ; C501E4:>=?	; [ 30F 2 ] ; C501E8:(	; [ 30F ] ; C501EC:DROP	; [ 30F ] ; C501F0:setlastcol	; [ ] ; C501F4:0	; [ ] ; C501F8:;	; [ 3 ] ; C501FC:)	; [ 3 ] ; C50200:A@+	; [ 30F ] ; C50204:EX	; [ 30F 30F ] ; C50208:'t0	; [ 30F 30F ] ; C5020C:!	; [ 30F 30F 344 ] ; C50210:A@+	; [ 30F ] ; C50214:A@+	; [ 30F 30F ] ; C50218:A@+	; [ 30F 30F 30F ] ; C5021C:DUP	; [ 30F 30F 30F 30F ] ; C50220:38	; [ 30F 30F 30F 30F 30F ] ; C50224:<<	; [ 30F 30F 30F 30F 30F 4 ] ; C50228:55	; [ 30F 30F 30F 30F 30F ] ; C5022C:>>	; [ 30F 30F 30F 30F 30F 5 ] ; C50230:scale8	; [ 30F 30F 30F 30F 30F ] ; C501B8:t0	; [ 30F 30F 30F 30F 30F ] ; C501BC:16	; [ 30F 30F 30F 30F 30F 344 ] ; C501C0:*>>	; [ 30F 30F 30F 30F 30F 344 6 ] ; C50234:PICK2	; [ 30F 30F 30F 30F 30F ] ; C50238:16	; [ 30F 30F 30F 30F 30F 30F ] ; C5023C:>>	; [ 30F 30F 30F 30F 30F 30F 7 ] ; C50240:$ff	; [ 30F 30F 30F 30F 30F 30F ] ; C50244:AND	; [ 30F 30F 30F 30F 30F 30F 8 ] ; C50248:+	; [ 30F 30F 30F 30F 30F 30F ] ; C5024C:$ff	; [ 30F 30F 30F 30F 30F ] ; C50250:AND	; [ 30F 30F 30F 30F 30F 9 ] ; C50254:16	; [ 30F 30F 30F 30F 30F ] ; C50258:<<	; [ 30F 30F 30F 30F 30F A ] ; C5025C:>R	; [ 30F 30F 30F 30F 30F ] ; C50260:DUP	; [ 30F 30F 30F 30F ] ; C50264:47	; [ 30F 30F 30F 30F 30F ] ; C50268:<<	; [ 30F 30F 30F 30F 30F B ] ; C5026C:55	; [ 30F 30F 30F 30F 30F ] ; C50270:>>	; [ 30F 30F 30F 30F 30F C ] ; C50274:scale8	; [ 30F 30F 30F 30F 30F ] ; C501B8:t0	; [ 30F 30F 30F 30F 30F ] ; C501BC:16	; [ 30F 30F 30F 30F 30F 344 ] ; C501C0:*>>	; [ 30F 30F 30F 30F 30F 344 D ] ; C50278:PICK2	; [ 30F 30F 30F 30F 30F ] ; C5027C:8	; [ 30F 30F 30F 30F 30F 30F ] ; C50280:>>	; [ 30F 30F 30F 30F 30F 30F E ] ; C50284:$ff	; [ 30F 30F 30F 30F 30F 30F ] ; C50288:AND	; [ 30F 30F 30F 30F 30F 30F F ] ; C5028C:+	; [ 30F 30F 30F 30F 30F 30F ] ; C50290:$ff	; [ 30F 30F 30F 30F 30F ] ; C50294:AND	; [ 30F 30F 30F 30F 30F 10 ] ; C50298:8	; [ 30F 30F 30F 30F 30F ] ; C5029C:<<	; [ 30F 30F 30F 30F 30F 11 ] ; C502A0:R>	; [ 30F 30F 30F 30F 30F ] ; C502A4:OR	; [ 30F 30F 30F 30F 30F 30F ] ; C502A8:>R	; [ 30F 30F 30F 30F 30F ] ; C502AC:55	; [ 30F 30F 30F 30F ] ; C502B0:<<	; [ 30F 30F 30F 30F 12 ] ; C502B4:55	; [ 30F 30F 30F 30F ] ; C502B8:>>	; [ 30F 30F 30F 30F 13 ] ; C502BC:scale8	; [ 30F 30F 30F 30F ] ; C501B8:t0	; [ 30F 30F 30F 30F ] ; C501BC:16	; [ 30F 30F 30F 30F 344 ] ; C501C0:*>>	; [ 30F 30F 30F 30F 344 14 ] ; C502C0:SWAP	; [ 30F 30F 30F 30F ] ; C502C4:$ff	; [ 30F 30F 30F 30F ] ; C502C8:AND	; [ 30F 30F 30F 30F 15 ] ; C502CC:+	; [ 30F 30F 30F 30F ] ; C502D0:$ff	; [ 30F 30F 30F ] ; C502D4:AND	; [ 30F 30F 30F 16 ] ; C502D8:R>	; [ 30F 30F 30F ] ; C502DC:OR	; [ 30F 30F 30F 30F ] ; C502E0:8	; [ 30F 30F 30F ] ; C502E4:<<	; [ 30F 30F 30F 17 ] ; C502E8:OVER	; [ 30F 30F 30F ] ; C502EC:@	; [ 30F 30F 30F 30F ] ; C502F0:$ff	; [ 30F 30F 30F 30F ] ; C502F4:AND	; [ 30F 30F 30F 30F 18 ] ; C502F8:OR	; [ 30F 30F 30F 30F ] ; C502FC:SWAP	; [ 30F 30F 30F ] ; C50300:!	; [ 30F 30F 30F ] ; C50304:;	; [ 30F ] ;---------ANA;---------GEN; >Amov r14,raxmov rax,[rbp]sub rbp,8; timenowadd rbp,8mov [rbp],raxmov rax,qword[w30F]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; -neg raxadd rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; 1.0; OPTN >=?cmp rax,65536jl _o35; (; DROPmov rax,[rbp]sub rbp,8; setlastcolcall w34C; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o35:; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 't0; OPTAV !mov qword[w344],raxmov rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; DUPadd rbp,8mov [rbp],rax; 38; OPTN <<shl rax,38; 55; OPTN >>sar rax,55; t0add rbp,8mov [rbp],raxmov rax,qword[w344]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; 16; OPTN <<shl rax,16; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 47; OPTN <<shl rax,47; 55; OPTN >>sar rax,55; t0add rbp,8mov [rbp],raxmov rax,qword[w344]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; 8; OPTN <<shl rax,8; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 55; OPTN <<shl rax,55; 55; OPTN >>sar rax,55; t0add rbp,8mov [rbp],raxmov rax,qword[w344]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; SWAPxchg rax,[rbp]; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; @mov rax,qword[rax]; $ff; OPTN ANDand rax,255; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :evt.color  |1001486|e'    . I| calls:1 niv:1 len:83 ( a -- b )w34F:;---------OPT; C50308:'colanim	; [ 0 ] ; C5030C:'fx	; [ 0 34E ] ; C50310:p!+	; [ 0 34E 30C ] ; C4DC34:DUP	; [ 0 34E 30C ] ; C4DC38:>R	; [ 0 34E 30C 30C ] ; C4DC3C:@	; [ 0 34E 30C ] ; C4DC40:!+	; [ 0 34E 30C ] ; C4DC44:64	; [ 0 34E ] ; C4DC48:R>	; [ 0 34E 0 ] ; C4DC4C:+!	; [ 0 34E 0 0 ] ; C50314:>A	; [ 0 34E ] ; C50318:DUP	; [ 0 ] ; C5031C:24	; [ 0 0 ] ; C50320:+	; [ 0 0 1 ] ; C50324:@	; [ 0 0 ] ; C50328:>B	; [ 0 0 ] ; C5032C:B@+	; [ 0 ] ; C50330:1000	; [ 0 0 ] ; C50334:*.	; [ 0 0 2 ] ; C48B84:16	; [ 0 0 2 ] ; C48B88:*>>	; [ 0 0 2 3 ] ; C48B8C:DUP	; [ 0 0 ] ; C48B90:63	; [ 0 0 0 ] ; C48B94:>>	; [ 0 0 0 4 ] ; C48B98:-	; [ 0 0 0 ] ; C50338:A!+	; [ 0 0 ] ; C5033C:1.0	; [ 0 ] ; C50340:B@+	; [ 0 5 ] ; C50344:1000	; [ 0 5 5 ] ; C50348:*.u	; [ 0 5 5 6 ] ; C48B78:16	; [ 0 5 5 6 ] ; C48B7C:*>>	; [ 0 5 5 6 7 ] ; C5034C:/.	; [ 0 5 5 ] ; C48BA0:16	; [ 0 5 5 ] ; C48BA4:<</	; [ 0 5 5 8 ] ; C50350:A!+	; [ 0 5 ] ; C50354:B@+	; [ 0 ] ; C50358:A!+	; [ 0 0 ] ; C5035C:DUP	; [ 0 ] ; C50360:16	; [ 0 0 ] ; C50364:+	; [ 0 0 9 ] ; C50368:@	; [ 0 0 ] ; C5036C:8	; [ 0 0 ] ; C50370:+	; [ 0 0 A ] ; C50374:A!+	; [ 0 0 ] ; C50378:B@+	; [ 0 ] ; C5037C:B@+	; [ 0 0 ] ; C50380:DUP	; [ 0 0 0 ] ; C50384:A!+	; [ 0 0 0 0 ] ; C50388:OVER	; [ 0 0 0 ] ; C5038C:40	; [ 0 0 0 0 ] ; C50390:<<	; [ 0 0 0 0 B ] ; C50394:56	; [ 0 0 0 0 ] ; C50398:>>	; [ 0 0 0 0 C ] ; C5039C:OVER	; [ 0 0 0 0 ] ; C503A0:40	; [ 0 0 0 0 0 ] ; C503A4:<<	; [ 0 0 0 0 0 D ] ; C503A8:56	; [ 0 0 0 0 0 ] ; C503AC:>>	; [ 0 0 0 0 0 E ] ; C503B0:-	; [ 0 0 0 0 0 ] ; C503B4:$1ff	; [ 0 0 0 0 ] ; C503B8:AND	; [ 0 0 0 0 F ] ; C503BC:18	; [ 0 0 0 0 ] ; C503C0:<<	; [ 0 0 0 0 10 ] ; C503C4:>R	; [ 0 0 0 0 ] ; C503C8:OVER	; [ 0 0 0 ] ; C503CC:48	; [ 0 0 0 0 ] ; C503D0:<<	; [ 0 0 0 0 11 ] ; C503D4:56	; [ 0 0 0 0 ] ; C503D8:>>	; [ 0 0 0 0 12 ] ; C503DC:OVER	; [ 0 0 0 0 ] ; C503E0:48	; [ 0 0 0 0 0 ] ; C503E4:<<	; [ 0 0 0 0 0 13 ] ; C503E8:56	; [ 0 0 0 0 0 ] ; C503EC:>>	; [ 0 0 0 0 0 14 ] ; C503F0:-	; [ 0 0 0 0 0 ] ; C503F4:$1ff	; [ 0 0 0 0 ] ; C503F8:AND	; [ 0 0 0 0 15 ] ; C503FC:9	; [ 0 0 0 0 ] ; C50400:<<	; [ 0 0 0 0 16 ] ; C50404:R>	; [ 0 0 0 0 ] ; C50408:OR	; [ 0 0 0 0 0 ] ; C5040C:>R	; [ 0 0 0 0 ] ; C50410:SWAP	; [ 0 0 0 ] ; C50414:56	; [ 0 0 0 ] ; C50418:<<	; [ 0 0 0 17 ] ; C5041C:56	; [ 0 0 0 ] ; C50420:>>	; [ 0 0 0 18 ] ; C50424:SWAP	; [ 0 0 0 ] ; C50428:56	; [ 0 0 0 ] ; C5042C:<<	; [ 0 0 0 19 ] ; C50430:56	; [ 0 0 0 ] ; C50434:>>	; [ 0 0 0 1A ] ; C50438:-	; [ 0 0 0 ] ; C5043C:$1ff	; [ 0 0 ] ; C50440:AND	; [ 0 0 1B ] ; C50444:R>	; [ 0 0 ] ; C50448:OR	; [ 0 0 0 ] ; C5044C:A!	; [ 0 0 ] ; C50450:;	; [ 0 ] ;---------ANA;---------GEN; 'colanimadd rbp,8mov [rbp],raxmov rax,w34E; 'fxadd rbp,8mov [rbp],raxmov rax,w30C; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 24; OPTN +add rax,24; @mov rax,qword[rax]; >Bmov r15,raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 1000add rbp,8mov [rbp],raxmov rax,1000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; 1.0add rbp,8mov [rbp],raxmov rax,65536; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 1000add rbp,8mov [rbp],raxmov rax,1000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 16; OPTN <</mov rbx,raxmov rax,[rbp]sub rbp,8cqoshld rdx,rax,16shl rax,16idiv rbx; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN +add rax,16; @mov rax,qword[rax]; 8; OPTN +add rax,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; DUPadd rbp,8mov [rbp],rax; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 40; OPTN <<shl rax,40; 56; OPTN >>sar rax,56; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 40; OPTN <<shl rax,40; 56; OPTN >>sar rax,56; -neg raxadd rax,[rbp]sub rbp,8; $1ff; OPTN ANDand rax,511; 18; OPTN <<shl rax,18; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 48; OPTN <<shl rax,48; 56; OPTN >>sar rax,56; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 48; OPTN <<shl rax,48; 56; OPTN >>sar rax,56; -neg raxadd rax,[rbp]sub rbp,8; $1ff; OPTN ANDand rax,511; 9; OPTN <<shl rax,9; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 56; OPTN <<shl rax,56; 56; OPTN >>sar rax,56; SWAPxchg rax,[rbp]; 56; OPTN <<shl rax,56; 56; OPTN >>sar rax,56; -neg raxadd rax,[rbp]sub rbp,8; $1ff; OPTN ANDand rax,511; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+fx.color  |2001482|e     . I| calls:1 niv:2 len:15 ( abcde --  )w350:;---------OPT; C50454:DUP	; [ 4 3 2 1 0 ] ; C50458:>R	; [ 4 3 2 1 0 0 ] ; C5045C:'fxp	; [ 4 3 2 1 0 ] ; C50460:p!+	; [ 4 3 2 1 0 30D ] ; C4DC34:DUP	; [ 4 3 2 1 0 30D ] ; C4DC38:>R	; [ 4 3 2 1 0 30D 30D ] ; C4DC3C:@	; [ 4 3 2 1 0 30D ] ; C4DC40:!+	; [ 4 3 2 1 0 30D ] ; C4DC44:64	; [ 4 3 2 1 0 ] ; C4DC48:R>	; [ 4 3 2 1 0 0 ] ; C4DC4C:+!	; [ 4 3 2 1 0 0 0 ] ; C50464:>A	; [ 4 3 2 1 0 ] ; C50468:A!+	; [ 4 3 2 1 ] ; C5046C:A!+	; [ 4 3 2 ] ; C50470:A!+	; [ 4 3 ] ; C50474:A!	; [ 4 ] ; C50478:getfx	; [ ] ; C4FB60:'fxp	; [ ] ; C4FB64:p.last	; [ 30D ] ; C4DDBC:@	; [ 30D ] ; C4DDC0:64	; [ 30D ] ; C4DDC4:-	; [ 30D 1 ] ; C5047C:getscr	; [ 30D ] ; C4FB54:'screen	; [ 30D ] ; C4FB58:p.last	; [ 30D 30B ] ; C4DDBC:@	; [ 30D 30B ] ; C4DDC0:64	; [ 30D 30B ] ; C4DDC4:-	; [ 30D 30B 2 ] ; C50480:'evt.color	; [ 30D 30B ] ; C50484:R>	; [ 30D 30B 34F ] ; C50488:+tline	; [ 30D 30B 34F 34F ] ; C5048C:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; 'fxpadd rbp,8mov [rbp],raxmov rax,w30D; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; 'fxp; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30D]; 64; OPTN -sub rax,64; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.coloradd rbp,8mov [rbp],raxmov rax,w34F; R>add rbp,8mov [rbp],raxpop rax; +tlinejmp w317; ;;--------------------------; :RenderTexture  |1001482|e     . I| calls:1 niv:1 len:14 ( abcd -- e )w35A:;---------OPT; C50820:DUP	; [ 3 2 1 0 ] ; C50824:$ffffff	; [ 3 2 1 0 0 ] ; C50828:AND	; [ 3 2 1 0 0 0 ] ; C5082C:SWAP	; [ 3 2 1 0 0 ] ; C50830:32	; [ 3 2 1 0 0 ] ; C50834:>>	; [ 3 2 1 0 0 1 ] ; C50838:TTF_RenderUTF8_Shaded	; [ 3 2 1 0 0 ] ; C4D77C:sys-TTF_RenderUTF8_Shaded	; [ 3 2 1 0 0 ] ; C4D780:SYS4	; [ 3 2 1 0 0 27C ] ; C5083C:DUP	; [ 3 2 ] ; C50840:ROT	; [ 3 2 2 ] ; C50844:SWAP	; [ 2 2 3 ] ; C50848:SDL_CreateTextureFromSurface	; [ 2 3 2 ] ; C4C4AC:sys-SDL_CreateTextureFromSurface	; [ 2 3 2 ] ; C4C4B0:SYS2	; [ 2 3 2 1EF ] ; C5084C:SWAP	; [ 2 3 ] ; C50850:SDL_FreeSurface	; [ 3 2 ] ; C4C4E8:sys-SDL_FreeSurface	; [ 3 2 ] ; C4C4EC:SYS1	; [ 3 2 1F3 ] ; C4C4F0:DROP	; [ 3 2 ] ; C50854:;	; [ 3 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; $ffffff; OPTN ANDand rax,16777215; SWAPxchg rax,[rbp]; 32; OPTN >>sar rax,32; sys-TTF_RenderUTF8_Shadedadd rbp,8mov [rbp],raxmov rax,qword[w27C]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DUPadd rbp,8mov [rbp],rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; sys-SDL_CreateTextureFromSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1EF]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; SWAPxchg rax,[rbp]; sys-SDL_FreeSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1F3]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :bmfont  |2001082|e     .  | calls:1 niv:2 len:21 ( abc --  )w360:;---------OPT; C50868:loadimg	; [ 2 1 0 ] ; C5086C:'pfont	; [ 2 1 0 ] ; C50870:!	; [ 2 1 0 35B ] ; C50874:2DUP	; [ 2 1 ] ; C50878:32	; [ 2 1 2 1 ] ; C5087C:<<	; [ 2 1 2 1 0 ] ; C50880:OR	; [ 2 1 2 1 ] ; C50884:DUP	; [ 2 1 2 ] ; C50888:'dp	; [ 2 1 2 2 ] ; C5088C:8	; [ 2 1 2 2 35F ] ; C50890:+	; [ 2 1 2 2 35F 1 ] ; C50894:!	; [ 2 1 2 2 35F ] ; C50898:'op	; [ 2 1 2 ] ; C5089C:8	; [ 2 1 2 35E ] ; C508A0:+	; [ 2 1 2 35E 2 ] ; C508A4:!	; [ 2 1 2 35E ] ; C508A8:'hp	; [ 2 1 ] ; C508AC:!	; [ 2 1 35D ] ; C508B0:'wp	; [ 2 ] ; C508B4:!	; [ 2 35C ] ; C508B8:;	; [ ] ;---------ANA;---------GEN; loadimgcall w294; 'pfont; OPTAV !mov qword[w35B],raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 32; OPTN <<shl rax,32; ORor rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'dpadd rbp,8mov [rbp],raxmov rax,w35F; 8; OPTN +add rax,8; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 'opadd rbp,8mov [rbp],raxmov rax,w35E; 8; OPTN +add rax,8; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 'hp; OPTAV !mov qword[w35D],raxmov rax,[rbp]sub rbp,8; 'wp; OPTAV !mov qword[w35C],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :bcolor  |1001482|e     . I| calls:1 niv:1 len:17 ( a --  )w361:;---------OPT; C508BC:pfont	; [ 0 ] ; C508C0:SWAP	; [ 0 35B ] ; C508C4:DUP	; [ 35B 0 ] ; C508C8:16	; [ 35B 0 0 ] ; C508CC:>>	; [ 35B 0 0 0 ] ; C508D0:$ff	; [ 35B 0 0 ] ; C508D4:AND	; [ 35B 0 0 1 ] ; C508D8:OVER	; [ 35B 0 0 ] ; C508DC:8	; [ 35B 0 0 0 ] ; C508E0:>>	; [ 35B 0 0 0 2 ] ; C508E4:$ff	; [ 35B 0 0 0 ] ; C508E8:AND	; [ 35B 0 0 0 3 ] ; C508EC:ROT	; [ 35B 0 0 0 ] ; C508F0:$ff	; [ 35B 0 0 0 ] ; C508F4:AND	; [ 35B 0 0 0 4 ] ; C508F8:SDL_SetTextureColorMod	; [ 35B 0 0 0 ] ; C4C434:sys-SDL_SetTextureColorMod	; [ 35B 0 0 0 ] ; C4C438:SYS4	; [ 35B 0 0 0 20A ] ; C4C43C:DROP	; [ 35B ] ; C508FC:;	; [ ] ;---------ANA;---------GEN; pfontadd rbp,8mov [rbp],raxmov rax,qword[w35B]; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $ff; OPTN ANDand rax,255; sys-SDL_SetTextureColorModadd rbp,8mov [rbp],raxmov rax,qword[w20A]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :bemit  |1001482|e     . I| calls:1 niv:1 len:26 ( a --  )w362:;---------OPT; C50900:DUP	; [ 0 ] ; C50904:$f	; [ 0 0 ] ; C50908:AND	; [ 0 0 0 ] ; C5090C:wp	; [ 0 0 ] ; C50910:*	; [ 0 0 35C ] ; C50914:SWAP	; [ 0 0 ] ; C50918:4	; [ 0 0 ] ; C5091C:>>	; [ 0 0 1 ] ; C50920:$f	; [ 0 0 ] ; C50924:AND	; [ 0 0 2 ] ; C50928:hp	; [ 0 0 ] ; C5092C:*	; [ 0 0 35D ] ; C50930:32	; [ 0 0 ] ; C50934:<<	; [ 0 0 3 ] ; C50938:OR	; [ 0 0 ] ; C5093C:'op	; [ 0 ] ; C50940:!	; [ 0 35E ] ; C50944:SDLrenderer	; [ ] ; C50948:pfont	; [ 23D ] ; C5094C:'op	; [ 23D 35B ] ; C50950:'dp	; [ 23D 35B 35E ] ; C50954:SDL_RenderCopy	; [ 23D 35B 35E 35F ] ; C4C47C:sys-SDL_RenderCopy	; [ 23D 35B 35E 35F ] ; C4C480:SYS4	; [ 23D 35B 35E 35F 1EB ] ; C4C484:DROP	; [ 23D ] ; C50958:wp	; [ ] ; C5095C:'dp	; [ 35C ] ; C50960:D+!	; [ 35C 35F ] ; C50964:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; wp; OPTV *imul rax,qword[w35C]; SWAPxchg rax,[rbp]; 4; OPTN >>sar rax,4; $f; OPTN ANDand rax,15; hp; OPTV *imul rax,qword[w35D]; 32; OPTN <<shl rax,32; ORor rax,[rbp]sub rbp,8; 'op; OPTAV !mov qword[w35E],raxmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; pfontadd rbp,8mov [rbp],raxmov rax,qword[w35B]; 'opadd rbp,8mov [rbp],raxmov rax,w35E; 'dpadd rbp,8mov [rbp],raxmov rax,w35F; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w1EB]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; wpadd rbp,8mov [rbp],raxmov rax,qword[w35C]; 'dp; OPTAV D+!add dword[w35F],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :example1  |3001480|l     . I| calls:1 niv:3 len:139 (  --  )w36B:;---------OPT; C509C4:timeline.clear	; [ ] ; C509C8:0.1	; [ ] ; C509CC:0.1	; [ 0 ] ; C509D0:0.8	; [ 0 1 ] ; C509D4:0.8	; [ 0 1 2 ] ; C509D8:xywh%64	; [ 0 1 2 3 ] ; C509DC:$ff00	; [ 0 ] ; C509E0:+box	; [ 0 4 ] ; C509E4:0.5	; [ ] ; C509E8:+fx.on	; [ 5 ] ; C4FBA4:>R	; [ 5 ] ; C4FBA8:0	; [ ] ; C4FBAC:getscr	; [ 6 ] ; C4FB54:'screen	; [ 6 ] ; C4FB58:p.last	; [ 6 30B ] ; C4DDBC:@	; [ 6 30B ] ; C4DDC0:64	; [ 6 30B ] ; C4DDC4:-	; [ 6 30B 7 ] ; C4FBB0:'evt.on	; [ 6 30B ] ; C4FBB4:R>	; [ 6 30B 340 ] ; C4FBB8:+tline	; [ 6 30B 340 340 ] ; C509EC:0.1	; [ ] ; C509F0:0.1	; [ 8 ] ; C509F4:0.8	; [ 8 9 ] ; C509F8:0.8	; [ 8 9 A ] ; C509FC:xywh%64	; [ 8 9 A B ] ; C50A00:0.4	; [ 0 ] ; C50A04:0.2	; [ 0 C ] ; C50A08:0.2	; [ 0 C D ] ; C50A0C:0.6	; [ 0 C D E ] ; C50A10:xywh%64	; [ 0 C D E F ] ; C50A14:'Ela_InOut	; [ 0 0 ] ; C50A18:3.0	; [ 0 0 2E2 ] ; C50A1C:2.0	; [ 0 0 2E2 10 ] ; C50A20:+fx.box	; [ 0 0 2E2 10 11 ] ; C50A24:0.4	; [ ] ; C50A28:0.2	; [ 12 ] ; C50A2C:0.2	; [ 12 13 ] ; C50A30:0.6	; [ 12 13 14 ] ; C50A34:xywh%64	; [ 12 13 14 15 ] ; C50A38:0.1	; [ 0 ] ; C50A3C:0.1	; [ 0 16 ] ; C50A40:0.8	; [ 0 16 17 ] ; C50A44:0.8	; [ 0 16 17 18 ] ; C50A48:xywh%64	; [ 0 16 17 18 19 ] ; C50A4C:'Ela_InOut	; [ 0 0 ] ; C50A50:3.0	; [ 0 0 2E2 ] ; C50A54:6.0	; [ 0 0 2E2 1A ] ; C50A58:+fx.box	; [ 0 0 2E2 1A 1B ] ; C50A5C:$ff00	; [ ] ; C50A60:$0000ff	; [ 1C ] ; C50A64:'Ela_InOut	; [ 1C 1D ] ; C50A68:7.0	; [ 1C 1D 2E2 ] ; C50A6C:2.0	; [ 1C 1D 2E2 1E ] ; C50A70:+fx.color	; [ 1C 1D 2E2 1E 1F ] ; C50A74:9.5	; [ ] ; C50A78:+fx.off	; [ 20 ] ; C4FBF4:>R	; [ 20 ] ; C4FBF8:0	; [ ] ; C4FBFC:getscr	; [ 21 ] ; C4FB54:'screen	; [ 21 ] ; C4FB58:p.last	; [ 21 30B ] ; C4DDBC:@	; [ 21 30B ] ; C4DDC0:64	; [ 21 30B ] ; C4DDC4:-	; [ 21 30B 22 ] ; C4FC00:'evt.off	; [ 21 30B ] ; C4FC04:R>	; [ 21 30B 342 ] ; C4FC08:+tline	; [ 21 30B 342 342 ] ; C50A7C:0.2	; [ ] ; C50A80:0.2	; [ 23 ] ; C50A84:0.3	; [ 23 24 ] ; C50A88:0.4	; [ 23 24 25 ] ; C50A8C:xywh%64	; [ 23 24 25 26 ] ; C50A90:$ff	; [ 0 ] ; C50A94:+box	; [ 0 27 ] ; C50A98:0.0	; [ ] ; C50A9C:+fx.on	; [ 28 ] ; C4FBA4:>R	; [ 28 ] ; C4FBA8:0	; [ ] ; C4FBAC:getscr	; [ 29 ] ; C4FB54:'screen	; [ 29 ] ; C4FB58:p.last	; [ 29 30B ] ; C4DDBC:@	; [ 29 30B ] ; C4DDC0:64	; [ 29 30B ] ; C4DDC4:-	; [ 29 30B 2A ] ; C4FBB0:'evt.on	; [ 29 30B ] ; C4FBB4:R>	; [ 29 30B 340 ] ; C4FBB8:+tline	; [ 29 30B 340 340 ] ; C50AA0:0.2	; [ ] ; C50AA4:0.2	; [ 2B ] ; C50AA8:0.3	; [ 2B 2C ] ; C50AAC:0.4	; [ 2B 2C 2D ] ; C50AB0:xywh%64	; [ 2B 2C 2D 2E ] ; C50AB4:1.2	; [ 0 ] ; C50AB8:0.4	; [ 0 2F ] ; C50ABC:0.3	; [ 0 2F 30 ] ; C50AC0:0.4	; [ 0 2F 30 31 ] ; C50AC4:xywh%64	; [ 0 2F 30 31 32 ] ; C50AC8:'Quad_In	; [ 0 0 ] ; C50ACC:4.0	; [ 0 0 2CB ] ; C50AD0:1.0	; [ 0 0 2CB 33 ] ; C50AD4:+fx.box	; [ 0 0 2CB 33 34 ] ; C50AD8:imagen	; [ ] ; C50ADC:0	; [ 367 ] ; C50AE0:+img	; [ 367 35 ] ; C50AE4:0.0	; [ ] ; C50AE8:+fx.on	; [ 36 ] ; C4FBA4:>R	; [ 36 ] ; C4FBA8:0	; [ ] ; C4FBAC:getscr	; [ 37 ] ; C4FB54:'screen	; [ 37 ] ; C4FB58:p.last	; [ 37 30B ] ; C4DDBC:@	; [ 37 30B ] ; C4DDC0:64	; [ 37 30B ] ; C4DDC4:-	; [ 37 30B 38 ] ; C4FBB0:'evt.on	; [ 37 30B ] ; C4FBB4:R>	; [ 37 30B 340 ] ; C4FBB8:+tline	; [ 37 30B 340 340 ] ; C50AEC:0.1	; [ ] ; C50AF0:0.3	; [ 39 ] ; C50AF4:0.1	; [ 39 3A ] ; C50AF8:0.1	; [ 39 3A 3B ] ; C50AFC:xywh%64	; [ 39 3A 3B 3C ] ; C50B00:1.1	; [ 0 ] ; C50B04:0.8	; [ 0 3D ] ; C50B08:0.3	; [ 0 3D 3E ] ; C50B0C:0.3	; [ 0 3D 3E 3F ] ; C50B10:xywh%64	; [ 0 3D 3E 3F 40 ] ; C50B14:'Quad_In	; [ 0 0 ] ; C50B18:1.0	; [ 0 0 2CB ] ; C50B1C:1.0	; [ 0 0 2CB 41 ] ; C50B20:+fx.box	; [ 0 0 2CB 41 42 ] ; C50B24:1.1	; [ ] ; C50B28:0.8	; [ 43 ] ; C50B2C:0.3	; [ 43 44 ] ; C50B30:0.3	; [ 43 44 45 ] ; C50B34:xywh%64	; [ 43 44 45 46 ] ; C50B38:0.1	; [ 0 ] ; C50B3C:0.3	; [ 0 47 ] ; C50B40:0.1	; [ 0 47 48 ] ; C50B44:0.1	; [ 0 47 48 49 ] ; C50B48:xywh%64	; [ 0 47 48 49 4A ] ; C50B4C:'Quad_In	; [ 0 0 ] ; C50B50:2.0	; [ 0 0 2CB ] ; C50B54:3.0	; [ 0 0 2CB 4B ] ; C50B58:+fx.box	; [ 0 0 2CB 4B 4C ] ; C50B5C:10.0	; [ ] ; C50B60:+fx.off	; [ 4D ] ; C4FBF4:>R	; [ 4D ] ; C4FBF8:0	; [ ] ; C4FBFC:getscr	; [ 4E ] ; C4FB54:'screen	; [ 4E ] ; C4FB58:p.last	; [ 4E 30B ] ; C4DDBC:@	; [ 4E 30B ] ; C4DDC0:64	; [ 4E 30B ] ; C4DDC4:-	; [ 4E 30B 4F ] ; C4FC00:'evt.off	; [ 4E 30B ] ; C4FC04:R>	; [ 4E 30B 342 ] ; C4FC08:+tline	; [ 4E 30B 342 342 ] ; C50B64:letras	; [ ] ; C50B68:0	; [ 368 ] ; C50B6C:0	; [ 368 50 ] ; C50B70:0.2	; [ 368 50 51 ] ; C50B74:0.2	; [ 368 50 51 52 ] ; C50B78:xywh%64	; [ 368 50 51 52 53 ] ; C50B7C:0.1	; [ 368 0 ] ; C50B80:0.8	; [ 368 0 54 ] ; C50B84:0.2	; [ 368 0 54 55 ] ; C50B88:0.2	; [ 368 0 54 55 56 ] ; C50B8C:xywh%64	; [ 368 0 54 55 56 57 ] ; C50B90:+txt	; [ 368 0 0 ] ; C50B94:0	; [ ] ; C50B98:+fx.on	; [ 58 ] ; C4FBA4:>R	; [ 58 ] ; C4FBA8:0	; [ ] ; C4FBAC:getscr	; [ 59 ] ; C4FB54:'screen	; [ 59 ] ; C4FB58:p.last	; [ 59 30B ] ; C4DDBC:@	; [ 59 30B ] ; C4DDC0:64	; [ 59 30B ] ; C4DDC4:-	; [ 59 30B 5A ] ; C4FBB0:'evt.on	; [ 59 30B ] ; C4FBB4:R>	; [ 59 30B 340 ] ; C4FBB8:+tline	; [ 59 30B 340 340 ] ; C50B9C:0.2	; [ ] ; C50BA0:0.2	; [ 5B ] ; C50BA4:0.4	; [ 5B 5C ] ; C50BA8:0.2	; [ 5B 5C 5D ] ; C50BAC:xywh%64	; [ 5B 5C 5D 5E ] ; C50BB0:0.8	; [ 0 ] ; C50BB4:0.2	; [ 0 5F ] ; C50BB8:0.1	; [ 0 5F 60 ] ; C50BBC:0.1	; [ 0 5F 60 61 ] ; C50BC0:xywh%64	; [ 0 5F 60 61 62 ] ; C50BC4:'Quad_In	; [ 0 0 ] ; C50BC8:1.0	; [ 0 0 2CB ] ; C50BCC:1.0	; [ 0 0 2CB 63 ] ; C50BD0:+fx.box	; [ 0 0 2CB 63 64 ] ; C50BD4:snd_shoot	; [ ] ; C50BD8:4.0	; [ 36A ] ; C50BDC:+sound	; [ 36A 65 ] ; C4FAE4:0	; [ 36A 65 ] ; C4FAE8:'evt.play	; [ 36A 65 66 ] ; C4FAEC:2SWAP	; [ 36A 65 66 339 ] ; C4FAF0:>R	; [ 66 339 36A 65 ] ; C4FAF4:SWAP	; [ 66 339 36A ] ; C4FAF8:R>	; [ 66 36A 339 ] ; C4FAFC:+tline	; [ 66 36A 339 339 ] ; C50BE0:10.0	; [ ] ; C50BE4:+restart	; [ 67 ] ; C4F2C4:>R	; [ 67 ] ; C4F2C8:0	; [ ] ; C4F2CC:0	; [ 68 ] ; C4F2D0:'evt.restart	; [ 68 69 ] ; C4F2D4:R>	; [ 68 69 319 ] ; C4F2D8:+tline	; [ 68 69 319 319 ] ; C50BE8:timeline.start	; [ ] ; C4F0FC:msec	; [ ] ; C4A628:GetTickCount	; [ ] ; C48808:sys-GetTickCount	; [ ] ; C4880C:SYS0	; [ 1A ] ; C4F100:'prevt	; [ 1A ] ; C4F104:!	; [ 1A 30E ] ; C4F108:0	; [ ] ; C4F10C:'timenow	; [ 6A ] ; C4F110:!	; [ 6A 30F ] ; C50BEC:;	; [ ] ;---------ANA;---------GEN; timeline.clearcall w315; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.8add rbp,8mov [rbp],raxmov rax,52428; xywh%64call w320; $ff00add rbp,8mov [rbp],raxmov rax,65280; +boxcall w32D; 0.5add rbp,8mov [rbp],raxmov rax,32768; >Rpush raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.onadd rbp,8mov [rbp],raxmov rax,w340; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.8add rbp,8mov [rbp],raxmov rax,52428; xywh%64call w320; 0.4add rbp,8mov [rbp],raxmov rax,26214; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.6add rbp,8mov [rbp],raxmov rax,39321; xywh%64call w320; 'Ela_InOutadd rbp,8mov [rbp],raxmov rax,w2E2; 3.0add rbp,8mov [rbp],raxmov rax,196608; 2.0add rbp,8mov [rbp],raxmov rax,131072; +fx.boxcall w348; 0.4add rbp,8mov [rbp],raxmov rax,26214; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.6add rbp,8mov [rbp],raxmov rax,39321; xywh%64call w320; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.8add rbp,8mov [rbp],raxmov rax,52428; xywh%64call w320; 'Ela_InOutadd rbp,8mov [rbp],raxmov rax,w2E2; 3.0add rbp,8mov [rbp],raxmov rax,196608; 6.0add rbp,8mov [rbp],raxmov rax,393216; +fx.boxcall w348; $ff00add rbp,8mov [rbp],raxmov rax,65280; $0000ffadd rbp,8mov [rbp],raxmov rax,255; 'Ela_InOutadd rbp,8mov [rbp],raxmov rax,w2E2; 7.0add rbp,8mov [rbp],raxmov rax,458752; 2.0add rbp,8mov [rbp],raxmov rax,131072; +fx.colorcall w350; 9.5add rbp,8mov [rbp],raxmov rax,622592; >Rpush raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.offadd rbp,8mov [rbp],raxmov rax,w342; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.3add rbp,8mov [rbp],raxmov rax,19660; 0.4add rbp,8mov [rbp],raxmov rax,26214; xywh%64call w320; $ffadd rbp,8mov [rbp],raxmov rax,255; +boxcall w32D; 0.0add rbp,8mov [rbp],raxxor rax,rax; >Rpush raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.onadd rbp,8mov [rbp],raxmov rax,w340; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.3add rbp,8mov [rbp],raxmov rax,19660; 0.4add rbp,8mov [rbp],raxmov rax,26214; xywh%64call w320; 1.2add rbp,8mov [rbp],raxmov rax,78643; 0.4add rbp,8mov [rbp],raxmov rax,26214; 0.3add rbp,8mov [rbp],raxmov rax,19660; 0.4add rbp,8mov [rbp],raxmov rax,26214; xywh%64call w320; 'Quad_Inadd rbp,8mov [rbp],raxmov rax,w2CB; 4.0add rbp,8mov [rbp],raxmov rax,262144; 1.0add rbp,8mov [rbp],raxmov rax,65536; +fx.boxcall w348; imagenadd rbp,8mov [rbp],raxmov rax,qword[w367]; 0add rbp,8mov [rbp],raxxor rax,rax; +imgcall w330; 0.0add rbp,8mov [rbp],raxxor rax,rax; >Rpush raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.onadd rbp,8mov [rbp],raxmov rax,w340; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.3add rbp,8mov [rbp],raxmov rax,19660; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; xywh%64call w320; 1.1add rbp,8mov [rbp],raxmov rax,72089; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.3add rbp,8mov [rbp],raxmov rax,19660; 0.3add rbp,8mov [rbp],raxmov rax,19660; xywh%64call w320; 'Quad_Inadd rbp,8mov [rbp],raxmov rax,w2CB; 1.0add rbp,8mov [rbp],raxmov rax,65536; 1.0add rbp,8mov [rbp],raxmov rax,65536; +fx.boxcall w348; 1.1add rbp,8mov [rbp],raxmov rax,72089; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.3add rbp,8mov [rbp],raxmov rax,19660; 0.3add rbp,8mov [rbp],raxmov rax,19660; xywh%64call w320; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.3add rbp,8mov [rbp],raxmov rax,19660; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; xywh%64call w320; 'Quad_Inadd rbp,8mov [rbp],raxmov rax,w2CB; 2.0add rbp,8mov [rbp],raxmov rax,131072; 3.0add rbp,8mov [rbp],raxmov rax,196608; +fx.boxcall w348; 10.0add rbp,8mov [rbp],raxmov rax,655360; >Rpush raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.offadd rbp,8mov [rbp],raxmov rax,w342; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; letrasadd rbp,8mov [rbp],raxmov rax,qword[w368]; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.2add rbp,8mov [rbp],raxmov rax,13107; xywh%64call w320; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.2add rbp,8mov [rbp],raxmov rax,13107; xywh%64call w320; +txtcall w334; 0add rbp,8mov [rbp],raxxor rax,rax; >Rpush raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'screen; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[w30B]; 64; OPTN -sub rax,64; 'evt.onadd rbp,8mov [rbp],raxmov rax,w340; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.4add rbp,8mov [rbp],raxmov rax,26214; 0.2add rbp,8mov [rbp],raxmov rax,13107; xywh%64call w320; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.2add rbp,8mov [rbp],raxmov rax,13107; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; xywh%64call w320; 'Quad_Inadd rbp,8mov [rbp],raxmov rax,w2CB; 1.0add rbp,8mov [rbp],raxmov rax,65536; 1.0add rbp,8mov [rbp],raxmov rax,65536; +fx.boxcall w348; snd_shootadd rbp,8mov [rbp],raxmov rax,qword[w36A]; 4.0add rbp,8mov [rbp],raxmov rax,262144; 0add rbp,8mov [rbp],raxxor rax,rax; 'evt.playadd rbp,8mov [rbp],raxmov rax,w339; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; 10.0add rbp,8mov [rbp],raxmov rax,655360; >Rpush raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 'evt.restartadd rbp,8mov [rbp],raxmov rax,w319; R>add rbp,8mov [rbp],raxpop rax; +tlinecall w317; sys-GetTickCountadd rbp,8mov [rbp],raxmov rax,qword[w1A]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; 'prevt; OPTAV !mov qword[w30E],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'timenow; OPTAV !mov qword[w30F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :demo  |1001484|l'    . I| calls:1 niv:1 len:24 (  --  )w36D:;---------OPT; C50C3C:0	; [ ] ; C50C40:SDLclear	; [ 0 ] ; C4CF44:SDLcolor	; [ 0 ] ; C4CF48:SDLrenderer	; [ ] ; C4CF4C:SDL_RenderClear	; [ 23D ] ; C4C46C:sys-SDL_RenderClear	; [ 23D ] ; C4C470:SYS1	; [ 23D 1EA ] ; C4C474:DROP	; [ 23D ] ; C50C44:timeline.draw	; [ ] ; C5065C:dtime	; [ ] ; C50660:tictline	; [ ] ; C50664:'fx	; [ ] ; C50668:p.draw	; [ 30C ] ; C5066C:'screen	; [ ] ; C50670:p.drawo	; [ 30B ] ; C50C48:$ffffff	; [ ] ; C50C4C:bcolor	; [ 1 ] ; C50C50:0	; [ ] ; C50C54:0	; [ 2 ] ; C50C58:bmat	; [ 2 3 ] ; C50984:32	; [ 2 3 ] ; C50988:<<	; [ 2 3 4 ] ; C5098C:OR	; [ 2 4 ] ; C50990:'dp	; [ 4 ] ; C50994:!	; [ 4 35F ] ; C50C5C:"<f1> example 1"	; [ ] ; C50C60:bmprint	; [ 6AA ] ; C50968:(	; [ 6AA ] ; C5096C:C@+	; [ 6AA ] ; C50970:1?	; [ 6AA 6AA ] ; C50974:bemit	; [ 6AA 6AA ] ; C50978:)	; [ 6AA ] ; C5097C:2DROP	; [ 6AA 6AA ] ; C50C64:SDLRedraw	; [ ] ; C4CF54:SDLrenderer	; [ ] ; C4CF58:SDL_RenderPresent	; [ 23D ] ; C4C49C:sys-SDL_RenderPresent	; [ 23D ] ; C4C4A0:SYS1	; [ 23D 1ED ] ; C4C4A4:DROP	; [ 23D ] ; C50C68:SDLkey	; [ ] ; C50C6C:<F1>	; [ 249 ] ; INLINE CTE; C50C70:=?	; [ 249 5 ] ; C50C74:(	; [ 249 ] ; C50C78:example1	; [ 249 ] ; C50C7C:)	; [ 249 ] ; C50C80:>esc<	; [ 249 ] ; INLINE CTE; C50C84:=?	; [ 249 6 ] ; C50C88:(	; [ 249 ] ; C50C8C:exit	; [ 249 ] ; C4C9E8:1	; [ 249 ] ; C4C9EC:'.exit	; [ 249 7 ] ; C4C9F0:!	; [ 249 7 251 ] ; C50C90:)	; [ 249 ] ; C50C94:DROP	; [ 249 ] ; C50C98:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; SDLcolorcall w255; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; sys-SDL_RenderClearadd rbp,8mov [rbp],raxmov rax,qword[w1EA]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; dtimecall w311; tictlinecall w318; 'fxadd rbp,8mov [rbp],raxmov rax,w30C; p.drawcall w2BE; 'screenadd rbp,8mov [rbp],raxmov rax,w30B; p.drawocall w2C0; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; bcolorcall w361; $0 ; calcadd rbp,8mov [rbp],raxmov rax,0; 'dp; OPTAV !mov qword[w35F],raxmov rax,[rbp]sub rbp,8; "<f1> example 1"add rbp,8mov [rbp],raxmov rax,str6AA; (_i36:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o36;; bemitcall w362; )jmp _i36_o36:; 2DROPmov rax,[rbp-8]sub rbp,8*2; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; sys-SDL_RenderPresentadd rbp,8mov [rbp],raxmov rax,qword[w1ED]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLkeyadd rbp,8mov [rbp],raxmov rax,qword[w249]; $403a; OPTN =?cmp rax,16442jne _o37; (; example1call w36B; )_o37:; $101b; OPTN =?cmp rax,4123jne _o38; (; 1add rbp,8mov [rbp],raxmov rax,1; '.exit; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; )_o38:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :loadres  |2001480|l     . I| calls:1 niv:2 len:22 (  -- a )w36E:;---------OPT; C50C9C:"media/snd/shoot.mp3"	; [ ] ; C50CA0:Mix_LoadWAV	; [ 75B ] ; C4D9B0:"rb"	; [ 75B ] ; C4D9B4:SDL_RWFromFile	; [ 75B B7EE ] ; C4C5EC:sys-SDL_RWFromFile	; [ 75B B7EE ] ; C4C5F0:SYS2	; [ 75B B7EE 204 ] ; C4D9B8:sys-Mix_LoadWAV_RW	; [ 75B ] ; C4D9BC:SYS1	; [ 75B 299 ] ; C50CA4:'snd_shoot	; [ 75B ] ; C50CA8:!	; [ 75B 36A ] ; C50CAC:SDLrenderer	; [ ] ; C50CB0:"media/img/lolomario.png"	; [ 23D ] ; C50CB4:loadimg	; [ 23D 799 ] ; C50CB8:'imagen	; [ 23D 0 ] ; C50CBC:!	; [ 23D 0 367 ] ; C50CC0:"media/ttf/roboto-bold.ttf"	; [ 23D ] ; C50CC4:32	; [ 23D 7C7 ] ; C50CC8:TTF_OpenFont	; [ 23D 7C7 0 ] ; C4D714:sys-TTF_OpenFont	; [ 23D 7C7 0 ] ; C4D718:SYS2	; [ 23D 7C7 0 274 ] ; C50CCC:'font	; [ 23D 7C7 ] ; C50CD0:!	; [ 23D 7C7 369 ] ; C50CD4:SDLrenderer	; [ 23D ] ; C50CD8:font	; [ 23D 23D ] ; C50CDC:"Hola a todos los que vinieron por los pochoclos que se regalan en la puerta"	; [ 23D 23D 369 ] ; C50CE0:$ffffff0000ff00	; [ 23D 23D 369 812 ] ; C50CE4:RenderTexture	; [ 23D 23D 369 812 1 ] ; C50CE8:'letras	; [ 23D 0 ] ; C50CEC:!	; [ 23D 0 368 ] ; C50CF0:;	; [ 23D ] ;---------ANA;---------GEN; "media/snd/shoot.mp3"add rbp,8mov [rbp],raxmov rax,str75B; "rb"add rbp,8mov [rbp],raxmov rax,strB7EE; sys-SDL_RWFromFileadd rbp,8mov [rbp],raxmov rax,qword[w204]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; sys-Mix_LoadWAV_RWadd rbp,8mov [rbp],raxmov rax,qword[w299]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'snd_shoot; OPTAV !mov qword[w36A],raxmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; "media/img/lolomario.png"add rbp,8mov [rbp],raxmov rax,str799; loadimgcall w294; 'imagen; OPTAV !mov qword[w367],raxmov rax,[rbp]sub rbp,8; "media/ttf/roboto-bold.ttf"add rbp,8mov [rbp],raxmov rax,str7C7; 32add rbp,8mov [rbp],raxmov rax,32; sys-TTF_OpenFontadd rbp,8mov [rbp],raxmov rax,qword[w274]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; 'font; OPTAV !mov qword[w369],raxmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; fontadd rbp,8mov [rbp],raxmov rax,qword[w369]; "Hola a todos los que vinieron por los pochoclos que se regalan en la puerta"add rbp,8mov [rbp],raxmov rax,str812; $ffffff0000ff00add rbp,8mov [rbp],raxmov rax,72057589743025920; RenderTexturecall w35A; 'letras; OPTAV !mov qword[w368],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :main  |2001480|l     . I| calls:1 niv:2 len:17 (  -- ab )w36F:;---------OPT; C50CF4:"r3sdl"	; [ ] ; C50CF8:640	; [ 89A ] ; C50CFC:480	; [ 89A 0 ] ; C50D00:SDLinit	; [ 89A 0 1 ] ; C50D04:44100	; [ ] ; C50D08:$08010	; [ 2 ] ; C50D0C:2	; [ 2 3 ] ; C50D10:4096	; [ 2 3 4 ] ; C50D14:Mix_OpenAudio	; [ 2 3 4 5 ] ; C4DA58:sys-Mix_OpenAudio	; [ 2 3 4 5 ] ; C4DA5C:SYS4	; [ 2 3 4 5 2A3 ] ; C4DA60:DROP	; [ 2 ] ; C50D18:bfont2	; [ ] ; C509B0:16	; [ ] ; C509B4:24	; [ 6 ] ; C509B8:"media/img/font16x24.png"	; [ 6 7 ] ; C509BC:bmfont	; [ 6 7 1094B ] ; C50D1C:TTF_Init	; [ ] ; C4D704:sys-TTF_Init	; [ ] ; C4D708:SYS0	; [ 273 ] ; C4D70C:DROP	; [ 273 ] ; C50D20:loadres	; [ ] ; C50D24:'demo	; [ 0 ] ; C50D28:SDLshow	; [ 0 36D ] ; C50D2C:Mix_CloseAudio	; [ 0 ] ; C4DA68:sys-Mix_CloseAudio	; [ 0 ] ; C4DA6C:SYS0	; [ 0 2A4 ] ; C4DA70:DROP	; [ 0 2A4 ] ; C50D30:SDLquit	; [ 0 ] ; C4C790:SDLrenderer	; [ 0 ] ; C4C794:SDL_DestroyRenderer	; [ 0 23D ] ; C4C454:sys-SDL_DestroyRenderer	; [ 0 23D ] ; C4C458:SYS1	; [ 0 23D 1E8 ] ; C4C798:SDL_windows	; [ 0 23D ] ; C4C79C:SDL_DestroyWindow	; [ 0 23D 23B ] ; C4C3FC:sys-SDL_DestroyWindow	; [ 0 23D 23B ] ; C4C400:SYS1	; [ 0 23D 23B 1E4 ] ; C4C404:DROP	; [ 0 23D 23B ] ; C4C7A0:SDL_Quit	; [ 0 23D ] ; C4C388:sys-SDL_Quit	; [ 0 23D ] ; C4C38C:SYS0	; [ 0 23D 1DC ] ; C4C390:DROP	; [ 0 23D 1DC ] ; C50D34:;	; [ 0 23D ] ;---------ANA;---------GEN; "r3sdl"add rbp,8mov [rbp],raxmov rax,str89A; 640add rbp,8mov [rbp],raxmov rax,640; 480add rbp,8mov [rbp],raxmov rax,480; SDLinitcall w243; 44100add rbp,8mov [rbp],raxmov rax,44100; $08010add rbp,8mov [rbp],raxmov rax,32784; 2add rbp,8mov [rbp],raxmov rax,2; 4096add rbp,8mov [rbp],raxmov rax,4096; sys-Mix_OpenAudioadd rbp,8mov [rbp],raxmov rax,qword[w2A3]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; 16add rbp,8mov [rbp],raxmov rax,16; 24add rbp,8mov [rbp],raxmov rax,24; "media/img/font16x24.png"add rbp,8mov [rbp],raxmov rax,str1094B; bmfontcall w360; sys-TTF_Initadd rbp,8mov [rbp],raxmov rax,qword[w273]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; loadrescall w36E; 'demoadd rbp,8mov [rbp],raxmov rax,w36D; SDLshowcall w252; sys-Mix_CloseAudioadd rbp,8mov [rbp],raxmov rax,qword[w2A4]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; sys-SDL_DestroyRendereradd rbp,8mov [rbp],raxmov rax,qword[w1E8]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w23B]; sys-SDL_DestroyWindowadd rbp,8mov [rbp],raxmov rax,qword[w1E4]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-SDL_Quitadd rbp,8mov [rbp],raxmov rax,qword[w1DC]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |3001580|l     .iI| calls:1 niv:3 len:4 (  -- ab )INICIO:;---------OPT; C50D3C:	; [ ] ; C50D40:memory	; [ ] ; C50D44:main	; [ ] ; C50D48:;	; [ 1 0 ] ;---------ANA;---------GEN; call w2B8; mainjmp w36F; ; 