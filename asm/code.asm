;---r3 compiler code.asm; r3/test/testasm.r3;--------------------------; :windows  |1001482|e     . I| calls:1 niv:1 len:196 (  --  )w43:;---------OPT; C1C1C4:"KERNEL32.DLL"	; [ ] ; C1C1C8:LOADLIB	; [ 1BE3 ] ; C1C1CC:DUP	; [ 1BE3 ] ; C1C1D0:"AllocConsole"	; [ 1BE3 1BE3 ] ; C1C1D4:GETPROC	; [ 1BE302001BE3 1C00 ] ; C1C1D8:'sys-AllocConsole	; [ 1BE302001BE3 1BE3 ] ; C1C1DC:!	; [ 1BE302001BE3 0 ] ; C1C1E0:DUP	; [ 1BE302001BE3 ] ; C1C1E4:"ExitProcess"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C1E8:GETPROC	; [ 1BE302001BE3 1C30 ] ; C1C1EC:'sys-ExitProcess	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C1F0:!	; [ 1BE302001BE3 1 ] ; C1C1F4:DUP	; [ 1BE302001BE3 ] ; C1C1F8:"GetStdHandle"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C1FC:GETPROC	; [ 1BE302001BE3 1C5F ] ; C1C200:'sys-GetStdHandle	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C204:!	; [ 1BE302001BE3 2 ] ; C1C208:DUP	; [ 1BE302001BE3 ] ; C1C20C:"ReadFile"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C210:GETPROC	; [ 1BE302001BE3 1C91 ] ; C1C214:'sys-ReadFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C218:!	; [ 1BE302001BE3 3 ] ; C1C21C:DUP	; [ 1BE302001BE3 ] ; C1C220:"WriteFile"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C224:GETPROC	; [ 1BE302001BE3 1CB9 ] ; C1C228:'sys-WriteFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C22C:!	; [ 1BE302001BE3 4 ] ; C1C230:DUP	; [ 1BE302001BE3 ] ; C1C234:"GetConsoleMode"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C238:GETPROC	; [ 1BE302001BE3 1CE5 ] ; C1C23C:'sys-GetConsoleMode	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C240:!	; [ 1BE302001BE3 5 ] ; C1C244:DUP	; [ 1BE302001BE3 ] ; C1C248:"SetConsoleMode"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C24C:GETPROC	; [ 1BE302001BE3 1D19 ] ; C1C250:'sys-SetConsoleMode	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C254:!	; [ 1BE302001BE3 6 ] ; C1C258:DUP	; [ 1BE302001BE3 ] ; C1C25C:"ReadConsoleInputW"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C260:GETPROC	; [ 1BE302001BE3 1D4D ] ; C1C264:'sys-ReadConsoleInput	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C268:!	; [ 1BE302001BE3 7 ] ; C1C26C:DUP	; [ 1BE302001BE3 ] ; C1C270:"FlushConsoleInputBuffer"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C274:GETPROC	; [ 1BE302001BE3 1D86 ] ; C1C278:'sys-FlushConsoleInputBuffer	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C27C:!	; [ 1BE302001BE3 8 ] ; C1C280:DUP	; [ 1BE302001BE3 ] ; C1C284:"Sleep"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C288:GETPROC	; [ 1BE302001BE3 1DCC ] ; C1C28C:'sys-Sleep	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C290:!	; [ 1BE302001BE3 9 ] ; C1C294:DUP	; [ 1BE302001BE3 ] ; C1C298:"WaitForSingleObject"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C29C:GETPROC	; [ 1BE302001BE3 1DEE ] ; C1C2A0:'sys-WaitForSingleObject	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2A4:!	; [ 1BE302001BE3 A ] ; C1C2A8:DUP	; [ 1BE302001BE3 ] ; C1C2AC:"GetLastError"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2B0:GETPROC	; [ 1BE302001BE3 1E2D ] ; C1C2B4:'sys-GetLastError	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2B8:!	; [ 1BE302001BE3 B ] ; C1C2BC:DUP	; [ 1BE302001BE3 ] ; C1C2C0:"CreateFileA"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2C4:GETPROC	; [ 1BE302001BE3 1E5E ] ; C1C2C8:'sys-CreateFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2CC:!	; [ 1BE302001BE3 C ] ; C1C2D0:DUP	; [ 1BE302001BE3 ] ; C1C2D4:"CloseHandle"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2D8:GETPROC	; [ 1BE302001BE3 1E8C ] ; C1C2DC:'sys-CloseHandle	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2E0:!	; [ 1BE302001BE3 D ] ; C1C2E4:DUP	; [ 1BE302001BE3 ] ; C1C2E8:"FlushFileBuffers"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2EC:GETPROC	; [ 1BE302001BE3 1EBA ] ; C1C2F0:'sys-FlushFileBuffers	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C2F4:!	; [ 1BE302001BE3 E ] ; C1C2F8:DUP	; [ 1BE302001BE3 ] ; C1C2FC:"DeleteFileA"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C300:GETPROC	; [ 1BE302001BE3 1EF2 ] ; C1C304:'sys-DeleteFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C308:!	; [ 1BE302001BE3 F ] ; C1C30C:DUP	; [ 1BE302001BE3 ] ; C1C310:"MoveFileA"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C314:GETPROC	; [ 1BE302001BE3 1F1F ] ; C1C318:'sys-MoveFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C31C:!	; [ 1BE302001BE3 10 ] ; C1C320:DUP	; [ 1BE302001BE3 ] ; C1C324:"SetFilePointer"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C328:GETPROC	; [ 1BE302001BE3 1F48 ] ; C1C32C:'sys-SetFilePointer	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C330:!	; [ 1BE302001BE3 11 ] ; C1C334:DUP	; [ 1BE302001BE3 ] ; C1C338:"SetEndOfFile"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C33C:GETPROC	; [ 1BE302001BE3 1F7C ] ; C1C340:'sys-SetEndOfFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C344:!	; [ 1BE302001BE3 12 ] ; C1C348:DUP	; [ 1BE302001BE3 ] ; C1C34C:"GetFileSize"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C350:GETPROC	; [ 1BE302001BE3 1FAC ] ; C1C354:'sys-GetFileSize	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C358:!	; [ 1BE302001BE3 13 ] ; C1C35C:DUP	; [ 1BE302001BE3 ] ; C1C360:"GetProcessHeap"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C364:GETPROC	; [ 1BE302001BE3 1FDB ] ; C1C368:'sys-GetProcessHeap	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C36C:!	; [ 1BE302001BE3 14 ] ; C1C370:DUP	; [ 1BE302001BE3 ] ; C1C374:"HeapAlloc"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C378:GETPROC	; [ 1BE302001BE3 200F ] ; C1C37C:'sys-HeapAlloc	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C380:!	; [ 1BE302001BE3 15 ] ; C1C384:DUP	; [ 1BE302001BE3 ] ; C1C388:"HeapFree"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C38C:GETPROC	; [ 1BE302001BE3 2039 ] ; C1C390:'sys-HeapFree	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C394:!	; [ 1BE302001BE3 16 ] ; C1C398:DUP	; [ 1BE302001BE3 ] ; C1C39C:"HeapReAlloc"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3A0:GETPROC	; [ 1BE302001BE3 2061 ] ; C1C3A4:'sys-HeapReAlloc	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3A8:!	; [ 1BE302001BE3 17 ] ; C1C3AC:DUP	; [ 1BE302001BE3 ] ; C1C3B0:"GetLocalTime"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3B4:GETPROC	; [ 1BE302001BE3 2090 ] ; C1C3B8:'sys-GetLocalTime	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3BC:!	; [ 1BE302001BE3 19 ] ; C1C3C0:DUP	; [ 1BE302001BE3 ] ; C1C3C4:"FindFirstFileA"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3C8:GETPROC	; [ 1BE302001BE3 20C0 ] ; C1C3CC:'sys-FindFirstFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3D0:!	; [ 1BE302001BE3 1A ] ; C1C3D4:DUP	; [ 1BE302001BE3 ] ; C1C3D8:"FindNextFileA"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3DC:GETPROC	; [ 1BE302001BE3 20F3 ] ; C1C3E0:'sys-FindNextFile	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3E4:!	; [ 1BE302001BE3 1B ] ; C1C3E8:DUP	; [ 1BE302001BE3 ] ; C1C3EC:"FindClose"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3F0:GETPROC	; [ 1BE302001BE3 2124 ] ; C1C3F4:'sys-FindClose	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C3F8:!	; [ 1BE302001BE3 1C ] ; C1C3FC:DUP	; [ 1BE302001BE3 ] ; C1C400:"CreateProcessA"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C404:GETPROC	; [ 1BE302001BE3 214F ] ; C1C408:'sys-CreateProcess	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C40C:!	; [ 1BE302001BE3 1D ] ; C1C410:DUP	; [ 1BE302001BE3 ] ; C1C414:"GetTickCount"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C418:GETPROC	; [ 1BE302001BE3 2182 ] ; C1C41C:'sys-GetTickCount	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C420:!	; [ 1BE302001BE3 18 ] ; C1C424:DUP	; [ 1BE302001BE3 ] ; C1C428:"GetConsoleScreenBufferInfo"	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C42C:GETPROC	; [ 1BE302001BE3 21B2 ] ; C1C430:'sys-GetConsoleScreenBufferInfo	; [ 1BE302001BE3 1BE302001BE3 ] ; C1C434:!	; [ 1BE302001BE3 1E ] ; C1C438:DROP	; [ 1BE302001BE3 ] ; C1C43C:AllocConsole	; [ ] ; C1C02C:sys-AllocConsole	; [ ] ; C1C030:SYS0	; [ 0 ] ; C1C034:DROP	; [ 0 ] ; C1C440:-10	; [ ] ; C1C444:GetStdHandle	; [ 0 ] ; C1C048:sys-GetStdHandle	; [ 0 ] ; C1C04C:SYS1	; [ 0 2 ] ; C1C448:'stdin	; [ 0 ] ; C1C44C:!	; [ 0 40 ] ; C1C450:-11	; [ ] ; C1C454:GetStdHandle	; [ 1 ] ; C1C048:sys-GetStdHandle	; [ 1 ] ; C1C04C:SYS1	; [ 1 2 ] ; C1C458:'stdout	; [ 1 ] ; C1C45C:!	; [ 1 41 ] ; C1C460:-12	; [ ] ; C1C464:GetStdHandle	; [ 2 ] ; C1C048:sys-GetStdHandle	; [ 2 ] ; C1C04C:SYS1	; [ 2 2 ] ; C1C468:'stderr	; [ 2 ] ; C1C46C:!	; [ 2 42 ] ; C1C470:stdin	; [ ] ; C1C474:'console-mode	; [ 40 ] ; C1C478:GetConsoleMode	; [ 40 3E ] ; C1C06C:sys-GetConsoleMode	; [ 40 3E ] ; C1C070:SYS2	; [ 3E03000040 5 ] ; C1C47C:DROP	; [ 3E03000040 ] ; C1C480:stdin	; [ ] ; C1C484:console-mode	; [ 40 ] ; C1C488:$1a	; [ 40 3E ] ; C1C48C:NEG	; [ 3E04000040 3 ] ; C1C490:AND	; [ 3E04000040 3 ] ; C1C494:SetConsoleMode	; [ 3E04000040 3E ] ; C1C078:sys-SetConsoleMode	; [ 3E04000040 3E ] ; C1C07C:SYS2	; [ 3E04000040 6 ] ; C1C498:DROP	; [ 3E04000040 ] ; C1C49C:stdout	; [ ] ; C1C4A0:'console-mode	; [ 41 ] ; C1C4A4:GetConsoleMode	; [ 41 3E ] ; C1C06C:sys-GetConsoleMode	; [ 41 3E ] ; C1C070:SYS2	; [ 3E03000041 5 ] ; C1C4A8:DROP	; [ 3E03000041 ] ; C1C4AC:stdout	; [ ] ; C1C4B0:console-mode	; [ 41 ] ; C1C4B4:$4	; [ 41 3E ] ; C1C4B8:OR	; [ 3E04000041 4 ] ; C1C4BC:SetConsoleMode	; [ 3E04000041 3E ] ; C1C078:sys-SetConsoleMode	; [ 3E04000041 3E ] ; C1C07C:SYS2	; [ 3E04000041 6 ] ; C1C4C0:DROP	; [ 3E04000041 ] ; C1C4C4:GetProcessHeap	; [ ] ; C1C12C:sys-GetProcessHeap	; [ ] ; C1C130:SYS0	; [ 14 ] ; C1C4C8:'process-heap	; [ 14 ] ; C1C4CC:!	; [ 14 3F ] ; C1C4D0:;	; [ ] ;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str1BE3; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1C00; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1C30; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1C5F; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1C91; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1CB9; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1CE5; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1D19; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1D4D; 'sys-ReadConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1D86; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1DCC; 'sys-Sleep; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1DEE; 'sys-WaitForSingleObject; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1E2D; 'sys-GetLastError; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1E5E; 'sys-CreateFile; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1E8C; 'sys-CloseHandle; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1EBA; 'sys-FlushFileBuffers; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1EF2; 'sys-DeleteFile; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1F1F; 'sys-MoveFile; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1F48; 'sys-SetFilePointer; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1F7C; 'sys-SetEndOfFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1FAC; 'sys-GetFileSize; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1FDB; 'sys-GetProcessHeap; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str200F; 'sys-HeapAlloc; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2039; 'sys-HeapFree; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2061; 'sys-HeapReAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2090; 'sys-GetLocalTime; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str20C0; 'sys-FindFirstFile; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str20F3; 'sys-FindNextFile; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2124; 'sys-FindClose; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str214F; 'sys-CreateProcess; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2182; 'sys-GetTickCount; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str21B2; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdin; OPTAV !mov qword[w40],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdout; OPTAV !mov qword[w41],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stderr; OPTAV !mov qword[w42],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-GetProcessHeapadd rbp,8mov [rbp],raxmov rax,qword[w14]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; 'process-heap; OPTAV !mov qword[w3F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :10/mod  |3082|e     .  | calls:3 niv:0 len:49 ( a -- bc )w7E:;---------OPT; C1D484:DUP	; [ 0 ] ; C1D488:1	; [ 0 0 ] ; C1D48C:>>	; [ 5000000 0 ] ; C1D490:OVER	; [ 5000000 0 ] ; C1D494:2	; [ 5000000 5000000 ] ; C1D498:>>	; [ 5000000 5000000 1 ] ; C1D49C:+	; [ 5000000 5000000 ] ; C1D4A0:DUP	; [ 5000000 5000000 ] ; C1D4A4:4	; [ 5000000 5000000 ] ; C1D4A8:>>	; [ 5000000 5000000 2 ] ; C1D4AC:+	; [ 5000000 5000000 ] ; C1D4B0:DUP	; [ 5000000 5000000 ] ; C1D4B4:8	; [ 5000000 5000000 ] ; C1D4B8:>>	; [ 5000000 5000000 3 ] ; C1D4BC:+	; [ 5000000 5000000 ] ; C1D4C0:DUP	; [ 5000000 5000000 ] ; C1D4C4:16	; [ 5000000 5000000 ] ; C1D4C8:>>	; [ 5000000 5000000 4 ] ; C1D4CC:+	; [ 5000000 5000000 ] ; C1D4D0:DUP	; [ 5000000 5000000 ] ; C1D4D4:32	; [ 5000000 5000000 ] ; C1D4D8:>>	; [ 5000000 5000000 5 ] ; C1D4DC:+	; [ 5000000 5000000 ] ; C1D4E0:3	; [ 5000000 5000000 ] ; C1D4E4:>>	; [ 5000000 6 ] ; C1D4E8:OVER	; [ 5000000 5000000 ] ; C1D4EC:OVER	; [ 5000000 5000000 ] ; C1D4F0:DUP	; [ 5000000 5000000 5000000 ] ; C1D4F4:2	; [ 5000000 5000000 5000000 ] ; C1D4F8:<<	; [ 5000000 5000000 5000000 7 ] ; C1D4FC:+	; [ 5000000 5000000 5000000 ] ; C1D500:1	; [ 5000000 5000000 5000000 ] ; C1D504:<<	; [ 5000000 5000000 8 ] ; C1D508:-	; [ 5000000 5000000 5000000 ] ; C1D50C:6	; [ 5000000 5000000 ] ; C1D510:+	; [ 5000000 5000000 9 ] ; C1D514:4	; [ 5000000 5000000 ] ; C1D518:>>	; [ 5000000 5000000 A ] ; C1D51C:+	; [ 5000000 5000000 ] ; C1D520:SWAP	; [ 5000000 5000000 ] ; C1D524:OVER	; [ 5000000 5000000 ] ; C1D528:DUP	; [ 5000000 5000000 ] ; C1D52C:2	; [ 5000000 5000000 5000000 ] ; C1D530:<<	; [ 5000000 5000000 B ] ; C1D534:+	; [ 5000000 5000000 5000000 ] ; C1D538:1	; [ 5000000 5000000 ] ; C1D53C:<<	; [ 5000000 5000000 C ] ; C1D540:-	; [ 5000000 5000000 ] ; C1D544:;	; [ 5000000 5000000 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :count  |1082|e     .  | calls:1 niv:0 len:13 ( a -- bc )w91:;---------OPT; C1D810:0	; [ 0 ] ; C1D814:OVER	; [ 0 0 ] ; C1D818:(	; [ 0 0 ] ; C1D81C:C@+	; [ 0 0 ] ; C1D820:1?	; [ 0 0 0 ] ; C1D824:DROP	; [ 0 0 0 ] ; C1D828:SWAP	; [ 0 0 ] ; C1D82C:1	; [ 5000000 5000000 ] ; C1D830:+	; [ 5000000 5000000 1 ] ; C1D834:SWAP	; [ 5000000 5000000 ] ; C1D838:)	; [ 0 0 ] ; C1D83C:2DROP	; [ 0 0 0 ] ; C1D840:;	; [ 0 5000000 ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i0:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o0;; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; )jmp _i0_o0:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :mbuffi  |5080|l     .  | calls:5 niv:0 len:9 (  -- a )w9C:;---------OPT; C1DB9C:'mbuff	; [ ] ; C1DBA0:64	; [ 9B ] ; C1DBA4:+	; [ 9B 0 ] ; C1DBA8:0	; [ 9B ] ; C1DBAC:OVER	; [ 9B 1 ] ; C1DBB0:C!	; [ 10000009B 10000009B ] ; C1DBB4:1	; [ 10000009B ] ; C1DBB8:-	; [ 10000009B 2 ] ; C1DBBC:;	; [ 10000009B ] ;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; ;ret;--------------------------; :sign  |2090|l  ;  .  | calls:2 niv:0 len:12 ( ab -- c )w9D:;---------OPT; C1DBC0:-?	; [ 1 0 ] ; C1DBC4:(	; [ 1 0 ] ; C1DBC8:DROP	; [ 1 0 ] ; C1DBCC:$2d	; [ 1 ] ; C1DBD0:OVER	; [ 1 0 ] ; C1DBD4:C!	; [ 1 1 ] ; C1DBD8:;	; [ 1 ] ; C1DBDC:)	; [ 1 ] ; C1DBE0:DROP	; [ 1 0 ] ; C1DBE4:1	; [ 1 ] ; C1DBE8:+	; [ 1 1 ] ; C1DBEC:;	; [ 1 ] ;---------ANA;---------GEN; -?or rax,raxjns _o1; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o1:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.d  |1003092|e  ;  .  | calls:3 niv:1 len:26 ( a -- b )w9E:;---------OPT; C1DBF0:DUP	; [ 0 ] ; C1DBF4:ABS	; [ 0 0 ] ; C1DBF8:-?	; [ 0 0 ] ; C1DBFC:(	; [ 0 0 ] ; C1DC00:2DROP	; [ 0 0 ] ; C1DC04:"-9223372036854775808"	; [ ] ; C1DC08:;	; [ 2CD0 ] ; C1DC0C:)	; [ 2CD0 ] ; C1DC10:mbuffi	; [ 0 0 ] ; C1DC14:SWAP	; [ 5000000 0 ] ; C1DC18:(	; [ 5000000 0 ] ; C1DC1C:10/mod	; [ 5000000 0 ] ; C1DC20:$30	; [ 5000000 1 0 ] ; C1DC24:+	; [ 5000000 5000001 0 ] ; C1DC28:PICK2	; [ 5000000 5000001 0 ] ; C1DC2C:C!	; [ 5000000 5000001 105000000 ] ; C1DC30:SWAP	; [ 5000000 5000001 ] ; C1DC34:1	; [ 105000000 105000000 ] ; C1DC38:-	; [ 105000000 105000000 1 ] ; C1DC3C:SWAP	; [ 105000000 105000000 ] ; C1DC40:1?	; [ 5000000 5000001 ] ; C1DC44:)	; [ 5000000 5000001 ] ; C1DC48:DROP	; [ 5000000 5000001 ] ; C1DC4C:SWAP	; [ 5000000 105000000 ] ; C1DC50:sign	; [ 105000000 5000000 ] ; C1DC54:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o2; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str2CD0; ;ret; )_o2:; mbufficall w9C; SWAPxchg rax,[rbp]; (_i3:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o3;; )jmp _i3_o3:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w9D; ;;--------------------------; :.b  |1001082|e     .  | calls:1 niv:1 len:22 ( a -- b )w9F:;---------OPT; C1DC58:mbuffi	; [ 0 ] ; C1DC5C:SWAP	; [ 0 0 ] ; C1DC60:(	; [ 0 0 ] ; C1DC64:DUP	; [ 0 0 ] ; C1DC68:$1	; [ 5000000 0 ] ; C1DC6C:AND	; [ 5000000 0 0 ] ; C1DC70:$30	; [ 5000000 0 ] ; C1DC74:+	; [ 5000000 0 1 ] ; C1DC78:PICK2	; [ 5000000 0 ] ; C1DC7C:C!	; [ 5000000 0 5000000 ] ; C1DC80:SWAP	; [ 5000000 5000000 ] ; C1DC84:1	; [ 5000000 5000000 ] ; C1DC88:-	; [ 5000000 2 ] ; C1DC8C:SWAP	; [ 5000000 5000000 ] ; C1DC90:1	; [ 5000000 5000000 ] ; C1DC94:>>>	; [ 5000000 3 ] ; C1DC98:1?	; [ 5000000 5000000 ] ; C1DC9C:)	; [ 5000000 5000000 ] ; C1DCA0:DROP	; [ 5000000 5000000 ] ; C1DCA4:1	; [ 5000000 ] ; C1DCA8:+	; [ 5000000 4 ] ; C1DCAC:;	; [ 5000000 ] ;---------ANA;---------GEN; mbufficall w9C; SWAPxchg rax,[rbp]; (_i4:; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN >>>shr rax,1; 1?or rax,raxjz _o4;; )jmp _i4_o4:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.h  |1001082|e     .  | calls:1 niv:1 len:28 ( a -- b )wA0:;---------OPT; C1DCB0:mbuffi	; [ 0 ] ; C1DCB4:SWAP	; [ 0 0 ] ; C1DCB8:(	; [ 0 0 ] ; C1DCBC:DUP	; [ 0 0 ] ; C1DCC0:$f	; [ 5000000 0 ] ; C1DCC4:AND	; [ 5000000 0 0 ] ; C1DCC8:$30	; [ 5000000 0 ] ; C1DCCC:+	; [ 5000000 0 1 ] ; C1DCD0:$39	; [ 5000000 0 ] ; C1DCD4:>?	; [ 5000000 0 2 ] ; C1DCD8:(	; [ 5000000 0 ] ; C1DCDC:7	; [ 5000000 0 ] ; C1DCE0:+	; [ 5000000 0 3 ] ; C1DCE4:)	; [ 5000000 0 ] ; C1DCE8:PICK2	; [ 5000000 0 ] ; C1DCEC:C!	; [ 5000000 0 5000000 ] ; C1DCF0:SWAP	; [ 5000000 5000000 ] ; C1DCF4:1	; [ 5000000 5000000 ] ; C1DCF8:-	; [ 5000000 4 ] ; C1DCFC:SWAP	; [ 5000000 5000000 ] ; C1DD00:4	; [ 5000000 5000000 ] ; C1DD04:>>>	; [ 5000000 5 ] ; C1DD08:1?	; [ 5000000 5000000 ] ; C1DD0C:)	; [ 5000000 5000000 ] ; C1DD10:DROP	; [ 5000000 5000000 ] ; C1DD14:1	; [ 5000000 ] ; C1DD18:+	; [ 5000000 6 ] ; C1DD1C:;	; [ 5000000 ] ;---------ANA;---------GEN; mbufficall w9C; SWAPxchg rax,[rbp]; (_i5:; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; $30; OPTN +add rax,48; $39; OPTN >?cmp rax,57jle _o6; (; 7; OPTN +add rax,7; )_o6:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 4; OPTN >>>shr rax,4; 1?or rax,raxjz _o5;; )jmp _i5_o5:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.o  |1001082|e     .  | calls:1 niv:1 len:22 ( a -- b )wA1:;---------OPT; C1DD20:mbuffi	; [ 0 ] ; C1DD24:SWAP	; [ 0 0 ] ; C1DD28:(	; [ 0 0 ] ; C1DD2C:DUP	; [ 0 0 ] ; C1DD30:$7	; [ 5000000 0 ] ; C1DD34:AND	; [ 5000000 0 0 ] ; C1DD38:$30	; [ 5000000 0 ] ; C1DD3C:+	; [ 5000000 0 1 ] ; C1DD40:PICK2	; [ 5000000 0 ] ; C1DD44:C!	; [ 5000000 0 5000000 ] ; C1DD48:SWAP	; [ 5000000 5000000 ] ; C1DD4C:1	; [ 5000000 5000000 ] ; C1DD50:-	; [ 5000000 2 ] ; C1DD54:SWAP	; [ 5000000 5000000 ] ; C1DD58:3	; [ 5000000 5000000 ] ; C1DD5C:>>>	; [ 5000000 3 ] ; C1DD60:1?	; [ 5000000 5000000 ] ; C1DD64:)	; [ 5000000 5000000 ] ; C1DD68:DROP	; [ 5000000 5000000 ] ; C1DD6C:1	; [ 5000000 ] ; C1DD70:+	; [ 5000000 4 ] ; C1DD74:;	; [ 5000000 ] ;---------ANA;---------GEN; mbufficall w9C; SWAPxchg rax,[rbp]; (_i7:; DUPadd rbp,8mov [rbp],rax; $7; OPTN ANDand rax,7; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 3; OPTN >>>shr rax,3; 1?or rax,raxjz _o7;; )jmp _i7_o7:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.f  |1001082|e     .  | calls:1 niv:1 len:49 ( a -- b )wA2:;---------OPT; C1DD78:mbuffi	; [ 0 ] ; C1DD7C:OVER	; [ 0 0 ] ; C1DD80:$ffff	; [ 5000000 5000000 ] ; C1DD84:AND	; [ 5000000 5000000 0 ] ; C1DD88:10000	; [ 5000000 5000000 ] ; C1DD8C:16	; [ 5000000 5000000 1 ] ; C1DD90:*>>	; [ 5000000 100000000 2 ] ; C1DD94:10000	; [ 5000000 100000000 ] ; C1DD98:+	; [ 5000000 100000000 3 ] ; C1DD9C:(	; [ 5000000 100000000 ] ; C1DDA0:10/mod	; [ 5000000 100000000 ] ; C1DDA4:$30	; [ 5000000 1 0 ] ; C1DDA8:+	; [ 5000000 5000001 4 ] ; C1DDAC:PICK2	; [ 5000000 5000001 0 ] ; C1DDB0:C!	; [ 5000000 5000001 105000000 ] ; C1DDB4:SWAP	; [ 5000000 5000001 ] ; C1DDB8:1	; [ 105000000 105000000 ] ; C1DDBC:-	; [ 105000000 105000000 5 ] ; C1DDC0:SWAP	; [ 105000000 105000000 ] ; C1DDC4:1?	; [ 5000000 5000001 ] ; C1DDC8:)	; [ 5000000 5000001 ] ; C1DDCC:DROP	; [ 5000000 5000001 ] ; C1DDD0:1	; [ 5000000 105000000 ] ; C1DDD4:+	; [ 5000000 6 ] ; C1DDD8:$2e	; [ 5000000 105000000 ] ; C1DDDC:OVER	; [ 5000000 7 ] ; C1DDE0:C!	; [ 5000000 7 700000000 ] ; C1DDE4:1	; [ 5000000 700000000 ] ; C1DDE8:-	; [ 5000000 8 ] ; C1DDEC:OVER	; [ 5000000 700000000 ] ; C1DDF0:ABS	; [ 5000000 5000000 ] ; C1DDF4:16	; [ 5000000 5000000 ] ; C1DDF8:>>	; [ 5000000 5000000 9 ] ; C1DDFC:(	; [ 5000000 5000000 ] ; C1DE00:10/mod	; [ 5000000 5000000 ] ; C1DE04:$30	; [ 5000000 1 0 ] ; C1DE08:+	; [ 5000000 5000001 A ] ; C1DE0C:PICK2	; [ 5000000 5000001 0 ] ; C1DE10:C!	; [ 5000000 5000001 105000000 ] ; C1DE14:SWAP	; [ 5000000 5000001 ] ; C1DE18:1	; [ 105000000 105000000 ] ; C1DE1C:-	; [ 105000000 105000000 B ] ; C1DE20:SWAP	; [ 105000000 105000000 ] ; C1DE24:1?	; [ 5000000 5000001 ] ; C1DE28:)	; [ 5000000 5000001 ] ; C1DE2C:DROP	; [ 5000000 5000001 ] ; C1DE30:SWAP	; [ 5000000 105000000 ] ; C1DE34:sign	; [ 105000000 5000000 ] ; C1DE38:;	; [ 0 ] ;---------ANA;---------GEN; mbufficall w9C; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ffff; OPTN ANDand rax,65535; 10000add rbp,8mov [rbp],raxmov rax,10000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 10000; OPTN +add rax,10000; (_i8:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o8;; )jmp _i8_o8:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; $2eadd rbp,8mov [rbp],raxmov rax,46; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; ABScqoadd rax,rdxxor rax,rdx; 16; OPTN >>sar rax,16; (_i9:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o9;; )jmp _i9_o9:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w9D; ;;--------------------------; :mark  |1082|e     .  | calls:1 niv:0 len:14 (  --  )wC1:;---------OPT; C1E43C:here	; [ ] ; C1E440:0?	; [ BE ] ; C1E444:(	; [ BE ] ; C1E448:MEM	; [ BE ] ; C1E44C:DUP	; [ BE 0 ] ; C1E450:'here	; [ 10000BE 0 ] ; C1E454:!	; [ 10000BE 0 BE ] ; C1E458:NIP	; [ 10000BE 1000000 ] ; C1E45C:)	; [ 1000000 ] ; C1E460:memmap>	; [ BE ] ; C1E464:!+	; [ BE C0 ] ; C1E468:'memmap>	; [ BE ] ; C1E46C:!	; [ BE C0 ] ; C1E470:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; 0?or rax,raxjnz _oA; (; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; DUPadd rbp,8mov [rbp],rax; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; NIPsub rbp,8; )_oA:; memmap>; OPTV !+mov rbx,qword[wC0]mov [rbx],raxadd rbx,8mov rax,rbx; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :empty  |1092|e  ;  .  | calls:1 niv:0 len:19 (  --  )wC2:;---------OPT; C1E474:memmap>	; [ ] ; C1E478:'memmap	; [ C0 ] ; C1E47C:=?	; [ C0 BF ] ; C1E480:(	; [ C0 ] ; C1E484:DROP	; [ C0 ] ; C1E488:MEM	; [ ] ; C1E48C:'here	; [ 0 ] ; C1E490:!	; [ 0 BE ] ; C1E494:;	; [ ] ; C1E498:)	; [ ] ; C1E49C:8	; [ C0 ] ; C1E4A0:-	; [ C0 0 ] ; C1E4A4:DUP	; [ C0 ] ; C1E4A8:'memmap>	; [ C0 C0 ] ; C1E4AC:!	; [ C0040000C0 C0 ] ; C1E4B0:@	; [ C0040000C0 ] ; C1E4B4:'here	; [ C0040000C0 ] ; C1E4B8:!	; [ C0040000C0 BE ] ; C1E4BC:;	; [ ] ;---------ANA;---------GEN; memmap>add rbp,8mov [rbp],raxmov rax,qword[wC0]; 'memmap; OPTAV =?cmp rax,wBFjne _oB; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_oB:; 8; OPTN -sub rax,8; DUPadd rbp,8mov [rbp],rax; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,s  |8082|e     .  | calls:8 niv:0 len:13 ( a --  )wCC:;---------OPT; C1E5D8:here	; [ 0 ] ; C1E5DC:SWAP	; [ 0 BE ] ; C1E5E0:(	; [ BE 0 ] ; C1E5E4:C@+	; [ BE 0 ] ; C1E5E8:1?	; [ 50000BE 0 ] ; C1E5EC:ROT	; [ 50000BE 0 ] ; C1E5F0:C!+	; [ 0 50000BE ] ; C1E5F4:SWAP	; [ 0 5000000 ] ; C1E5F8:)	; [ 5000000 0 ] ; C1E5FC:2DROP	; [ 5000000 0 ] ; C1E600:'here	; [ 5000000 ] ; C1E604:!	; [ 5000000 BE ] ; C1E608:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SWAPxchg rax,[rbp]; (_iC:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oC;; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iC_oC:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,w  |1082|e     .  | calls:1 niv:0 len:16 ( a --  )wCD:;---------OPT; C1E60C:here	; [ 0 ] ; C1E610:SWAP	; [ 0 BE ] ; C1E614:(	; [ BE 0 ] ; C1E618:C@+	; [ BE 0 ] ; C1E61C:$ff	; [ 50000BE 0 ] ; C1E620:AND	; [ 50000BE 0 0 ] ; C1E624:32	; [ 50000BE 0 ] ; C1E628:>?	; [ 50000BE 0 1 ] ; C1E62C:ROT	; [ 50000BE 0 ] ; C1E630:C!+	; [ 5000000 50000BE ] ; C1E634:SWAP	; [ 5000000 5000000 ] ; C1E638:)	; [ 5000000 5000000 ] ; C1E63C:2DROP	; [ 5000000 0 ] ; C1E640:'here	; [ 5000000 ] ; C1E644:!	; [ 5000000 BE ] ; C1E648:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SWAPxchg rax,[rbp]; (_iD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _oD; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iD_oD:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,l  |1092|e  ;  .  | calls:1 niv:0 len:27 ( a --  )wCE:;---------OPT; C1E64C:here	; [ 0 ] ; C1E650:SWAP	; [ 0 BE ] ; C1E654:(	; [ BE 0 ] ; C1E658:C@+	; [ BE 0 ] ; C1E65C:1?	; [ 50000BE 0 ] ; C1E660:10	; [ 50000BE 0 ] ; C1E664:=?	; [ 50000BE 0 0 ] ; C1E668:(	; [ 50000BE 0 ] ; C1E66C:3	; [ 50000BE 0 ] ; C1E670:+	; [ 50000BE 0 1 ] ; C1E674:)	; [ 50000BE 0 ] ; C1E678:13	; [ 50000BE 0 ] ; C1E67C:=?	; [ 50000BE 0 2 ] ; C1E680:(	; [ 50000BE 0 ] ; C1E684:2DROP	; [ 50000BE 0 ] ; C1E688:'here	; [ 50000BE ] ; C1E68C:!	; [ 50000BE BE ] ; C1E690:;	; [ ] ; C1E694:)	; [ ] ; C1E698:ROT	; [ 50000BE 0 ] ; C1E69C:C!+	; [ 5000000 50000BE ] ; C1E6A0:SWAP	; [ 5000000 5000000 ] ; C1E6A4:)	; [ 5000000 5000000 ] ; C1E6A8:2DROP	; [ 5000000 0 ] ; C1E6AC:'here	; [ 5000000 ] ; C1E6B0:!	; [ 5000000 BE ] ; C1E6B4:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SWAPxchg rax,[rbp]; (_iE:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oE;; 10; OPTN =?cmp rax,10jne _oF; (; 3; OPTN +add rax,3; )_oF:; 13; OPTN =?cmp rax,13jne _o10; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_o10:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iE_oE:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c0  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wD8:;---------OPT; C1E724:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :c1  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wD9:;---------OPT; C1E728:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :c2  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDA:;---------OPT; C1E72C:SWAP	; [ 1 0 ] ; C1E730:.b	; [ 0 1 ] ; C1E734:,s	; [ 0 0 ] ; C1E738:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .bcall w9F; ,sjmp wCC; ;;--------------------------; :c3  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wDB:;---------OPT; C1E73C:SWAP	; [ 1 0 ] ; C1E740:0?	; [ 0 1 ] ; C1E744:(	; [ 0 1 ] ; C1E748:DROP	; [ 0 1 ] ; C1E74C:;	; [ 0 ] ; C1E750:)	; [ 0 ] ; C1E754:,s	; [ 0 1 ] ; C1E758:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o11; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o11:; ,sjmp wCC; ;;--------------------------; :c4  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDC:;---------OPT; C1E75C:SWAP	; [ 1 0 ] ; C1E760:.d	; [ 0 1 ] ; C1E764:,s	; [ 0 0 ] ; C1E768:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .dcall w9E; ,sjmp wCC; ;;--------------------------; :c5  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wDD:;---------OPT; C1E76C:$25	; [ ] ; C1E770:,c	; [ 0 ] ; C1E5B0:here	; [ 0 ] ; C1E5B4:C!+	; [ 0 BE ] ; C1E5B8:'here	; [ 0 ] ; C1E5BC:!	; [ 0 BE ] ; C1E774:;	; [ ] ;---------ANA;---------GEN; $25add rbp,8mov [rbp],raxmov rax,37; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c6  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDE:;---------OPT; C1E778:SWAP	; [ 1 0 ] ; C1E77C:.f	; [ 0 1 ] ; C1E780:,s	; [ 0 0 ] ; C1E784:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .fcall wA2; ,sjmp wCC; ;;--------------------------; :c7  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wDF:;---------OPT; C1E788:SWAP	; [ 1 0 ] ; C1E78C:0?	; [ 0 1 ] ; C1E790:(	; [ 0 1 ] ; C1E794:DROP	; [ 0 1 ] ; C1E798:;	; [ 0 ] ; C1E79C:)	; [ 0 ] ; C1E7A0:,w	; [ 0 1 ] ; C1E7A4:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o12; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o12:; ,wjmp wCD; ;;--------------------------; :c8  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE0:;---------OPT; C1E7A8:SWAP	; [ 1 0 ] ; C1E7AC:.h	; [ 0 1 ] ; C1E7B0:,s	; [ 0 0 ] ; C1E7B4:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .hcall wA0; ,sjmp wCC; ;;--------------------------; :c9  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wE1:;---------OPT; C1E7B8:SWAP	; [ 1 0 ] ; C1E7BC:16	; [ 0 1 ] ; C1E7C0:>>	; [ 105000000 0 ] ; C1E7C4:.d	; [ 105000000 1 ] ; C1E7C8:,s	; [ 105000000 0 ] ; C1E7CC:;	; [ 105000000 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; .dcall w9E; ,sjmp wCC; ;;--------------------------; :ca  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wE2:;---------OPT; C1E7D0:SWAP	; [ 1 0 ] ; C1E7D4:$ffff	; [ 0 1 ] ; C1E7D8:AND	; [ 105000000 0 ] ; C1E7DC:.d	; [ 105000000 1 ] ; C1E7E0:,s	; [ 105000000 0 ] ; C1E7E4:;	; [ 105000000 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; $ffff; OPTN ANDand rax,65535; .dcall w9E; ,sjmp wCC; ;;--------------------------; :cb  |1001484|l'    . I| calls:1 niv:1 len:3 ( ab -- c )wE3:;---------OPT; C1E7E8:SWAP	; [ 1 0 ] ; C1E7EC:,c	; [ 0 1 ] ; C1E5B0:here	; [ 0 1 ] ; C1E5B4:C!+	; [ 105000000 BE ] ; C1E5B8:'here	; [ 105000000 1 ] ; C1E5BC:!	; [ 105000000 BE ] ; C1E7F0:;	; [ 105000000 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cc  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wE4:;---------OPT; C1E7F4:SWAP	; [ 1 0 ] ; C1E7F8:0?	; [ 0 1 ] ; C1E7FC:(	; [ 0 1 ] ; C1E800:DROP	; [ 0 1 ] ; C1E804:;	; [ 0 ] ; C1E808:)	; [ 0 ] ; C1E80C:,l	; [ 0 1 ] ; C1E810:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o13; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o13:; ,ljmp wCE; ;;--------------------------; :cd  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wE5:;---------OPT; C1E814:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :ce  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wE6:;---------OPT; C1E818:13	; [ ] ; C1E81C:,c	; [ 0 ] ; C1E5B0:here	; [ 0 ] ; C1E5B4:C!+	; [ 0 BE ] ; C1E5B8:'here	; [ 0 ] ; C1E5BC:!	; [ 0 BE ] ; C1E820:;	; [ ] ;---------ANA;---------GEN; 13add rbp,8mov [rbp],raxmov rax,13; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cf  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE7:;---------OPT; C1E824:SWAP	; [ 1 0 ] ; C1E828:.o	; [ 0 1 ] ; C1E82C:,s	; [ 0 0 ] ; C1E830:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .ocall wA1; ,sjmp wCC; ;;--------------------------; :,emit  |6001490|l  ;  . I| calls:1 niv:6 len:17 ( ab -- c )wE9:;---------OPT; C1E874:$25	; [ 1 0 ] ; C1E878:<>?	; [ 5000001 0 ] ; C1E87C:(	; [ 5000001 0 ] ; C1E880:,c	; [ 5000001 0 ] ; C1E5B0:here	; [ 5000001 0 ] ; C1E5B4:C!+	; [ 5000001 BE ] ; C1E5B8:'here	; [ 5000001 0 ] ; C1E5BC:!	; [ 5000001 BE ] ; C1E884:;	; [ 5000001 ] ; C1E888:)	; [ 5000001 ] ; C1E88C:DROP	; [ 5000001 0 ] ; C1E890:C@+	; [ 5000001 ] ; C1E894:$f	; [ 5000001 5000001 ] ; C1E898:AND	; [ 105000001 1 ] ; C1E89C:3	; [ 105000001 5000001 ] ; C1E8A0:<<	; [ 105000001 2 ] ; C1E8A4:'control	; [ 105000001 5000001 ] ; C1E8A8:+	; [ 105000001 E8 ] ; C1E8AC:@	; [ 105000001 5000001 ] ; C1E8B0:EX	; [ 105000001 5000001 ] ; C1E8B4:;	; [ 105000001 5000001 ] ;---------ANA;---------GEN; $25; OPTN <>?cmp rax,37je _o14; (; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_o14:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $f; OPTN ANDand rax,15; 3; OPTN <<shl rax,3; 'control; OPTAV +add rax,wE8; @mov rax,qword[rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :sprint  |1001482|e     . I| calls:1 niv:1 len:9 ( a -- b )wEC:;---------OPT; C1E8DC:mark	; [ 0 ] ; C1E8E0:'buff	; [ 0 ] ; C1E8E4:'here	; [ 0 EB ] ; C1E8E8:!	; [ EB03000000 BE ] ; C1E8EC:,print	; [ EB03000000 ] ; C1E8B8:(	; [ EB03000000 ] ; C1E8BC:C@+	; [ EB03000000 ] ; C1E8C0:1?	; [ EB03000000 EB03000000 ] ; C1E8C4:,emit	; [ EB03000000 EB03000000 ] ; C1E8C8:)	; [ 0 ] ; C1E8CC:2DROP	; [ EB03000000 EB03000000 ] ; C1E8F0:,eol	; [ ] ; C1E6F8:0	; [ ] ; C1E6FC:,c	; [ 0 ] ; C1E5B0:here	; [ 0 ] ; C1E5B4:C!+	; [ 0 BE ] ; C1E5B8:'here	; [ 0 ] ; C1E5BC:!	; [ 0 BE ] ; C1E8F4:empty	; [ ] ; C1E8F8:'buff	; [ ] ; C1E8FC:;	; [ EB ] ;---------ANA;---------GEN; markcall wC1; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; (_i15:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o15;; ,emitcall wE9; )jmp _i15_o15:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; ;ret;--------------------------; :key  |1001482|e     . I| calls:1 niv:1 len:9 (  -- a )wEE:;---------OPT; C1E904:stdin	; [ ] ; C1E908:'kb	; [ 40 ] ; C1E90C:1	; [ 40 ED ] ; C1E910:0	; [ ED03000040 0 ] ; C1E914:0	; [ ED03000040 0 1 ] ; C1E918:ReadFile	; [ ED03000040 100000000 2 ] ; C1C054:sys-ReadFile	; [ ED03000040 100000000 2 ] ; C1C058:SYS5	; [ ED03000040 100000000 2 3 ] ; C1E91C:DROP	; [ ED03000040 ] ; C1E920:kb	; [ ] ; C1E924:;	; [ ED ] ;---------ANA;---------GEN; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; 'kbadd rbp,8mov [rbp],raxmov rax,wED; 1add rbp,8mov [rbp],raxmov rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-ReadFileadd rbp,8mov [rbp],raxmov rax,qword[w3]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; kbadd rbp,8mov [rbp],raxmov rax,qword[wED]; ;ret;--------------------------; :.input  |2001082|e     .  | calls:1 niv:2 len:13 (  --  )w134:;---------OPT; C1EDF0:'pad	; [ ]; C1EDF4:(	; [ 133 ]; C1EDF8:key	; [ 133 ]; C1EDFC:13	; [ 133 0 ]; C1EE00:<>?	; [ 5000133 0 ]; C1EE04:SWAP	; [ 5000133 0 ]; C1EE08:C!+	; [ 0 5000133 ]; C1EE0C:)	; [ 0 ]; C1EE10:DROP	; [ 0 0 ]; C1EE14:0	; [ 0 ]; C1EE18:SWAP	; [ 0 1 ]; C1EE1C:C!	; [ 1 0 ]; C1EE20:;	; [ ];---------ANA;---------GEN; 'padadd rbp,8mov [rbp],raxmov rax,w133; (_i16:; keycall wEE; 13; OPTN <>?cmp rax,13je _o16; SWAPxchg rax,[rbp]; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; )jmp _i16_o16:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :  |3001580|l     .iI| calls:1 niv:3 len:5 (  --  )INICIO:;---------OPT; C1EE6C:windows	; [ ] ; C1EE70:"test"	; [ ] ; C1EE74:.print	; [ 26 ] ; C1EAE0:sprint	; [ 26 ] ; C1EAE4:count	; [ 0 ] ; C1EAE8:type	; [ 1 0 ] ; C1E938:stdout	; [ 1 0 ] ; C1E93C:ROT	; [ 5000001 41 ] ; C1E940:ROT	; [ 0 5000001 ] ; C1E944:0	; [ 4104000000 0 ] ; C1E948:0	; [ 4104000000 0 0 ] ; C1E94C:WriteFile	; [ 4104000000 0 1 ] ; C1C060:sys-WriteFile	; [ 4104000000 0 1 ] ; C1C064:SYS5	; [ 4104000000 0 1 4 ] ; C1E950:DROP	; [ 4104000000 ] ; C1EE78:.input	; [ ] ; C1EE7C:;	; [ ] ;---------ANA;---------GEN; windowscall w43; "test"add rbp,8mov [rbp],raxmov rax,str26; sprintcall wEC; countcall w91; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; .inputcall w134; ;ret 