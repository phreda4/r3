;---r3 compiler code.asm; r3/editor/img-edit.r3;--------------------------; :  |1080|l     .  | calls:1 niv:0 len:174 (  --  )w44:;---------OPT; AB765B:"KERNEL32.DLL"	; [ ] ; AB765F:LOADLIB	; [ 4F78 ] ; AB7663:DUP	; [ 4F78 ] ; AB7667:"AllocConsole"	; [ 4F78 4F78 ] ; AB766B:GETPROC	; [ 4F78 4F78 4F95 ] ; AB766F:'sys-AllocConsole	; [ 4F78 4F78 ] ; AB7673:!	; [ 4F78 4F78 0 ] ; AB7677:DUP	; [ 4F78 ] ; AB767B:"ExitProcess"	; [ 4F78 4F78 ] ; AB767F:GETPROC	; [ 4F78 4F78 4FC5 ] ; AB7683:'sys-ExitProcess	; [ 4F78 4F78 ] ; AB7687:!	; [ 4F78 4F78 1 ] ; AB768B:DUP	; [ 4F78 ] ; AB768F:"GetStdHandle"	; [ 4F78 4F78 ] ; AB7693:GETPROC	; [ 4F78 4F78 4FF4 ] ; AB7697:'sys-GetStdHandle	; [ 4F78 4F78 ] ; AB769B:!	; [ 4F78 4F78 2 ] ; AB769F:DUP	; [ 4F78 ] ; AB76A3:"ReadFile"	; [ 4F78 4F78 ] ; AB76A7:GETPROC	; [ 4F78 4F78 5026 ] ; AB76AB:'sys-ReadFile	; [ 4F78 4F78 ] ; AB76AF:!	; [ 4F78 4F78 3 ] ; AB76B3:DUP	; [ 4F78 ] ; AB76B7:"WriteFile"	; [ 4F78 4F78 ] ; AB76BB:GETPROC	; [ 4F78 4F78 504E ] ; AB76BF:'sys-WriteFile	; [ 4F78 4F78 ] ; AB76C3:!	; [ 4F78 4F78 4 ] ; AB76C7:DUP	; [ 4F78 ] ; AB76CB:"GetConsoleMode"	; [ 4F78 4F78 ] ; AB76CF:GETPROC	; [ 4F78 4F78 507A ] ; AB76D3:'sys-GetConsoleMode	; [ 4F78 4F78 ] ; AB76D7:!	; [ 4F78 4F78 5 ] ; AB76DB:DUP	; [ 4F78 ] ; AB76DF:"SetConsoleMode"	; [ 4F78 4F78 ] ; AB76E3:GETPROC	; [ 4F78 4F78 50AE ] ; AB76E7:'sys-SetConsoleMode	; [ 4F78 4F78 ] ; AB76EB:!	; [ 4F78 4F78 6 ] ; AB76EF:DUP	; [ 4F78 ] ; AB76F3:"PeekConsoleInputW"	; [ 4F78 4F78 ] ; AB76F7:GETPROC	; [ 4F78 4F78 50E2 ] ; AB76FB:'sys-PeekConsoleInput	; [ 4F78 4F78 ] ; AB76FF:!	; [ 4F78 4F78 7 ] ; AB7703:DUP	; [ 4F78 ] ; AB7707:"ReadConsoleInputW"	; [ 4F78 4F78 ] ; AB770B:GETPROC	; [ 4F78 4F78 511B ] ; AB770F:'sys-ReadConsoleInput	; [ 4F78 4F78 ] ; AB7713:!	; [ 4F78 4F78 8 ] ; AB7717:DUP	; [ 4F78 ] ; AB771B:"WriteConsole"	; [ 4F78 4F78 ] ; AB771F:GETPROC	; [ 4F78 4F78 5154 ] ; AB7723:'sys-WriteConsole	; [ 4F78 4F78 ] ; AB7727:!	; [ 4F78 4F78 9 ] ; AB772B:DUP	; [ 4F78 ] ; AB772F:"FlushConsoleInputBuffer"	; [ 4F78 4F78 ] ; AB7733:GETPROC	; [ 4F78 4F78 5186 ] ; AB7737:'sys-FlushConsoleInputBuffer	; [ 4F78 4F78 ] ; AB773B:!	; [ 4F78 4F78 A ] ; AB773F:DUP	; [ 4F78 ] ; AB7743:"Sleep"	; [ 4F78 4F78 ] ; AB7747:GETPROC	; [ 4F78 4F78 51CC ] ; AB774B:'sys-Sleep	; [ 4F78 4F78 ] ; AB774F:!	; [ 4F78 4F78 B ] ; AB7753:DUP	; [ 4F78 ] ; AB7757:"WaitForSingleObject"	; [ 4F78 4F78 ] ; AB775B:GETPROC	; [ 4F78 4F78 51EE ] ; AB775F:'sys-WaitForSingleObject	; [ 4F78 4F78 ] ; AB7763:!	; [ 4F78 4F78 C ] ; AB7767:DUP	; [ 4F78 ] ; AB776B:"GetLastError"	; [ 4F78 4F78 ] ; AB776F:GETPROC	; [ 4F78 4F78 522D ] ; AB7773:'sys-GetLastError	; [ 4F78 4F78 ] ; AB7777:!	; [ 4F78 4F78 D ] ; AB777B:DUP	; [ 4F78 ] ; AB777F:"CreateFileA"	; [ 4F78 4F78 ] ; AB7783:GETPROC	; [ 4F78 4F78 525E ] ; AB7787:'sys-CreateFile	; [ 4F78 4F78 ] ; AB778B:!	; [ 4F78 4F78 E ] ; AB778F:DUP	; [ 4F78 ] ; AB7793:"CloseHandle"	; [ 4F78 4F78 ] ; AB7797:GETPROC	; [ 4F78 4F78 528C ] ; AB779B:'sys-CloseHandle	; [ 4F78 4F78 ] ; AB779F:!	; [ 4F78 4F78 F ] ; AB77A3:DUP	; [ 4F78 ] ; AB77A7:"FlushFileBuffers"	; [ 4F78 4F78 ] ; AB77AB:GETPROC	; [ 4F78 4F78 52BA ] ; AB77AF:'sys-FlushFileBuffers	; [ 4F78 4F78 ] ; AB77B3:!	; [ 4F78 4F78 10 ] ; AB77B7:DUP	; [ 4F78 ] ; AB77BB:"DeleteFileA"	; [ 4F78 4F78 ] ; AB77BF:GETPROC	; [ 4F78 4F78 52F2 ] ; AB77C3:'sys-DeleteFile	; [ 4F78 4F78 ] ; AB77C7:!	; [ 4F78 4F78 11 ] ; AB77CB:DUP	; [ 4F78 ] ; AB77CF:"MoveFileA"	; [ 4F78 4F78 ] ; AB77D3:GETPROC	; [ 4F78 4F78 531F ] ; AB77D7:'sys-MoveFile	; [ 4F78 4F78 ] ; AB77DB:!	; [ 4F78 4F78 12 ] ; AB77DF:DUP	; [ 4F78 ] ; AB77E3:"SetFilePointer"	; [ 4F78 4F78 ] ; AB77E7:GETPROC	; [ 4F78 4F78 5348 ] ; AB77EB:'sys-SetFilePointer	; [ 4F78 4F78 ] ; AB77EF:!	; [ 4F78 4F78 13 ] ; AB77F3:DUP	; [ 4F78 ] ; AB77F7:"SetEndOfFile"	; [ 4F78 4F78 ] ; AB77FB:GETPROC	; [ 4F78 4F78 537C ] ; AB77FF:'sys-SetEndOfFile	; [ 4F78 4F78 ] ; AB7803:!	; [ 4F78 4F78 14 ] ; AB7807:DUP	; [ 4F78 ] ; AB780B:"GetFileSize"	; [ 4F78 4F78 ] ; AB780F:GETPROC	; [ 4F78 4F78 53AC ] ; AB7813:'sys-GetFileSize	; [ 4F78 4F78 ] ; AB7817:!	; [ 4F78 4F78 15 ] ; AB781B:DUP	; [ 4F78 ] ; AB781F:"GetProcessHeap"	; [ 4F78 4F78 ] ; AB7823:GETPROC	; [ 4F78 4F78 53DB ] ; AB7827:'sys-GetProcessHeap	; [ 4F78 4F78 ] ; AB782B:!	; [ 4F78 4F78 16 ] ; AB782F:DUP	; [ 4F78 ] ; AB7833:"HeapAlloc"	; [ 4F78 4F78 ] ; AB7837:GETPROC	; [ 4F78 4F78 540F ] ; AB783B:'sys-HeapAlloc	; [ 4F78 4F78 ] ; AB783F:!	; [ 4F78 4F78 17 ] ; AB7843:DUP	; [ 4F78 ] ; AB7847:"HeapFree"	; [ 4F78 4F78 ] ; AB784B:GETPROC	; [ 4F78 4F78 5439 ] ; AB784F:'sys-HeapFree	; [ 4F78 4F78 ] ; AB7853:!	; [ 4F78 4F78 18 ] ; AB7857:DUP	; [ 4F78 ] ; AB785B:"HeapReAlloc"	; [ 4F78 4F78 ] ; AB785F:GETPROC	; [ 4F78 4F78 5461 ] ; AB7863:'sys-HeapReAlloc	; [ 4F78 4F78 ] ; AB7867:!	; [ 4F78 4F78 19 ] ; AB786B:DUP	; [ 4F78 ] ; AB786F:"GetLocalTime"	; [ 4F78 4F78 ] ; AB7873:GETPROC	; [ 4F78 4F78 5490 ] ; AB7877:'sys-GetLocalTime	; [ 4F78 4F78 ] ; AB787B:!	; [ 4F78 4F78 1B ] ; AB787F:DUP	; [ 4F78 ] ; AB7883:"FindFirstFileA"	; [ 4F78 4F78 ] ; AB7887:GETPROC	; [ 4F78 4F78 54C0 ] ; AB788B:'sys-FindFirstFile	; [ 4F78 4F78 ] ; AB788F:!	; [ 4F78 4F78 1C ] ; AB7893:DUP	; [ 4F78 ] ; AB7897:"FindNextFileA"	; [ 4F78 4F78 ] ; AB789B:GETPROC	; [ 4F78 4F78 54F3 ] ; AB789F:'sys-FindNextFile	; [ 4F78 4F78 ] ; AB78A3:!	; [ 4F78 4F78 1D ] ; AB78A7:DUP	; [ 4F78 ] ; AB78AB:"FindClose"	; [ 4F78 4F78 ] ; AB78AF:GETPROC	; [ 4F78 4F78 5524 ] ; AB78B3:'sys-FindClose	; [ 4F78 4F78 ] ; AB78B7:!	; [ 4F78 4F78 1E ] ; AB78BB:DUP	; [ 4F78 ] ; AB78BF:"CreateProcessA"	; [ 4F78 4F78 ] ; AB78C3:GETPROC	; [ 4F78 4F78 554F ] ; AB78C7:'sys-CreateProcess	; [ 4F78 4F78 ] ; AB78CB:!	; [ 4F78 4F78 1F ] ; AB78CF:DUP	; [ 4F78 ] ; AB78D3:"GetTickCount"	; [ 4F78 4F78 ] ; AB78D7:GETPROC	; [ 4F78 4F78 5582 ] ; AB78DB:'sys-GetTickCount	; [ 4F78 4F78 ] ; AB78DF:!	; [ 4F78 4F78 1A ] ; AB78E3:DUP	; [ 4F78 ] ; AB78E7:"GetConsoleScreenBufferInfo"	; [ 4F78 4F78 ] ; AB78EB:GETPROC	; [ 4F78 4F78 55B2 ] ; AB78EF:'sys-GetConsoleScreenBufferInfo	; [ 4F78 4F78 ] ; AB78F3:!	; [ 4F78 4F78 20 ] ; AB78F7:DUP	; [ 4F78 ] ; AB78FB:"GetCommandLineA"	; [ 4F78 4F78 ] ; AB78FF:GETPROC	; [ 4F78 4F78 55FE ] ; AB7903:'sys-GetCommandLine	; [ 4F78 4F78 ] ; AB7907:!	; [ 4F78 4F78 21 ] ; AB790B:DROP	; [ 4F78 ] ; AB790F:;	; [ ] ;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str4F78; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4F95; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4FC5; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4FF4; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5026; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str504E; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str507A; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str50AE; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "PeekConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str50E2; 'sys-PeekConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str511B; 'sys-ReadConsoleInput; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5154; 'sys-WriteConsole; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5186; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str51CC; 'sys-Sleep; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str51EE; 'sys-WaitForSingleObject; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str522D; 'sys-GetLastError; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str525E; 'sys-CreateFile; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str528C; 'sys-CloseHandle; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str52BA; 'sys-FlushFileBuffers; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str52F2; 'sys-DeleteFile; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str531F; 'sys-MoveFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5348; 'sys-SetFilePointer; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str537C; 'sys-SetEndOfFile; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str53AC; 'sys-GetFileSize; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str53DB; 'sys-GetProcessHeap; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str540F; 'sys-HeapAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5439; 'sys-HeapFree; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5461; 'sys-HeapReAlloc; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5490; 'sys-GetLocalTime; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str54C0; 'sys-FindFirstFile; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str54F3; 'sys-FindNextFile; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5524; 'sys-FindClose; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str554F; 'sys-CreateProcess; OPTAV !mov qword[w1F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str5582; 'sys-GetTickCount; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str55B2; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w20],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetCommandLineA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str55FE; 'sys-GetCommandLine; OPTAV !mov qword[w21],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :clampmax  |2082|e     .  | calls:2 niv:0 len:9 ( ab -- c )w62:;---------OPT; AB7D8F:SWAP	; [ 1 0 ] ; AB7D93:OVER	; [ 0 1 ] ; AB7D97:-	; [ 0 1 0 ] ; AB7D9B:DUP	; [ 0 1 ] ; AB7D9F:63	; [ 0 1 1 ] ; AB7DA3:>>	; [ 0 1 1 0 ] ; AB7DA7:AND	; [ 0 1 1 ] ; AB7DAB:+	; [ 0 1 ] ; AB7DAF:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :clampmin  |2082|e     .  | calls:2 niv:0 len:9 ( ab -- c )w63:;---------OPT; AB7DB3:DUP	; [ 1 0 ] ; AB7DB7:ROT	; [ 1 0 0 ] ; AB7DBB:-	; [ 0 0 1 ] ; AB7DBF:DUP	; [ 0 0 ] ; AB7DC3:63	; [ 0 0 0 ] ; AB7DC7:>>	; [ 0 0 0 0 ] ; AB7DCB:AND	; [ 0 0 0 ] ; AB7DCF:-	; [ 0 0 ] ; AB7DD3:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :10/mod  |3082|e     .  | calls:3 niv:0 len:49 ( a -- bc )w86:;---------OPT; AB8787:DUP	; [ 0 ] ; AB878B:1	; [ 0 0 ] ; AB878F:>>	; [ 0 0 0 ] ; AB8793:OVER	; [ 0 0 ] ; AB8797:2	; [ 0 0 0 ] ; AB879B:>>	; [ 0 0 0 1 ] ; AB879F:+	; [ 0 0 0 ] ; AB87A3:DUP	; [ 0 0 ] ; AB87A7:4	; [ 0 0 0 ] ; AB87AB:>>	; [ 0 0 0 2 ] ; AB87AF:+	; [ 0 0 0 ] ; AB87B3:DUP	; [ 0 0 ] ; AB87B7:8	; [ 0 0 0 ] ; AB87BB:>>	; [ 0 0 0 3 ] ; AB87BF:+	; [ 0 0 0 ] ; AB87C3:DUP	; [ 0 0 ] ; AB87C7:16	; [ 0 0 0 ] ; AB87CB:>>	; [ 0 0 0 4 ] ; AB87CF:+	; [ 0 0 0 ] ; AB87D3:DUP	; [ 0 0 ] ; AB87D7:32	; [ 0 0 0 ] ; AB87DB:>>	; [ 0 0 0 5 ] ; AB87DF:+	; [ 0 0 0 ] ; AB87E3:3	; [ 0 0 ] ; AB87E7:>>	; [ 0 0 6 ] ; AB87EB:OVER	; [ 0 0 ] ; AB87EF:OVER	; [ 0 0 0 ] ; AB87F3:DUP	; [ 0 0 0 0 ] ; AB87F7:2	; [ 0 0 0 0 0 ] ; AB87FB:<<	; [ 0 0 0 0 0 7 ] ; AB87FF:+	; [ 0 0 0 0 0 ] ; AB8803:1	; [ 0 0 0 0 ] ; AB8807:<<	; [ 0 0 0 0 8 ] ; AB880B:-	; [ 0 0 0 0 ] ; AB880F:6	; [ 0 0 0 ] ; AB8813:+	; [ 0 0 0 9 ] ; AB8817:4	; [ 0 0 0 ] ; AB881B:>>	; [ 0 0 0 A ] ; AB881F:+	; [ 0 0 0 ] ; AB8823:SWAP	; [ 0 0 ] ; AB8827:OVER	; [ 0 0 ] ; AB882B:DUP	; [ 0 0 0 ] ; AB882F:2	; [ 0 0 0 0 ] ; AB8833:<<	; [ 0 0 0 0 B ] ; AB8837:+	; [ 0 0 0 0 ] ; AB883B:1	; [ 0 0 0 ] ; AB883F:<<	; [ 0 0 0 C ] ; AB8843:-	; [ 0 0 0 ] ; AB8847:;	; [ 0 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :strcpy  |2082|e     .  | calls:2 niv:0 len:11 ( ab --  )w91:;---------OPT; AB893F:(	; [ 1 0 ] ; AB8943:SWAP	; [ 1 0 ] ; AB8947:C@+	; [ 0 1 ] ; AB894B:1?	; [ 0 1 1 ] ; AB894F:ROT	; [ 0 1 1 ] ; AB8953:C!+	; [ 1 1 0 ] ; AB8957:)	; [ 1 1 ] ; AB895B:NIP	; [ 0 1 1 ] ; AB895F:SWAP	; [ 0 1 ] ; AB8963:C!	; [ 1 0 ] ; AB8967:;	; [ ] ;---------ANA;---------GEN; (_i0:; SWAPxchg rax,[rbp]; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o0;; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; )jmp _i0_o0:; NIPsub rbp,8; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :count  |1082|e     .  | calls:1 niv:0 len:13 ( a -- bc )w99:;---------OPT; AB8B13:0	; [ 0 ] ; AB8B17:OVER	; [ 0 0 ] ; AB8B1B:(	; [ 0 0 0 ] ; AB8B1F:C@+	; [ 0 0 0 ] ; AB8B23:1?	; [ 0 0 0 0 ] ; AB8B27:DROP	; [ 0 0 0 0 ] ; AB8B2B:SWAP	; [ 0 0 0 ] ; AB8B2F:1	; [ 0 0 0 ] ; AB8B33:+	; [ 0 0 0 1 ] ; AB8B37:SWAP	; [ 0 0 0 ] ; AB8B3B:)	; [ 0 0 0 ] ; AB8B3F:2DROP	; [ 0 0 0 0 ] ; AB8B43:;	; [ 0 0 ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i1:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1;; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; )jmp _i1_o1:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :mbuffi  |5080|l     .  | calls:5 niv:0 len:9 (  -- a )wA4:;---------OPT; AB8E9F:'mbuff	; [ ] ; AB8EA3:64	; [ A3 ] ; AB8EA7:+	; [ A3 0 ] ; AB8EAB:0	; [ A3 ] ; AB8EAF:OVER	; [ A3 1 ] ; AB8EB3:C!	; [ A3 1 A3 ] ; AB8EB7:1	; [ A3 ] ; AB8EBB:-	; [ A3 2 ] ; AB8EBF:;	; [ A3 ] ;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,wA3; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; ;ret;--------------------------; :sign  |2090|l  ;  .  | calls:2 niv:0 len:12 ( ab -- c )wA5:;---------OPT; AB8EC3:-?	; [ 1 0 ] ; AB8EC7:(	; [ 1 0 ] ; AB8ECB:DROP	; [ 1 0 ] ; AB8ECF:$2d	; [ 1 ] ; AB8ED3:OVER	; [ 1 0 ] ; AB8ED7:C!	; [ 1 0 1 ] ; AB8EDB:;	; [ 1 ] ; AB8EDF:)	; [ 1 ] ; AB8EE3:DROP	; [ 1 0 ] ; AB8EE7:1	; [ 1 ] ; AB8EEB:+	; [ 1 1 ] ; AB8EEF:;	; [ 1 ] ;---------ANA;---------GEN; -?or rax,raxjns _o2; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o2:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.d  |1003092|e  ;  .  | calls:3 niv:1 len:26 ( a -- b )wA6:;---------OPT; AB8EF3:DUP	; [ 0 ] ; AB8EF7:ABS	; [ 0 0 ] ; AB8EFB:-?	; [ 0 0 ] ; AB8EFF:(	; [ 0 0 ] ; AB8F03:2DROP	; [ 0 0 ] ; AB8F07:"-9223372036854775808"	; [ ] ; AB8F0B:;	; [ 693F ] ; AB8F0F:)	; [ 693F ] ; AB8F13:mbuffi	; [ 0 0 ] ; AB8F17:SWAP	; [ 0 0 0 ] ; AB8F1B:(	; [ 0 0 0 ] ; AB8F1F:10/mod	; [ 0 0 0 ] ; AB8F23:$30	; [ 0 0 1 0 ] ; AB8F27:+	; [ 0 0 1 0 0 ] ; AB8F2B:PICK2	; [ 0 0 1 0 ] ; AB8F2F:C!	; [ 0 0 1 0 0 ] ; AB8F33:SWAP	; [ 0 0 1 ] ; AB8F37:1	; [ 0 1 0 ] ; AB8F3B:-	; [ 0 1 0 1 ] ; AB8F3F:SWAP	; [ 0 1 0 ] ; AB8F43:1?	; [ 0 0 1 ] ; AB8F47:)	; [ 0 0 1 ] ; AB8F4B:DROP	; [ 0 0 1 ] ; AB8F4F:SWAP	; [ 0 0 ] ; AB8F53:sign	; [ 0 0 ] ; AB8F57:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o3; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str693F; ;ret; )_o3:; mbufficall wA4; SWAPxchg rax,[rbp]; (_i4:; 10/modcall w86; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o4;; )jmp _i4_o4:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp wA5; ;;--------------------------; :.b  |1001082|e     .  | calls:1 niv:1 len:22 ( a -- b )wA7:;---------OPT; AB8F5B:mbuffi	; [ 0 ] ; AB8F5F:SWAP	; [ 0 0 ] ; AB8F63:(	; [ 0 0 ] ; AB8F67:DUP	; [ 0 0 ] ; AB8F6B:$1	; [ 0 0 0 ] ; AB8F6F:AND	; [ 0 0 0 0 ] ; AB8F73:$30	; [ 0 0 0 ] ; AB8F77:+	; [ 0 0 0 1 ] ; AB8F7B:PICK2	; [ 0 0 0 ] ; AB8F7F:C!	; [ 0 0 0 0 ] ; AB8F83:SWAP	; [ 0 0 ] ; AB8F87:1	; [ 0 0 ] ; AB8F8B:-	; [ 0 0 2 ] ; AB8F8F:SWAP	; [ 0 0 ] ; AB8F93:1	; [ 0 0 ] ; AB8F97:>>>	; [ 0 0 3 ] ; AB8F9B:1?	; [ 0 0 ] ; AB8F9F:)	; [ 0 0 ] ; AB8FA3:DROP	; [ 0 0 ] ; AB8FA7:1	; [ 0 ] ; AB8FAB:+	; [ 0 4 ] ; AB8FAF:;	; [ 0 ] ;---------ANA;---------GEN; mbufficall wA4; SWAPxchg rax,[rbp]; (_i5:; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN >>>shr rax,1; 1?or rax,raxjz _o5;; )jmp _i5_o5:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.h  |1001082|e     .  | calls:1 niv:1 len:28 ( a -- b )wA8:;---------OPT; AB8FB3:mbuffi	; [ 0 ] ; AB8FB7:SWAP	; [ 0 0 ] ; AB8FBB:(	; [ 0 0 ] ; AB8FBF:DUP	; [ 0 0 ] ; AB8FC3:$f	; [ 0 0 0 ] ; AB8FC7:AND	; [ 0 0 0 0 ] ; AB8FCB:$30	; [ 0 0 0 ] ; AB8FCF:+	; [ 0 0 0 1 ] ; AB8FD3:$39	; [ 0 0 0 ] ; AB8FD7:>?	; [ 0 0 0 2 ] ; AB8FDB:(	; [ 0 0 0 ] ; AB8FDF:7	; [ 0 0 0 ] ; AB8FE3:+	; [ 0 0 0 3 ] ; AB8FE7:)	; [ 0 0 0 ] ; AB8FEB:PICK2	; [ 0 0 0 ] ; AB8FEF:C!	; [ 0 0 0 0 ] ; AB8FF3:SWAP	; [ 0 0 ] ; AB8FF7:1	; [ 0 0 ] ; AB8FFB:-	; [ 0 0 4 ] ; AB8FFF:SWAP	; [ 0 0 ] ; AB9003:4	; [ 0 0 ] ; AB9007:>>>	; [ 0 0 5 ] ; AB900B:1?	; [ 0 0 ] ; AB900F:)	; [ 0 0 ] ; AB9013:DROP	; [ 0 0 ] ; AB9017:1	; [ 0 ] ; AB901B:+	; [ 0 6 ] ; AB901F:;	; [ 0 ] ;---------ANA;---------GEN; mbufficall wA4; SWAPxchg rax,[rbp]; (_i6:; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; $30; OPTN +add rax,48; $39; OPTN >?cmp rax,57jle _o7; (; 7; OPTN +add rax,7; )_o7:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 4; OPTN >>>shr rax,4; 1?or rax,raxjz _o6;; )jmp _i6_o6:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.o  |1001082|e     .  | calls:1 niv:1 len:22 ( a -- b )wA9:;---------OPT; AB9023:mbuffi	; [ 0 ] ; AB9027:SWAP	; [ 0 0 ] ; AB902B:(	; [ 0 0 ] ; AB902F:DUP	; [ 0 0 ] ; AB9033:$7	; [ 0 0 0 ] ; AB9037:AND	; [ 0 0 0 0 ] ; AB903B:$30	; [ 0 0 0 ] ; AB903F:+	; [ 0 0 0 1 ] ; AB9043:PICK2	; [ 0 0 0 ] ; AB9047:C!	; [ 0 0 0 0 ] ; AB904B:SWAP	; [ 0 0 ] ; AB904F:1	; [ 0 0 ] ; AB9053:-	; [ 0 0 2 ] ; AB9057:SWAP	; [ 0 0 ] ; AB905B:3	; [ 0 0 ] ; AB905F:>>>	; [ 0 0 3 ] ; AB9063:1?	; [ 0 0 ] ; AB9067:)	; [ 0 0 ] ; AB906B:DROP	; [ 0 0 ] ; AB906F:1	; [ 0 ] ; AB9073:+	; [ 0 4 ] ; AB9077:;	; [ 0 ] ;---------ANA;---------GEN; mbufficall wA4; SWAPxchg rax,[rbp]; (_i8:; DUPadd rbp,8mov [rbp],rax; $7; OPTN ANDand rax,7; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 3; OPTN >>>shr rax,3; 1?or rax,raxjz _o8;; )jmp _i8_o8:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.f  |1001082|e     .  | calls:1 niv:1 len:49 ( a -- b )wAA:;---------OPT; AB907B:mbuffi	; [ 0 ] ; AB907F:OVER	; [ 0 0 ] ; AB9083:$ffff	; [ 0 0 0 ] ; AB9087:AND	; [ 0 0 0 0 ] ; AB908B:10000	; [ 0 0 0 ] ; AB908F:16	; [ 0 0 0 1 ] ; AB9093:*>>	; [ 0 0 0 1 2 ] ; AB9097:10000	; [ 0 0 0 ] ; AB909B:+	; [ 0 0 0 3 ] ; AB909F:(	; [ 0 0 0 ] ; AB90A3:10/mod	; [ 0 0 0 ] ; AB90A7:$30	; [ 0 0 1 0 ] ; AB90AB:+	; [ 0 0 1 0 4 ] ; AB90AF:PICK2	; [ 0 0 1 0 ] ; AB90B3:C!	; [ 0 0 1 0 0 ] ; AB90B7:SWAP	; [ 0 0 1 ] ; AB90BB:1	; [ 0 1 0 ] ; AB90BF:-	; [ 0 1 0 5 ] ; AB90C3:SWAP	; [ 0 1 0 ] ; AB90C7:1?	; [ 0 0 1 ] ; AB90CB:)	; [ 0 0 1 ] ; AB90CF:DROP	; [ 0 0 1 ] ; AB90D3:1	; [ 0 0 ] ; AB90D7:+	; [ 0 0 6 ] ; AB90DB:$2e	; [ 0 0 ] ; AB90DF:OVER	; [ 0 0 7 ] ; AB90E3:C!	; [ 0 0 7 0 ] ; AB90E7:1	; [ 0 0 ] ; AB90EB:-	; [ 0 0 8 ] ; AB90EF:OVER	; [ 0 0 ] ; AB90F3:ABS	; [ 0 0 0 ] ; AB90F7:16	; [ 0 0 0 ] ; AB90FB:>>	; [ 0 0 0 9 ] ; AB90FF:(	; [ 0 0 0 ] ; AB9103:10/mod	; [ 0 0 0 ] ; AB9107:$30	; [ 0 0 1 0 ] ; AB910B:+	; [ 0 0 1 0 A ] ; AB910F:PICK2	; [ 0 0 1 0 ] ; AB9113:C!	; [ 0 0 1 0 0 ] ; AB9117:SWAP	; [ 0 0 1 ] ; AB911B:1	; [ 0 1 0 ] ; AB911F:-	; [ 0 1 0 B ] ; AB9123:SWAP	; [ 0 1 0 ] ; AB9127:1?	; [ 0 0 1 ] ; AB912B:)	; [ 0 0 1 ] ; AB912F:DROP	; [ 0 0 1 ] ; AB9133:SWAP	; [ 0 0 ] ; AB9137:sign	; [ 0 0 ] ; AB913B:;	; [ 0 ] ;---------ANA;---------GEN; mbufficall wA4; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ffff; OPTN ANDand rax,65535; 10000add rbp,8mov [rbp],raxmov rax,10000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 10000; OPTN +add rax,10000; (_i9:; 10/modcall w86; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o9;; )jmp _i9_o9:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; $2eadd rbp,8mov [rbp],raxmov rax,46; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; ABScqoadd rax,rdxxor rax,rdx; 16; OPTN >>sar rax,16; (_iA:; 10/modcall w86; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _oA;; )jmp _iA_oA:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp wA5; ;;--------------------------; :empty  |1092|e  ;  .  | calls:1 niv:0 len:19 (  --  )wCC:;---------OPT; AB976B:memmap>	; [ ] ; AB976F:'memmap	; [ CA ] ; AB9773:=?	; [ CA C9 ] ; AB9777:(	; [ CA ] ; AB977B:DROP	; [ CA ] ; AB977F:MEM	; [ ] ; AB9783:'here	; [ 0 ] ; AB9787:!	; [ 0 C8 ] ; AB978B:;	; [ ] ; AB978F:)	; [ ] ; AB9793:8	; [ CA ] ; AB9797:-	; [ CA 0 ] ; AB979B:DUP	; [ CA ] ; AB979F:'memmap>	; [ CA CA ] ; AB97A3:!	; [ CA CA CA ] ; AB97A7:@	; [ CA ] ; AB97AB:'here	; [ CA ] ; AB97AF:!	; [ CA C8 ] ; AB97B3:;	; [ ] ;---------ANA;---------GEN; memmap>add rbp,8mov [rbp],raxmov rax,qword[wCA]; 'memmap; OPTAV =?cmp rax,wC9jne _oB; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret; )_oB:; 8; OPTN -sub rax,8; DUPadd rbp,8mov [rbp],rax; 'memmap>; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,s  |8082|e     .  | calls:8 niv:0 len:13 ( a --  )wD6:;---------OPT; AB98CF:here	; [ 0 ] ; AB98D3:SWAP	; [ 0 C8 ] ; AB98D7:(	; [ C8 0 ] ; AB98DB:C@+	; [ C8 0 ] ; AB98DF:1?	; [ C8 0 0 ] ; AB98E3:ROT	; [ C8 0 0 ] ; AB98E7:C!+	; [ 0 0 C8 ] ; AB98EB:SWAP	; [ 0 0 ] ; AB98EF:)	; [ 0 0 ] ; AB98F3:2DROP	; [ C8 0 0 ] ; AB98F7:'here	; [ C8 ] ; AB98FB:!	; [ C8 C8 ] ; AB98FF:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; SWAPxchg rax,[rbp]; (_iC:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oC;; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iC_oC:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,w  |1082|e     .  | calls:1 niv:0 len:16 ( a --  )wD7:;---------OPT; AB9903:here	; [ 0 ] ; AB9907:SWAP	; [ 0 C8 ] ; AB990B:(	; [ C8 0 ] ; AB990F:C@+	; [ C8 0 ] ; AB9913:$ff	; [ C8 0 0 ] ; AB9917:AND	; [ C8 0 0 0 ] ; AB991B:32	; [ C8 0 0 ] ; AB991F:>?	; [ C8 0 0 1 ] ; AB9923:ROT	; [ C8 0 0 ] ; AB9927:C!+	; [ 0 0 C8 ] ; AB992B:SWAP	; [ 0 0 ] ; AB992F:)	; [ 0 0 ] ; AB9933:2DROP	; [ C8 0 0 ] ; AB9937:'here	; [ C8 ] ; AB993B:!	; [ C8 C8 ] ; AB993F:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; SWAPxchg rax,[rbp]; (_iD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _oD; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iD_oD:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,l  |1092|e  ;  .  | calls:1 niv:0 len:27 ( a --  )wD8:;---------OPT; AB9943:here	; [ 0 ] ; AB9947:SWAP	; [ 0 C8 ] ; AB994B:(	; [ C8 0 ] ; AB994F:C@+	; [ C8 0 ] ; AB9953:1?	; [ C8 0 0 ] ; AB9957:10	; [ C8 0 0 ] ; AB995B:=?	; [ C8 0 0 0 ] ; AB995F:(	; [ C8 0 0 ] ; AB9963:3	; [ C8 0 0 ] ; AB9967:+	; [ C8 0 0 1 ] ; AB996B:)	; [ C8 0 0 ] ; AB996F:13	; [ C8 0 0 ] ; AB9973:=?	; [ C8 0 0 2 ] ; AB9977:(	; [ C8 0 0 ] ; AB997B:2DROP	; [ C8 0 0 ] ; AB997F:'here	; [ C8 ] ; AB9983:!	; [ C8 C8 ] ; AB9987:;	; [ ] ; AB998B:)	; [ ] ; AB998F:ROT	; [ C8 0 0 ] ; AB9993:C!+	; [ 0 0 C8 ] ; AB9997:SWAP	; [ 0 0 ] ; AB999B:)	; [ 0 0 ] ; AB999F:2DROP	; [ C8 0 0 ] ; AB99A3:'here	; [ C8 ] ; AB99A7:!	; [ C8 C8 ] ; AB99AB:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; SWAPxchg rax,[rbp]; (_iE:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oE;; 10; OPTN =?cmp rax,10jne _oF; (; 3; OPTN +add rax,3; )_oF:; 13; OPTN =?cmp rax,13jne _o10; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret; )_o10:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iE_oE:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c0  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wE2:;---------OPT; AB9A1B:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :c1  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wE3:;---------OPT; AB9A1F:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :c2  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE4:;---------OPT; AB9A23:SWAP	; [ 1 0 ] ; AB9A27:.b	; [ 0 1 ] ; AB9A2B:,s	; [ 0 0 ] ; AB9A2F:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .bcall wA7; ,sjmp wD6; ;;--------------------------; :c3  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wE5:;---------OPT; AB9A33:SWAP	; [ 1 0 ] ; AB9A37:0?	; [ 0 1 ] ; AB9A3B:(	; [ 0 1 ] ; AB9A3F:DROP	; [ 0 1 ] ; AB9A43:;	; [ 0 ] ; AB9A47:)	; [ 0 ] ; AB9A4B:,s	; [ 0 1 ] ; AB9A4F:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o11; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o11:; ,sjmp wD6; ;;--------------------------; :c4  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE6:;---------OPT; AB9A53:SWAP	; [ 1 0 ] ; AB9A57:.d	; [ 0 1 ] ; AB9A5B:,s	; [ 0 0 ] ; AB9A5F:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .dcall wA6; ,sjmp wD6; ;;--------------------------; :c5  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wE7:;---------OPT; AB9A63:$25	; [ ] ; AB9A67:,c	; [ 0 ] ; AB98A7:here	; [ 0 ] ; AB98AB:C!+	; [ 0 C8 ] ; AB98AF:'here	; [ 0 ] ; AB98B3:!	; [ 0 C8 ] ; AB9A6B:;	; [ ] ;---------ANA;---------GEN; $25add rbp,8mov [rbp],raxmov rax,37; here; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c6  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE8:;---------OPT; AB9A6F:SWAP	; [ 1 0 ] ; AB9A73:.f	; [ 0 1 ] ; AB9A77:,s	; [ 0 0 ] ; AB9A7B:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .fcall wAA; ,sjmp wD6; ;;--------------------------; :c7  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wE9:;---------OPT; AB9A7F:SWAP	; [ 1 0 ] ; AB9A83:0?	; [ 0 1 ] ; AB9A87:(	; [ 0 1 ] ; AB9A8B:DROP	; [ 0 1 ] ; AB9A8F:;	; [ 0 ] ; AB9A93:)	; [ 0 ] ; AB9A97:,w	; [ 0 1 ] ; AB9A9B:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o12; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o12:; ,wjmp wD7; ;;--------------------------; :c8  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wEA:;---------OPT; AB9A9F:SWAP	; [ 1 0 ] ; AB9AA3:.h	; [ 0 1 ] ; AB9AA7:,s	; [ 0 0 ] ; AB9AAB:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .hcall wA8; ,sjmp wD6; ;;--------------------------; :c9  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wEB:;---------OPT; AB9AAF:SWAP	; [ 1 0 ] ; AB9AB3:16	; [ 0 1 ] ; AB9AB7:>>	; [ 0 1 0 ] ; AB9ABB:.d	; [ 0 1 ] ; AB9ABF:,s	; [ 0 0 ] ; AB9AC3:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; .dcall wA6; ,sjmp wD6; ;;--------------------------; :ca  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wEC:;---------OPT; AB9AC7:SWAP	; [ 1 0 ] ; AB9ACB:$ffff	; [ 0 1 ] ; AB9ACF:AND	; [ 0 1 0 ] ; AB9AD3:.d	; [ 0 1 ] ; AB9AD7:,s	; [ 0 0 ] ; AB9ADB:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; $ffff; OPTN ANDand rax,65535; .dcall wA6; ,sjmp wD6; ;;--------------------------; :cb  |1001484|l'    . I| calls:1 niv:1 len:3 ( ab -- c )wED:;---------OPT; AB9ADF:SWAP	; [ 1 0 ] ; AB9AE3:,c	; [ 0 1 ] ; AB98A7:here	; [ 0 1 ] ; AB98AB:C!+	; [ 0 1 C8 ] ; AB98AF:'here	; [ 0 1 ] ; AB98B3:!	; [ 0 1 C8 ] ; AB9AE7:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; here; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cc  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wEE:;---------OPT; AB9AEB:SWAP	; [ 1 0 ] ; AB9AEF:0?	; [ 0 1 ] ; AB9AF3:(	; [ 0 1 ] ; AB9AF7:DROP	; [ 0 1 ] ; AB9AFB:;	; [ 0 ] ; AB9AFF:)	; [ 0 ] ; AB9B03:,l	; [ 0 1 ] ; AB9B07:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o13; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o13:; ,ljmp wD8; ;;--------------------------; :cd  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wEF:;---------OPT; AB9B0B:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :ce  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wF0:;---------OPT; AB9B0F:13	; [ ] ; AB9B13:,c	; [ 0 ] ; AB98A7:here	; [ 0 ] ; AB98AB:C!+	; [ 0 C8 ] ; AB98AF:'here	; [ 0 ] ; AB98B3:!	; [ 0 C8 ] ; AB9B17:;	; [ ] ;---------ANA;---------GEN; 13add rbp,8mov [rbp],raxmov rax,13; here; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cf  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wF1:;---------OPT; AB9B1B:SWAP	; [ 1 0 ] ; AB9B1F:.o	; [ 0 1 ] ; AB9B23:,s	; [ 0 0 ] ; AB9B27:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .ocall wA9; ,sjmp wD6; ;;--------------------------; :,emit  |6001490|l  ;  . I| calls:1 niv:6 len:17 ( ab -- c )wF3:;---------OPT; AB9B6B:$25	; [ 1 0 ] ; AB9B6F:<>?	; [ 1 0 0 ] ; AB9B73:(	; [ 1 0 ] ; AB9B77:,c	; [ 1 0 ] ; AB98A7:here	; [ 1 0 ] ; AB98AB:C!+	; [ 1 0 C8 ] ; AB98AF:'here	; [ 1 0 ] ; AB98B3:!	; [ 1 0 C8 ] ; AB9B7B:;	; [ 1 ] ; AB9B7F:)	; [ 1 ] ; AB9B83:DROP	; [ 1 0 ] ; AB9B87:C@+	; [ 1 ] ; AB9B8B:$f	; [ 1 1 ] ; AB9B8F:AND	; [ 1 1 1 ] ; AB9B93:3	; [ 1 1 ] ; AB9B97:<<	; [ 1 1 2 ] ; AB9B9B:'control	; [ 1 1 ] ; AB9B9F:+	; [ 1 1 F2 ] ; AB9BA3:@	; [ 1 1 ] ; AB9BA7:EX	; [ 1 1 ] ; AB9BAB:;	; [ 1 1 ] ;---------ANA;---------GEN; $25; OPTN <>?cmp rax,37je _o14; (; here; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; ;ret; )_o14:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $f; OPTN ANDand rax,15; 3; OPTN <<shl rax,3; 'control; OPTAV +add rax,wF2; @mov rax,qword[rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :sprint  |1001482|e     . I| calls:1 niv:1 len:9 ( a -- b )wF6:;---------OPT; AB9BD3:mark	; [ 0 ] ; AB9753:here	; [ 0 ] ; AB9757:memmap>	; [ 0 C8 ] ; AB975B:!+	; [ 0 C8 CA ] ; AB975F:'memmap>	; [ 0 C8 ] ; AB9763:!	; [ 0 C8 CA ] ; AB9BD7:'buff	; [ 0 ] ; AB9BDB:'here	; [ 0 F5 ] ; AB9BDF:!	; [ 0 F5 C8 ] ; AB9BE3:,print	; [ 0 ] ; AB9BAF:(	; [ 0 ] ; AB9BB3:C@+	; [ 0 ] ; AB9BB7:1?	; [ 0 0 ] ; AB9BBB:,emit	; [ 0 0 ] ; AB9BBF:)	; [ 0 ] ; AB9BC3:2DROP	; [ 0 0 ] ; AB9BE7:,eol	; [ ] ; AB99EF:0	; [ ] ; AB99F3:,c	; [ 0 ] ; AB98A7:here	; [ 0 ] ; AB98AB:C!+	; [ 0 C8 ] ; AB98AF:'here	; [ 0 ] ; AB98B3:!	; [ 0 C8 ] ; AB9BEB:empty	; [ ] ; AB9BEF:'buff	; [ ] ; AB9BF3:;	; [ F5 ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; memmap>; OPTV !+mov rbx,qword[wCA]mov [rbx],raxadd rbx,8mov rax,rbx; 'memmap>; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; 'buffadd rbp,8mov [rbp],raxmov rax,wF5; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; (_i15:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o15;; ,emitcall wF3; )jmp _i15_o15:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wC8]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; emptycall wCC; 'buffadd rbp,8mov [rbp],raxmov rax,wF5; ;ret;--------------------------; :  |1001480|l     . I| calls:1 niv:1 len:36 (  --  )w162:;---------OPT; ABAEFB:	; [ ] ; AB9BF7:	; [ ] ; AB972F:	; [ ] ; AB9733:GetProcessHeap	; [ ] ; AB75B7:sys-GetProcessHeap	; [ ] ; AB75BB:SYS0	; [ 16 ] ; AB9737:'process-heap	; [ 16 ] ; AB973B:!	; [ 16 B3 ] ; AB9BFB:MEM	; [ ] ; AB9BFF:'here	; [ 0 ] ; AB9C03:!	; [ 0 C8 ] ; ABAEFF:AllocConsole	; [ ] ; AB7497:sys-AllocConsole	; [ ] ; AB749B:SYS0	; [ 0 ] ; AB749F:DROP	; [ 0 ] ; ABAF03:-10	; [ ] ; ABAF07:GetStdHandle	; [ 0 ] ; AB74B3:sys-GetStdHandle	; [ 0 ] ; AB74B7:SYS1	; [ 0 2 ] ; ABAF0B:'stdin	; [ 0 ] ; ABAF0F:!	; [ 0 113 ] ; ABAF13:-11	; [ ] ; ABAF17:GetStdHandle	; [ 1 ] ; AB74B3:sys-GetStdHandle	; [ 1 ] ; AB74B7:SYS1	; [ 1 2 ] ; ABAF1B:'stdout	; [ 1 ] ; ABAF1F:!	; [ 1 114 ] ; ABAF23:-12	; [ ] ; ABAF27:GetStdHandle	; [ 2 ] ; AB74B3:sys-GetStdHandle	; [ 2 ] ; AB74B7:SYS1	; [ 2 2 ] ; ABAF2B:'stderr	; [ 2 ] ; ABAF2F:!	; [ 2 115 ] ; ABAF33:stdin	; [ ] ; ABAF37:'console-mode	; [ 113 ] ; ABAF3B:GetConsoleMode	; [ 113 161 ] ; AB74D7:sys-GetConsoleMode	; [ 113 161 ] ; AB74DB:SYS2	; [ 113 161 5 ] ; ABAF3F:DROP	; [ 113 ] ; ABAF43:stdin	; [ ] ; ABAF47:console-mode	; [ 113 ] ; ABAF4B:$1a	; [ 113 161 ] ; ABAF4F:NEG	; [ 113 161 3 ] ; ABAF53:AND	; [ 113 161 3 ] ; ABAF57:SetConsoleMode	; [ 113 161 ] ; AB74E3:sys-SetConsoleMode	; [ 113 161 ] ; AB74E7:SYS2	; [ 113 161 6 ] ; ABAF5B:DROP	; [ 113 ] ; ABAF5F:stdout	; [ ] ; ABAF63:'console-mode	; [ 114 ] ; ABAF67:GetConsoleMode	; [ 114 161 ] ; AB74D7:sys-GetConsoleMode	; [ 114 161 ] ; AB74DB:SYS2	; [ 114 161 5 ] ; ABAF6B:DROP	; [ 114 ] ; ABAF6F:stdout	; [ ] ; ABAF73:console-mode	; [ 114 ] ; ABAF77:$4	; [ 114 161 ] ; ABAF7B:OR	; [ 114 161 4 ] ; ABAF7F:SetConsoleMode	; [ 114 161 ] ; AB74E3:sys-SetConsoleMode	; [ 114 161 ] ; AB74E7:SYS2	; [ 114 161 6 ] ; ABAF83:DROP	; [ 114 ] ; ABAF87:;	; [ ] ;---------ANA;---------GEN; call w44; sys-GetProcessHeapadd rbp,8mov [rbp],raxmov rax,qword[w16]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; 'process-heap; OPTAV !mov qword[wB3],raxmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stdin; OPTAV !mov qword[w113],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stdout; OPTAV !mov qword[w114],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stderr; OPTAV !mov qword[w115],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w113]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w161; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w113]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w161]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w114]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w161; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w114]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w161]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLinit  |1001482|e     . I| calls:1 niv:1 len:42 ( abc --  )w243:;---------OPT; ABB42F:2DUP	; [ 2 1 0 ] ; ABB433:*	; [ 2 1 0 1 0 ] ; ABB437:'sizebuffer	; [ 2 1 0 1 ] ; ABB43B:!	; [ 2 1 0 1 241 ] ; ABB43F:'sh	; [ 2 1 0 ] ; ABB443:!	; [ 2 1 0 23F ] ; ABB447:'sw	; [ 2 1 ] ; ABB44B:!	; [ 2 1 23E ] ; ABB44F:$3231	; [ 2 ] ; ABB453:SDL_Init	; [ 2 0 ] ; ABB163:sys-SDL_Init	; [ 2 0 ] ; ABB167:SYS1	; [ 2 0 1DB ] ; ABB16B:DROP	; [ 2 0 ] ; ABB457:$1FFF0000	; [ 2 ] ; ABB45B:$1FFF0000	; [ 2 1 ] ; ABB45F:sw	; [ 2 1 2 ] ; ABB463:sh	; [ 2 1 2 23E ] ; ABB467:$0	; [ 2 1 2 23E 23F ] ; ABB46B:SDL_CreateWindow	; [ 2 1 2 23E 23F 3 ] ; ABB18F:sys-SDL_CreateWindow	; [ 2 1 2 23E 23F 3 ] ; ABB193:SYS6	; [ 2 1 2 23E 23F 3 1DE ] ; ABB46F:DUP	; [ 2 ] ; ABB473:'SDL_windows	; [ 2 2 ] ; ABB477:!	; [ 2 2 23B ] ; ABB47B:SDL_GetWindowSurface	; [ 2 ] ; ABB1BB:sys-SDL_GetWindowSurface	; [ 2 ] ; ABB1BF:SYS1	; [ 2 1E0 ] ; ABB47F:DUP	; [ 2 ] ; ABB483:'SDL_screen	; [ 2 2 ] ; ABB487:!	; [ 2 2 23C ] ; ABB48B:24	; [ 2 ] ; ABB48F:+	; [ 2 4 ] ; ABB493:D@+	; [ 2 ] ; ABB497:'pitch	; [ 2 2 ] ; ABB49B:!	; [ 2 2 240 ] ; ABB49F:4	; [ 2 ] ; ABB4A3:+	; [ 2 5 ] ; ABB4A7:@	; [ 2 ] ; ABB4AB:'vframe	; [ 2 ] ; ABB4AF:!	; [ 2 242 ] ; ABB4B3:SDL_windows	; [ ] ; ABB4B7:-1	; [ 23B ] ; ABB4BB:0	; [ 23B 6 ] ; ABB4BF:SDL_CreateRenderer	; [ 23B 6 7 ] ; ABB1F7:sys-SDL_CreateRenderer	; [ 23B 6 7 ] ; ABB1FB:SYS3	; [ 23B 6 7 1E5 ] ; ABB4C3:'SDLrenderer	; [ 23B ] ; ABB4C7:!	; [ 23B 23D ] ; ABB4CB:SDL_windows	; [ ] ; ABB4CF:SDL_RaiseWindow	; [ 23B ] ; ABB1AB:sys-SDL_RaiseWindow	; [ 23B ] ; ABB1AF:SYS1	; [ 23B 1E1 ] ; ABB1B3:DROP	; [ 23B ] ; ABB4D3:;	; [ ] ;---------ANA;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; *imul rax,[rbp]sub rbp,8; 'sizebuffer; OPTAV !mov qword[w241],raxmov rax,[rbp]sub rbp,8; 'sh; OPTAV !mov qword[w23F],raxmov rax,[rbp]sub rbp,8; 'sw; OPTAV !mov qword[w23E],raxmov rax,[rbp]sub rbp,8; $3231add rbp,8mov [rbp],raxmov rax,12849; sys-SDL_Initadd rbp,8mov [rbp],raxmov rax,qword[w1DB]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; swadd rbp,8mov [rbp],raxmov rax,qword[w23E]; shadd rbp,8mov [rbp],raxmov rax,qword[w23F]; $0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateWindowadd rbp,8mov [rbp],raxmov rax,qword[w1DE]; SYS6PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rdx,[rbp]mov [rsp+$28],rdxmov rcx,[rbp-1*8]mov [rsp+$20],rcxmov r9,[rbp-2*8]mov r8,[rbp-3*8]mov rdx,[rbp-4*8]mov rcx,[rbp-5*8]call raxsub rbp,8*6add RSP,$30POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_windows; OPTAV !mov qword[w23B],raxmov rax,[rbp]sub rbp,8; sys-SDL_GetWindowSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1E0]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_screen; OPTAV !mov qword[w23C],raxmov rax,[rbp]sub rbp,8; 24; OPTN +add rax,24; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'pitch; OPTAV !mov qword[w240],raxmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; @mov rax,qword[rax]; 'vframe; OPTAV !mov qword[w242],raxmov rax,[rbp]sub rbp,8; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w23B]; -1add rbp,8mov [rbp],raxmov rax,-1; 0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateRendereradd rbp,8mov [rbp],raxmov rax,qword[w1E5]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; 'SDLrenderer; OPTAV !mov qword[w23D],raxmov rax,[rbp]sub rbp,8; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w23B]; sys-SDL_RaiseWindowadd rbp,8mov [rbp],raxmov rax,qword[w1E1]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLframebuffer  |1001482|e     . I| calls:1 niv:1 len:9 ( ab -- c )w246:;---------OPT; ABB557:>R	; [ 1 0 ] ; ABB55B:>R	; [ 1 ] ; ABB55F:SDLrenderer	; [ ] ; ABB563:$16362004	; [ 23D ] ; ABB567:1	; [ 23D 0 ] ; ABB56B:R>	; [ 23D 0 1 ] ; ABB56F:R>	; [ 23D 0 1 1 ] ; ABB573:SDL_CreateTexture	; [ 23D 0 1 1 1 ] ; ABB203:sys-SDL_CreateTexture	; [ 23D 0 1 1 1 ] ; ABB207:SYS5	; [ 23D 0 1 1 1 1E6 ] ; ABB577:;	; [ 23D ] ;---------ANA;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; $16362004add rbp,8mov [rbp],raxmov rax,372645892; 1add rbp,8mov [rbp],raxmov rax,1; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; sys-SDL_CreateTextureadd rbp,8mov [rbp],raxmov rax,qword[w1E6]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; ;ret;--------------------------; :SDLupdate  |1001482|e     . I| calls:1 niv:1 len:103 (  --  )w24E:;---------OPT; ABB59B:0	; [ ] ; ABB59F:'SDLkey	; [ 0 ] ; ABB5A3:!	; [ 0 249 ] ; ABB5A7:0	; [ ] ; ABB5AB:'SDLkeychar	; [ 1 ] ; ABB5AF:!	; [ 1 24A ] ; ABB5B3:10	; [ ] ; ABB5B7:SDL_Delay	; [ 2 ] ; ABB38F:sys-SDL_Delay	; [ 2 ] ; ABB393:SYS1	; [ 2 1FF ] ; ABB397:DROP	; [ 2 ] ; ABB5BB:(	; [ ] ; ABB5BF:'SDLevent	; [ ] ; ABB5C3:SDL_PollEvent	; [ 248 ] ; ABB39F:sys-SDL_PollEvent	; [ 248 ] ; ABB3A3:SYS1	; [ 248 200 ] ; ABB5C7:1?	; [ 248 ] ; ABB5CB:DROP	; [ 248 ] ; ABB5CF:'SDLevent	; [ ] ; ABB5D3:D@	; [ 248 ] ; ABB5D7:$300	; [ 248 ] ; ABB5DB:=?	; [ 248 3 ] ; ABB5DF:(	; [ 248 ] ; ABB5E3:'SDLevent	; [ 248 ] ; ABB5E7:20	; [ 248 248 ] ; ABB5EB:+	; [ 248 248 4 ] ; ABB5EF:D@	; [ 248 248 ] ; ABB5F3:DUP	; [ 248 248 ] ; ABB5F7:$ffff	; [ 248 248 248 ] ; ABB5FB:AND	; [ 248 248 248 5 ] ; ABB5FF:SWAP	; [ 248 248 248 ] ; ABB603:16	; [ 248 248 248 ] ; ABB607:>>	; [ 248 248 248 6 ] ; ABB60B:OR	; [ 248 248 248 ] ; ABB60F:'SDLkey	; [ 248 248 ] ; ABB613:!	; [ 248 248 249 ] ; ABB617:)	; [ 248 ] ; ABB61B:$301	; [ 248 ] ; ABB61F:=?	; [ 248 7 ] ; ABB623:(	; [ 248 ] ; ABB627:'SDLevent	; [ 248 ] ; ABB62B:20	; [ 248 248 ] ; ABB62F:+	; [ 248 248 8 ] ; ABB633:D@	; [ 248 248 ] ; ABB637:DUP	; [ 248 248 ] ; ABB63B:$ffff	; [ 248 248 248 ] ; ABB63F:AND	; [ 248 248 248 9 ] ; ABB643:SWAP	; [ 248 248 248 ] ; ABB647:16	; [ 248 248 248 ] ; ABB64B:>>	; [ 248 248 248 A ] ; ABB64F:OR	; [ 248 248 248 ] ; ABB653:$1000	; [ 248 248 ] ; ABB657:OR	; [ 248 248 B ] ; ABB65B:'SDLkey	; [ 248 248 ] ; ABB65F:!	; [ 248 248 249 ] ; ABB663:)	; [ 248 ] ; ABB667:$303	; [ 248 ] ; ABB66B:=?	; [ 248 C ] ; ABB66F:(	; [ 248 ] ; ABB673:'SDLevent	; [ 248 ] ; ABB677:12	; [ 248 248 ] ; ABB67B:+	; [ 248 248 D ] ; ABB67F:C@	; [ 248 248 ] ; ABB683:'SDLkeychar	; [ 248 248 ] ; ABB687:!	; [ 248 248 24A ] ; ABB68B:)	; [ 248 ] ; ABB68F:$400	; [ 248 ] ; ABB693:=?	; [ 248 E ] ; ABB697:(	; [ 248 ] ; ABB69B:'SDLevent	; [ 248 ] ; ABB69F:20	; [ 248 248 ] ; ABB6A3:+	; [ 248 248 F ] ; ABB6A7:D@+	; [ 248 248 ] ; ABB6AB:'SDLx	; [ 248 248 248 ] ; ABB6AF:!	; [ 248 248 248 24B ] ; ABB6B3:D@	; [ 248 248 ] ; ABB6B7:'SDLy	; [ 248 248 ] ; ABB6BB:!	; [ 248 248 24C ] ; ABB6BF:)	; [ 248 ] ; ABB6C3:$401	; [ 248 ] ; ABB6C7:=?	; [ 248 10 ] ; ABB6CB:(	; [ 248 ] ; ABB6CF:'SDLevent	; [ 248 ] ; ABB6D3:16	; [ 248 248 ] ; ABB6D7:+	; [ 248 248 11 ] ; ABB6DB:C@	; [ 248 248 ] ; ABB6DF:SDLb	; [ 248 248 ] ; ABB6E3:OR	; [ 248 248 24D ] ; ABB6E7:'SDLb	; [ 248 248 ] ; ABB6EB:!	; [ 248 248 24D ] ; ABB6EF:)	; [ 248 ] ; ABB6F3:$402	; [ 248 ] ; ABB6F7:=?	; [ 248 12 ] ; ABB6FB:(	; [ 248 ] ; ABB6FF:'SDLevent	; [ 248 ] ; ABB703:16	; [ 248 248 ] ; ABB707:+	; [ 248 248 13 ] ; ABB70B:C@	; [ 248 248 ] ; ABB70F:NOT	; [ 248 248 ] ; ABB713:SDLb	; [ 248 248 ] ; ABB717:AND	; [ 248 248 24D ] ; ABB71B:'SDLb	; [ 248 248 ] ; ABB71F:!	; [ 248 248 24D ] ; ABB723:)	; [ 248 ] ; ABB727:DROP	; [ 248 ] ; ABB72B:)	; [ ] ; ABB72F:DROP	; [ 248 ] ; ABB733:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkey; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkeychar; OPTAV !mov qword[w24A],raxmov rax,[rbp]sub rbp,8; 10add rbp,8mov [rbp],raxmov rax,10; sys-SDL_Delayadd rbp,8mov [rbp],raxmov rax,qword[w1FF]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; (_i16:; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; sys-SDL_PollEventadd rbp,8mov [rbp],raxmov rax,qword[w200]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 1?or rax,raxjz _o16;; DROPmov rax,[rbp]sub rbp,8; 'SDLevent; OPTAV D@add rbp,8mov [rbp],raxmovsxd rax,dword [w248]; $300; OPTN =?cmp rax,768jne _o17; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; 'SDLkey; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; )_o17:; $301; OPTN =?cmp rax,769jne _o18; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; $1000; OPTN ORor rax,4096; 'SDLkey; OPTAV !mov qword[w249],raxmov rax,[rbp]sub rbp,8; )_o18:; $303; OPTN =?cmp rax,771jne _o19; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 12; OPTN +add rax,12; C@movsx rax,byte [rax]; 'SDLkeychar; OPTAV !mov qword[w24A],raxmov rax,[rbp]sub rbp,8; )_o19:; $400; OPTN =?cmp rax,1024jne _o1A; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 20; OPTN +add rax,20; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'SDLx; OPTAV !mov qword[w24B],raxmov rax,[rbp]sub rbp,8; D@movsxd rax,dword [rax]; 'SDLy; OPTAV !mov qword[w24C],raxmov rax,[rbp]sub rbp,8; )_o1A:; $401; OPTN =?cmp rax,1025jne _o1B; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; SDLb; OPTV ORor rax,qword[w24D]; 'SDLb; OPTAV !mov qword[w24D],raxmov rax,[rbp]sub rbp,8; )_o1B:; $402; OPTN =?cmp rax,1026jne _o1C; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w248; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; NOTnot rax; SDLb; OPTV ANDand rax,qword[w24D]; 'SDLb; OPTAV !mov qword[w24D],raxmov rax,[rbp]sub rbp,8; )_o1C:; DROPmov rax,[rbp]sub rbp,8; )jmp _i16_o16:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLshow  |1001082|e     .  | calls:1 niv:1 len:16 ( a --  )w252:;---------OPT; ABB793:0	; [ 0 ] ; ABB797:'.exit	; [ 0 0 ] ; ABB79B:!	; [ 0 0 251 ] ; ABB79F:(	; [ 0 ] ; ABB7A3:.exit	; [ 0 ] ; ABB7A7:0?	; [ 0 251 ] ; ABB7AB:DROP	; [ 0 251 ] ; ABB7AF:SDLupdate	; [ 0 ] ; ABB7B3:DUP	; [ 0 ] ; ABB7B7:EX	; [ 0 0 ] ; ABB7BB:)	; [ 0 0 ] ; ABB7BF:2DROP	; [ 0 251 ] ; ABB7C3:0	; [ ] ; ABB7C7:'.exit	; [ 1 ] ; ABB7CB:!	; [ 1 251 ] ; ABB7CF:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; (_i1D:; .exitadd rbp,8mov [rbp],raxmov rax,qword[w251]; 0?or rax,raxjnz _o1D; DROPmov rax,[rbp]sub rbp,8; SDLupdatecall w24E; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )jmp _i1D_o1D:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |2001080|l     .  | calls:1 niv:2 len:235 (  --  )w254:;---------OPT; ABB7E3:	; [ ] ; ABB7E7:"SDL2.DLL"	; [ ] ; ABB7EB:LOADLIB	; [ 3B3A ] ; ABB7EF:DUP	; [ 3B3A ] ; ABB7F3:"SDL_Init"	; [ 3B3A 3B3A ] ; ABB7F7:GETPROC	; [ 3B3A 3B3A 3B52 ] ; ABB7FB:'sys-SDL_Init	; [ 3B3A 3B3A ] ; ABB7FF:!	; [ 3B3A 3B3A 1DB ] ; ABB803:DUP	; [ 3B3A ] ; ABB807:"SDL_Quit"	; [ 3B3A 3B3A ] ; ABB80B:GETPROC	; [ 3B3A 3B3A 3B7A ] ; ABB80F:'sys-SDL_Quit	; [ 3B3A 3B3A ] ; ABB813:!	; [ 3B3A 3B3A 1DC ] ; ABB817:DUP	; [ 3B3A ] ; ABB81B:"SDL_GetNumVideoDisplays"	; [ 3B3A 3B3A ] ; ABB81F:GETPROC	; [ 3B3A 3B3A 3BA2 ] ; ABB823:'sys-SDL_GetNumVideoDisplays	; [ 3B3A 3B3A ] ; ABB827:!	; [ 3B3A 3B3A 1DD ] ; ABB82B:DUP	; [ 3B3A ] ; ABB82F:"SDL_CreateWindow"	; [ 3B3A 3B3A ] ; ABB833:GETPROC	; [ 3B3A 3B3A 3BE8 ] ; ABB837:'sys-SDL_CreateWindow	; [ 3B3A 3B3A ] ; ABB83B:!	; [ 3B3A 3B3A 1DE ] ; ABB83F:DUP	; [ 3B3A ] ; ABB843:"SDL_SetWindowFullscreen"	; [ 3B3A 3B3A ] ; ABB847:GETPROC	; [ 3B3A 3B3A 3C20 ] ; ABB84B:'sys-SDL_SetWindowFullscreen	; [ 3B3A 3B3A ] ; ABB84F:!	; [ 3B3A 3B3A 1DF ] ; ABB853:DUP	; [ 3B3A ] ; ABB857:"SDL_GetWindowSurface"	; [ 3B3A 3B3A ] ; ABB85B:GETPROC	; [ 3B3A 3B3A 3C66 ] ; ABB85F:'sys-SDL_GetWindowSurface	; [ 3B3A 3B3A ] ; ABB863:!	; [ 3B3A 3B3A 1E0 ] ; ABB867:DUP	; [ 3B3A ] ; ABB86B:"SDL_ShowCursor"	; [ 3B3A 3B3A ] ; ABB86F:GETPROC	; [ 3B3A 3B3A 3CA6 ] ; ABB873:'sys-SDL_ShowCursor	; [ 3B3A 3B3A ] ; ABB877:!	; [ 3B3A 3B3A 1E2 ] ; ABB87B:DUP	; [ 3B3A ] ; ABB87F:"SDL_RaiseWindow"	; [ 3B3A 3B3A ] ; ABB883:GETPROC	; [ 3B3A 3B3A 3CDC ] ; ABB887:'sys-SDL_RaiseWindow	; [ 3B3A 3B3A ] ; ABB88B:!	; [ 3B3A 3B3A 1E1 ] ; ABB88F:DUP	; [ 3B3A ] ; ABB893:"SDL_UpdateWindowSurface"	; [ 3B3A 3B3A ] ; ABB897:GETPROC	; [ 3B3A 3B3A 3D12 ] ; ABB89B:'sys-SDL_UpdateWindowSurface	; [ 3B3A 3B3A ] ; ABB89F:!	; [ 3B3A 3B3A 1E3 ] ; ABB8A3:DUP	; [ 3B3A ] ; ABB8A7:"SDL_DestroyWindow"	; [ 3B3A 3B3A ] ; ABB8AB:GETPROC	; [ 3B3A 3B3A 3D58 ] ; ABB8AF:'sys-SDL_DestroyWindow	; [ 3B3A 3B3A ] ; ABB8B3:!	; [ 3B3A 3B3A 1E4 ] ; ABB8B7:DUP	; [ 3B3A ] ; ABB8BB:"SDL_CreateRenderer"	; [ 3B3A 3B3A ] ; ABB8BF:GETPROC	; [ 3B3A 3B3A 3D92 ] ; ABB8C3:'sys-SDL_CreateRenderer	; [ 3B3A 3B3A ] ; ABB8C7:!	; [ 3B3A 3B3A 1E5 ] ; ABB8CB:DUP	; [ 3B3A ] ; ABB8CF:"SDL_CreateTexture"	; [ 3B3A 3B3A ] ; ABB8D3:GETPROC	; [ 3B3A 3B3A 3DCE ] ; ABB8D7:'sys-SDL_CreateTexture	; [ 3B3A 3B3A ] ; ABB8DB:!	; [ 3B3A 3B3A 1E6 ] ; ABB8DF:DUP	; [ 3B3A ] ; ABB8E3:"SDL_DestroyTexture"	; [ 3B3A 3B3A ] ; ABB8E7:GETPROC	; [ 3B3A 3B3A 3E08 ] ; ABB8EB:'sys-SDL_DestroyTexture	; [ 3B3A 3B3A ] ; ABB8EF:!	; [ 3B3A 3B3A 1E7 ] ; ABB8F3:DUP	; [ 3B3A ] ; ABB8F7:"SDL_DestroyRenderer"	; [ 3B3A 3B3A ] ; ABB8FB:GETPROC	; [ 3B3A 3B3A 3E44 ] ; ABB8FF:'sys-SDL_DestroyRenderer	; [ 3B3A 3B3A ] ; ABB903:!	; [ 3B3A 3B3A 1E8 ] ; ABB907:DUP	; [ 3B3A ] ; ABB90B:"SDL_UpdateTexture"	; [ 3B3A 3B3A ] ; ABB90F:GETPROC	; [ 3B3A 3B3A 3E82 ] ; ABB913:'sys-SDL_UpdateTexture	; [ 3B3A 3B3A ] ; ABB917:!	; [ 3B3A 3B3A 1E9 ] ; ABB91B:DUP	; [ 3B3A ] ; ABB91F:"SDL_RenderClear"	; [ 3B3A 3B3A ] ; ABB923:GETPROC	; [ 3B3A 3B3A 3EBC ] ; ABB927:'sys-SDL_RenderClear	; [ 3B3A 3B3A ] ; ABB92B:!	; [ 3B3A 3B3A 1EA ] ; ABB92F:DUP	; [ 3B3A ] ; ABB933:"SDL_RenderCopy"	; [ 3B3A 3B3A ] ; ABB937:GETPROC	; [ 3B3A 3B3A 3EF2 ] ; ABB93B:'sys-SDL_RenderCopy	; [ 3B3A 3B3A ] ; ABB93F:!	; [ 3B3A 3B3A 1EB ] ; ABB943:DUP	; [ 3B3A ] ; ABB947:"SDL_RenderCopyEx"	; [ 3B3A 3B3A ] ; ABB94B:GETPROC	; [ 3B3A 3B3A 3F26 ] ; ABB94F:'sys-SDL_RenderCopyEx	; [ 3B3A 3B3A ] ; ABB953:!	; [ 3B3A 3B3A 1EC ] ; ABB957:DUP	; [ 3B3A ] ; ABB95B:"SDL_RenderPresent"	; [ 3B3A 3B3A ] ; ABB95F:GETPROC	; [ 3B3A 3B3A 3F5E ] ; ABB963:'sys-SDL_RenderPresent	; [ 3B3A 3B3A ] ; ABB967:!	; [ 3B3A 3B3A 1ED ] ; ABB96B:DUP	; [ 3B3A ] ; ABB96F:"SDL_CreateTextureFromSurface"	; [ 3B3A 3B3A ] ; ABB973:GETPROC	; [ 3B3A 3B3A 3F98 ] ; ABB977:'sys-SDL_CreateTextureFromSurface	; [ 3B3A 3B3A ] ; ABB97B:!	; [ 3B3A 3B3A 1EF ] ; ABB97F:DUP	; [ 3B3A ] ; ABB983:"SDL_QueryTexture"	; [ 3B3A 3B3A ] ; ABB987:GETPROC	; [ 3B3A 3B3A 3FE8 ] ; ABB98B:'sys-SDL_QueryTexture	; [ 3B3A 3B3A ] ; ABB98F:!	; [ 3B3A 3B3A 1F0 ] ; ABB993:DUP	; [ 3B3A ] ; ABB997:"SDL_SetTextureColorMod"	; [ 3B3A 3B3A ] ; ABB99B:GETPROC	; [ 3B3A 3B3A 4020 ] ; ABB99F:'sys-SDL_SetTextureColorMod	; [ 3B3A 3B3A ] ; ABB9A3:!	; [ 3B3A 3B3A 20A ] ; ABB9A7:DUP	; [ 3B3A ] ; ABB9AB:"SDL_SetRenderDrawColor"	; [ 3B3A 3B3A ] ; ABB9AF:GETPROC	; [ 3B3A 3B3A 4064 ] ; ABB9B3:'sys-SDL_SetRenderDrawColor	; [ 3B3A 3B3A ] ; ABB9B7:!	; [ 3B3A 3B3A 1EE ] ; ABB9BB:DUP	; [ 3B3A ] ; ABB9BF:"SDL_LockSurface"	; [ 3B3A 3B3A ] ; ABB9C3:GETPROC	; [ 3B3A 3B3A 40A8 ] ; ABB9C7:'sys-SDL_LockSurface	; [ 3B3A 3B3A ] ; ABB9CB:!	; [ 3B3A 3B3A 1F1 ] ; ABB9CF:DUP	; [ 3B3A ] ; ABB9D3:"SDL_UnlockSurface"	; [ 3B3A 3B3A ] ; ABB9D7:GETPROC	; [ 3B3A 3B3A 40DE ] ; ABB9DB:'sys-SDL_UnlockSurface	; [ 3B3A 3B3A ] ; ABB9DF:!	; [ 3B3A 3B3A 1F2 ] ; ABB9E3:DUP	; [ 3B3A ] ; ABB9E7:"SDL_FreeSurface"	; [ 3B3A 3B3A ] ; ABB9EB:GETPROC	; [ 3B3A 3B3A 4118 ] ; ABB9EF:'sys-SDL_FreeSurface	; [ 3B3A 3B3A ] ; ABB9F3:!	; [ 3B3A 3B3A 1F3 ] ; ABB9F7:DUP	; [ 3B3A ] ; ABB9FB:"SDL_LockTexture"	; [ 3B3A 3B3A ] ; ABB9FF:GETPROC	; [ 3B3A 3B3A 414E ] ; ABBA03:'sys-SDL_LockTexture	; [ 3B3A 3B3A ] ; ABBA07:!	; [ 3B3A 3B3A 1F4 ] ; ABBA0B:DUP	; [ 3B3A ] ; ABBA0F:"SDL_UnlockTexture"	; [ 3B3A 3B3A ] ; ABBA13:GETPROC	; [ 3B3A 3B3A 4184 ] ; ABBA17:'sys-SDL_UnlockTexture	; [ 3B3A 3B3A ] ; ABBA1B:!	; [ 3B3A 3B3A 1F5 ] ; ABBA1F:DUP	; [ 3B3A ] ; ABBA23:"SDL_RenderSetLogicalSize"	; [ 3B3A 3B3A ] ; ABBA27:GETPROC	; [ 3B3A 3B3A 41BE ] ; ABBA2B:'sys-SDL_RenderSetLogicalSize	; [ 3B3A 3B3A ] ; ABBA2F:!	; [ 3B3A 3B3A 1F6 ] ; ABBA33:DUP	; [ 3B3A ] ; ABBA37:"SDL_SetRenderDrawBlendMode"	; [ 3B3A 3B3A ] ; ABBA3B:GETPROC	; [ 3B3A 3B3A 4206 ] ; ABBA3F:'sys-SDL_SetRenderDrawBlendMode	; [ 3B3A 3B3A ] ; ABBA43:!	; [ 3B3A 3B3A 1F7 ] ; ABBA47:DUP	; [ 3B3A ] ; ABBA4B:"SDL_SetTextureBlendMode"	; [ 3B3A 3B3A ] ; ABBA4F:GETPROC	; [ 3B3A 3B3A 4252 ] ; ABBA53:'sys-SDL_SetTextureBlendMode	; [ 3B3A 3B3A ] ; ABBA57:!	; [ 3B3A 3B3A 1F8 ] ; ABBA5B:DUP	; [ 3B3A ] ; ABBA5F:"SDL_ConvertSurfaceFormat"	; [ 3B3A 3B3A ] ; ABBA63:GETPROC	; [ 3B3A 3B3A 4298 ] ; ABBA67:'sys-SDL_ConvertSurfaceFormat	; [ 3B3A 3B3A ] ; ABBA6B:!	; [ 3B3A 3B3A 1F9 ] ; ABBA6F:DUP	; [ 3B3A ] ; ABBA73:"SDL_RenderDrawPoint"	; [ 3B3A 3B3A ] ; ABBA77:GETPROC	; [ 3B3A 3B3A 42E2 ] ; ABBA7B:'sys-SDL_RenderDrawPoint	; [ 3B3A 3B3A ] ; ABBA7F:!	; [ 3B3A 3B3A 1FA ] ; ABBA83:DUP	; [ 3B3A ] ; ABBA87:"SDL_RenderDrawLine"	; [ 3B3A 3B3A ] ; ABBA8B:GETPROC	; [ 3B3A 3B3A 4320 ] ; ABBA8F:'sys-SDL_RenderDrawLine	; [ 3B3A 3B3A ] ; ABBA93:!	; [ 3B3A 3B3A 1FB ] ; ABBA97:DUP	; [ 3B3A ] ; ABBA9B:"SDL_RenderDrawRect"	; [ 3B3A 3B3A ] ; ABBA9F:GETPROC	; [ 3B3A 3B3A 435C ] ; ABBAA3:'sys-SDL_RenderDrawRect	; [ 3B3A 3B3A ] ; ABBAA7:!	; [ 3B3A 3B3A 1FC ] ; ABBAAB:DUP	; [ 3B3A ] ; ABBAAF:"SDL_RenderFillRect"	; [ 3B3A 3B3A ] ; ABBAB3:GETPROC	; [ 3B3A 3B3A 4398 ] ; ABBAB7:'sys-SDL_RenderFillRect	; [ 3B3A 3B3A ] ; ABBABB:!	; [ 3B3A 3B3A 1FD ] ; ABBABF:DUP	; [ 3B3A ] ; ABBAC3:"SDL_RenderReadPixels"	; [ 3B3A 3B3A ] ; ABBAC7:GETPROC	; [ 3B3A 3B3A 43D4 ] ; ABBACB:'sys-SDL_RenderReadPixels	; [ 3B3A 3B3A ] ; ABBACF:!	; [ 3B3A 3B3A 1FE ] ; ABBAD3:DUP	; [ 3B3A ] ; ABBAD7:"SDL_Delay"	; [ 3B3A 3B3A ] ; ABBADB:GETPROC	; [ 3B3A 3B3A 4414 ] ; ABBADF:'sys-SDL_Delay	; [ 3B3A 3B3A ] ; ABBAE3:!	; [ 3B3A 3B3A 1FF ] ; ABBAE7:DUP	; [ 3B3A ] ; ABBAEB:"SDL_PollEvent"	; [ 3B3A 3B3A ] ; ABBAEF:GETPROC	; [ 3B3A 3B3A 443E ] ; ABBAF3:'sys-SDL_PollEvent	; [ 3B3A 3B3A ] ; ABBAF7:!	; [ 3B3A 3B3A 200 ] ; ABBAFB:DUP	; [ 3B3A ] ; ABBAFF:"SDL_GetTicks"	; [ 3B3A 3B3A ] ; ABBB03:GETPROC	; [ 3B3A 3B3A 4470 ] ; ABBB07:'sys-SDL_GetTicks	; [ 3B3A 3B3A ] ; ABBB0B:!	; [ 3B3A 3B3A 201 ] ; ABBB0F:DUP	; [ 3B3A ] ; ABBB13:"SDL_RWFromFile"	; [ 3B3A 3B3A ] ; ABBB17:GETPROC	; [ 3B3A 3B3A 44A2 ] ; ABBB1B:'sys-SDL_RWFromFile	; [ 3B3A 3B3A ] ; ABBB1F:!	; [ 3B3A 3B3A 204 ] ; ABBB23:DUP	; [ 3B3A ] ; ABBB27:"SDL_GL_SetAttribute"	; [ 3B3A 3B3A ] ; ABBB2B:GETPROC	; [ 3B3A 3B3A 44D8 ] ; ABBB2F:'sys-SDL_GL_SetAttribute	; [ 3B3A 3B3A ] ; ABBB33:!	; [ 3B3A 3B3A 205 ] ; ABBB37:DUP	; [ 3B3A ] ; ABBB3B:"SDL_GL_CreateContext"	; [ 3B3A 3B3A ] ; ABBB3F:GETPROC	; [ 3B3A 3B3A 4516 ] ; ABBB43:'sys-SDL_GL_CreateContext	; [ 3B3A 3B3A ] ; ABBB47:!	; [ 3B3A 3B3A 206 ] ; ABBB4B:DUP	; [ 3B3A ] ; ABBB4F:"SDL_GL_DeleteContext"	; [ 3B3A 3B3A ] ; ABBB53:GETPROC	; [ 3B3A 3B3A 4556 ] ; ABBB57:'sys-SDL_GL_DeleteContext	; [ 3B3A 3B3A ] ; ABBB5B:!	; [ 3B3A 3B3A 207 ] ; ABBB5F:DUP	; [ 3B3A ] ; ABBB63:"SDL_GL_SetSwapInterval"	; [ 3B3A 3B3A ] ; ABBB67:GETPROC	; [ 3B3A 3B3A 4596 ] ; ABBB6B:'sys-SDL_GL_SetSwapInterval	; [ 3B3A 3B3A ] ; ABBB6F:!	; [ 3B3A 3B3A 208 ] ; ABBB73:DUP	; [ 3B3A ] ; ABBB77:"SDL_GL_SwapWindow"	; [ 3B3A 3B3A ] ; ABBB7B:GETPROC	; [ 3B3A 3B3A 45DA ] ; ABBB7F:'sys-SDL_GL_SwapWindow	; [ 3B3A 3B3A ] ; ABBB83:!	; [ 3B3A 3B3A 209 ] ; ABBB87:DROP	; [ 3B3A ] ; ABBB8B:;	; [ ] ;---------ANA;---------GEN; call w162; "SDL2.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str3B3A; DUPadd rbp,8mov [rbp],rax; "SDL_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3B52; 'sys-SDL_Init; OPTAV !mov qword[w1DB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3B7A; 'sys-SDL_Quit; OPTAV !mov qword[w1DC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetNumVideoDisplays"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3BA2; 'sys-SDL_GetNumVideoDisplays; OPTAV !mov qword[w1DD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3BE8; 'sys-SDL_CreateWindow; OPTAV !mov qword[w1DE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetWindowFullscreen"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3C20; 'sys-SDL_SetWindowFullscreen; OPTAV !mov qword[w1DF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3C66; 'sys-SDL_GetWindowSurface; OPTAV !mov qword[w1E0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ShowCursor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3CA6; 'sys-SDL_ShowCursor; OPTAV !mov qword[w1E2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RaiseWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3CDC; 'sys-SDL_RaiseWindow; OPTAV !mov qword[w1E1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3D12; 'sys-SDL_UpdateWindowSurface; OPTAV !mov qword[w1E3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3D58; 'sys-SDL_DestroyWindow; OPTAV !mov qword[w1E4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3D92; 'sys-SDL_CreateRenderer; OPTAV !mov qword[w1E5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3DCE; 'sys-SDL_CreateTexture; OPTAV !mov qword[w1E6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3E08; 'sys-SDL_DestroyTexture; OPTAV !mov qword[w1E7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3E44; 'sys-SDL_DestroyRenderer; OPTAV !mov qword[w1E8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3E82; 'sys-SDL_UpdateTexture; OPTAV !mov qword[w1E9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderClear"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3EBC; 'sys-SDL_RenderClear; OPTAV !mov qword[w1EA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopy"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3EF2; 'sys-SDL_RenderCopy; OPTAV !mov qword[w1EB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopyEx"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3F26; 'sys-SDL_RenderCopyEx; OPTAV !mov qword[w1EC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderPresent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3F5E; 'sys-SDL_RenderPresent; OPTAV !mov qword[w1ED],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTextureFromSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3F98; 'sys-SDL_CreateTextureFromSurface; OPTAV !mov qword[w1EF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_QueryTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3FE8; 'sys-SDL_QueryTexture; OPTAV !mov qword[w1F0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureColorMod"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4020; 'sys-SDL_SetTextureColorMod; OPTAV !mov qword[w20A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawColor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4064; 'sys-SDL_SetRenderDrawColor; OPTAV !mov qword[w1EE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str40A8; 'sys-SDL_LockSurface; OPTAV !mov qword[w1F1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str40DE; 'sys-SDL_UnlockSurface; OPTAV !mov qword[w1F2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_FreeSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4118; 'sys-SDL_FreeSurface; OPTAV !mov qword[w1F3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str414E; 'sys-SDL_LockTexture; OPTAV !mov qword[w1F4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4184; 'sys-SDL_UnlockTexture; OPTAV !mov qword[w1F5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderSetLogicalSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str41BE; 'sys-SDL_RenderSetLogicalSize; OPTAV !mov qword[w1F6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4206; 'sys-SDL_SetRenderDrawBlendMode; OPTAV !mov qword[w1F7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4252; 'sys-SDL_SetTextureBlendMode; OPTAV !mov qword[w1F8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ConvertSurfaceFormat"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4298; 'sys-SDL_ConvertSurfaceFormat; OPTAV !mov qword[w1F9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawPoint"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str42E2; 'sys-SDL_RenderDrawPoint; OPTAV !mov qword[w1FA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawLine"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4320; 'sys-SDL_RenderDrawLine; OPTAV !mov qword[w1FB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str435C; 'sys-SDL_RenderDrawRect; OPTAV !mov qword[w1FC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderFillRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4398; 'sys-SDL_RenderFillRect; OPTAV !mov qword[w1FD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderReadPixels"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str43D4; 'sys-SDL_RenderReadPixels; OPTAV !mov qword[w1FE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Delay"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4414; 'sys-SDL_Delay; OPTAV !mov qword[w1FF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_PollEvent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str443E; 'sys-SDL_PollEvent; OPTAV !mov qword[w200],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetTicks"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4470; 'sys-SDL_GetTicks; OPTAV !mov qword[w201],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RWFromFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str44A2; 'sys-SDL_RWFromFile; OPTAV !mov qword[w204],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetAttribute"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str44D8; 'sys-SDL_GL_SetAttribute; OPTAV !mov qword[w205],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_CreateContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4516; 'sys-SDL_GL_CreateContext; OPTAV !mov qword[w206],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_DeleteContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4556; 'sys-SDL_GL_DeleteContext; OPTAV !mov qword[w207],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetSwapInterval"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4596; 'sys-SDL_GL_SetSwapInterval; OPTAV !mov qword[w208],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SwapWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str45DA; 'sys-SDL_GL_SwapWindow; OPTAV !mov qword[w209],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLcolor  |100B482|e     . I| calls:11 niv:1 len:19 ( a --  )w255:;---------OPT; ABBB8F:SDLrenderer	; [ 0 ] ; ABBB93:SWAP	; [ 0 23D ] ; ABBB97:DUP	; [ 23D 0 ] ; ABBB9B:16	; [ 23D 0 0 ] ; ABBB9F:>>	; [ 23D 0 0 0 ] ; ABBBA3:$ff	; [ 23D 0 0 ] ; ABBBA7:AND	; [ 23D 0 0 1 ] ; ABBBAB:SWAP	; [ 23D 0 0 ] ; ABBBAF:DUP	; [ 23D 0 0 ] ; ABBBB3:8	; [ 23D 0 0 0 ] ; ABBBB7:>>	; [ 23D 0 0 0 2 ] ; ABBBBB:$ff	; [ 23D 0 0 0 ] ; ABBBBF:AND	; [ 23D 0 0 0 3 ] ; ABBBC3:SWAP	; [ 23D 0 0 0 ] ; ABBBC7:$ff	; [ 23D 0 0 0 ] ; ABBBCB:AND	; [ 23D 0 0 0 4 ] ; ABBBCF:$ff	; [ 23D 0 0 0 ] ; ABBBD3:SDL_SetRenderDrawColor	; [ 23D 0 0 0 5 ] ; ABB2A3:sys-SDL_SetRenderDrawColor	; [ 23D 0 0 0 5 ] ; ABB2A7:SYS5	; [ 23D 0 0 0 5 1EE ] ; ABB2AB:DROP	; [ 23D ] ; ABBBD7:;	; [ ] ;---------ANA;---------GEN; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; $ff; OPTN ANDand rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; sys-SDL_SetRenderDrawColoradd rbp,8mov [rbp],raxmov rax,qword[w1EE]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLLine  |1001482|e     . I| calls:1 niv:1 len:11 ( abcd --  )w257:;---------OPT; ABBBEF:>R	; [ 3 2 1 0 ] ; ABBBF3:>R	; [ 3 2 1 ] ; ABBBF7:>R	; [ 3 2 ] ; ABBBFB:>R	; [ 3 ] ; ABBBFF:SDLrenderer	; [ ] ; ABBC03:R>	; [ 23D ] ; ABBC07:R>	; [ 23D 23D ] ; ABBC0B:R>	; [ 23D 23D 23D ] ; ABBC0F:R>	; [ 23D 23D 23D 23D ] ; ABBC13:SDL_RenderDrawLine	; [ 23D 23D 23D 23D 23D ] ; ABB34F:sys-SDL_RenderDrawLine	; [ 23D 23D 23D 23D 23D ] ; ABB353:SYS5	; [ 23D 23D 23D 23D 23D 1FB ] ; ABB357:DROP	; [ 23D ] ; ABBC17:;	; [ ] ;---------ANA;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; sys-SDL_RenderDrawLineadd rbp,8mov [rbp],raxmov rax,qword[w1FB]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLFillRect  |1001482|e     . I| calls:1 niv:1 len:12 ( abcd --  )w25B:;---------OPT; ABBC3B:SWAP	; [ 3 2 1 0 ] ; ABBC3F:2SWAP	; [ 3 2 0 1 ] ; ABBC43:SWAP	; [ 0 1 3 2 ] ; ABBC47:'rec	; [ 0 1 2 3 ] ; ABBC4B:D!+	; [ 0 1 2 3 258 ] ; ABBC4F:D!+	; [ 0 1 2 3 ] ; ABBC53:D!+	; [ 0 1 2 ] ; ABBC57:D!	; [ 0 1 ] ; ABBC5B:SDLrenderer	; [ ] ; ABBC5F:'rec	; [ 23D ] ; ABBC63:SDL_RenderFillRect	; [ 23D 258 ] ; ABB36F:sys-SDL_RenderFillRect	; [ 23D 258 ] ; ABB373:SYS2	; [ 23D 258 1FD ] ; ABB377:DROP	; [ 23D ] ; ABBC67:;	; [ ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SWAPxchg rax,[rbp]; 'rec; OPTAV D!+mov rcx,w258mov dword[rcx],eaxadd rcx,4mov rax,rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; 'recadd rbp,8mov [rbp],raxmov rax,w258; sys-SDL_RenderFillRectadd rbp,8mov [rbp],raxmov rax,qword[w1FD]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLRect  |1004482|e     . I| calls:4 niv:1 len:12 ( abcd --  )w25C:;---------OPT; ABBC6B:SWAP	; [ 3 2 1 0 ] ; ABBC6F:2SWAP	; [ 3 2 0 1 ] ; ABBC73:SWAP	; [ 0 1 3 2 ] ; ABBC77:'rec	; [ 0 1 2 3 ] ; ABBC7B:D!+	; [ 0 1 2 3 258 ] ; ABBC7F:D!+	; [ 0 1 2 3 ] ; ABBC83:D!+	; [ 0 1 2 ] ; ABBC87:D!	; [ 0 1 ] ; ABBC8B:SDLrenderer	; [ ] ; ABBC8F:'rec	; [ 23D ] ; ABBC93:SDL_RenderDrawRect	; [ 23D 258 ] ; ABB35F:sys-SDL_RenderDrawRect	; [ 23D 258 ] ; ABB363:SYS2	; [ 23D 258 1FC ] ; ABB367:DROP	; [ 23D ] ; ABBC97:;	; [ ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SWAPxchg rax,[rbp]; 'rec; OPTAV D!+mov rcx,w258mov dword[rcx],eaxadd rcx,4mov rax,rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; 'recadd rbp,8mov [rbp],raxmov rax,w258; sys-SDL_RenderDrawRectadd rbp,8mov [rbp],raxmov rax,qword[w1FC]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLimages  |1001482|e     . I| calls:1 niv:1 len:15 ( abcde --  )w25D:;---------OPT; ABBC9B:>R	; [ 4 3 2 1 0 ] ; ABBC9F:SWAP	; [ 4 3 2 1 ] ; ABBCA3:2SWAP	; [ 4 3 1 2 ] ; ABBCA7:SWAP	; [ 1 2 4 3 ] ; ABBCAB:'rec	; [ 1 2 3 4 ] ; ABBCAF:D!+	; [ 1 2 3 4 258 ] ; ABBCB3:D!+	; [ 1 2 3 4 ] ; ABBCB7:D!+	; [ 1 2 3 ] ; ABBCBB:D!	; [ 1 2 ] ; ABBCBF:SDLrenderer	; [ ] ; ABBCC3:R>	; [ 23D ] ; ABBCC7:0	; [ 23D 23D ] ; ABBCCB:'rec	; [ 23D 23D 0 ] ; ABBCCF:SDL_RenderCopy	; [ 23D 23D 0 258 ] ; ABB267:sys-SDL_RenderCopy	; [ 23D 23D 0 258 ] ; ABB26B:SYS4	; [ 23D 23D 0 258 1EB ] ; ABB26F:DROP	; [ 23D ] ; ABBCD3:;	; [ ] ;---------ANA;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SWAPxchg rax,[rbp]; 'rec; OPTAV D!+mov rcx,w258mov dword[rcx],eaxadd rcx,4mov rax,rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; R>add rbp,8mov [rbp],raxpop rax; 0add rbp,8mov [rbp],raxxor rax,rax; 'recadd rbp,8mov [rbp],raxmov rax,w258; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w1EB]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLimage  |1001482|e     . I| calls:1 niv:1 len:22 ( abc --  )w25E:;---------OPT; ABBCD7:DUP	; [ 2 1 0 ] ; ABBCDB:0	; [ 2 1 0 0 ] ; ABBCDF:0	; [ 2 1 0 0 0 ] ; ABBCE3:'w	; [ 2 1 0 0 0 1 ] ; ABBCE7:'h	; [ 2 1 0 0 0 1 259 ] ; ABBCEB:SDL_QueryTexture	; [ 2 1 0 0 0 1 259 25A ] ; ABB20F:sys-SDL_QueryTexture	; [ 2 1 0 0 0 1 259 25A ] ; ABB213:SYS5	; [ 2 1 0 0 0 1 259 25A 1F0 ] ; ABB217:DROP	; [ 2 1 0 0 ] ; ABBCEF:>R	; [ 2 1 0 ] ; ABBCF3:SWAP	; [ 2 1 ] ; ABBCF7:'rec	; [ 1 2 ] ; ABBCFB:D!+	; [ 1 2 258 ] ; ABBCFF:D!+	; [ 1 2 ] ; ABBD03:h	; [ 1 ] ; ABBD07:w	; [ 1 25A ] ; ABBD0B:ROT	; [ 1 25A 259 ] ; ABBD0F:D!+	; [ 25A 259 1 ] ; ABBD13:D!	; [ 25A 259 ] ; ABBD17:SDLrenderer	; [ ] ; ABBD1B:R>	; [ 23D ] ; ABBD1F:0	; [ 23D 23D ] ; ABBD23:'rec	; [ 23D 23D 2 ] ; ABBD27:SDL_RenderCopy	; [ 23D 23D 2 258 ] ; ABB267:sys-SDL_RenderCopy	; [ 23D 23D 2 258 ] ; ABB26B:SYS4	; [ 23D 23D 2 258 1EB ] ; ABB26F:DROP	; [ 23D ] ; ABBD2B:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 'wadd rbp,8mov [rbp],raxmov rax,w259; 'hadd rbp,8mov [rbp],raxmov rax,w25A; sys-SDL_QueryTextureadd rbp,8mov [rbp],raxmov rax,qword[w1F0]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 'rec; OPTAV D!+mov rcx,w258mov dword[rcx],eaxadd rcx,4mov rax,rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; hadd rbp,8mov [rbp],raxmov rax,qword[w25A]; wadd rbp,8mov [rbp],raxmov rax,qword[w259]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; R>add rbp,8mov [rbp],raxpop rax; 0add rbp,8mov [rbp],raxxor rax,rax; 'recadd rbp,8mov [rbp],raxmov rax,w258; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w1EB]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :inielipse  |1080|l     .  | calls:1 niv:0 len:46 ( abcd -- efgh )w265:;---------OPT; ABBD4B:'ym	; [ 3 2 1 0 ] ; ABBD4F:!	; [ 3 2 1 0 261 ] ; ABBD53:'xm	; [ 3 2 1 ] ; ABBD57:!	; [ 3 2 1 262 ] ; ABBD5B:OVER	; [ 3 2 ] ; ABBD5F:DUP	; [ 3 2 3 ] ; ABBD63:*	; [ 3 2 3 3 ] ; ABBD67:DUP	; [ 3 2 3 ] ; ABBD6B:1	; [ 3 2 3 3 ] ; ABBD6F:<<	; [ 3 2 3 3 0 ] ; ABBD73:SWAP	; [ 3 2 3 3 ] ; ABBD77:DUP	; [ 3 2 3 3 ] ; ABBD7B:>A	; [ 3 2 3 3 3 ] ; ABBD7F:'dy	; [ 3 2 3 3 ] ; ABBD83:!	; [ 3 2 3 3 264 ] ; ABBD87:ROT	; [ 3 2 3 ] ; ABBD8B:ROT	; [ 2 3 3 ] ; ABBD8F:OVER	; [ 3 3 2 ] ; ABBD93:NEG	; [ 3 3 2 3 ] ; ABBD97:1	; [ 3 3 2 3 ] ; ABBD9B:<<	; [ 3 3 2 3 1 ] ; ABBD9F:1	; [ 3 3 2 3 ] ; ABBDA3:+	; [ 3 3 2 3 2 ] ; ABBDA7:SWAP	; [ 3 3 2 3 ] ; ABBDAB:DUP	; [ 3 3 3 2 ] ; ABBDAF:*	; [ 3 3 3 2 2 ] ; ABBDB3:DUP	; [ 3 3 3 2 ] ; ABBDB7:1	; [ 3 3 3 2 2 ] ; ABBDBB:<<	; [ 3 3 3 2 2 3 ] ; ABBDBF:ROT	; [ 3 3 3 2 2 ] ; ABBDC3:ROT	; [ 3 3 2 2 3 ] ; ABBDC7:*	; [ 3 3 2 3 2 ] ; ABBDCB:DUP	; [ 3 3 2 3 ] ; ABBDCF:A+	; [ 3 3 2 3 3 ] ; ABBDD3:'dx	; [ 3 3 2 3 ] ; ABBDD7:!	; [ 3 3 2 3 263 ] ; ABBDDB:1	; [ 3 3 2 ] ; ABBDDF:+	; [ 3 3 2 4 ] ; ABBDE3:SWAP	; [ 3 3 2 ] ; ABBDE7:1	; [ 3 2 3 ] ; ABBDEB:PICK3	; [ 3 2 3 5 ] ; ABBDEF:'dy	; [ 3 2 3 5 3 ] ; ABBDF3:+!	; [ 3 2 3 5 3 264 ] ; ABBDF7:dy	; [ 3 2 3 5 ] ; ABBDFB:A+	; [ 3 2 3 5 264 ] ; ABBDFF:;	; [ 3 2 3 5 ] ;---------ANA;---------GEN; 'ym; OPTAV !mov qword[w261],raxmov rax,[rbp]sub rbp,8; 'xm; OPTAV !mov qword[w262],raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; *imul rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; >Amov r14,raxmov rax,[rbp]sub rbp,8; 'dy; OPTAV !mov qword[w264],raxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; NEGneg rax; 1; OPTN <<shl rax,1; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; *imul rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; *imul rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A+add r14,raxmov rax,[rbp]sub rbp,8; 'dx; OPTAV !mov qword[w263],raxmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; 1add rbp,8mov [rbp],raxmov rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 'dy; OPTAV +!add [w264],raxmov rax,[rbp]sub rbp,8; dy; OPTV A+add r14,qword[w264]; ;ret;--------------------------; :qfb  |3002480|l     . I| calls:2 niv:3 len:21 ( ab -- cd )w269:;---------OPT; ABBF4B:xm	; [ 1 0 ] ; ABBF4F:PICK2	; [ 1 0 262 ] ; ABBF53:-	; [ 1 0 262 1 ] ; ABBF57:ym	; [ 1 0 262 ] ; ABBF5B:PICK2	; [ 1 0 262 261 ] ; ABBF5F:-	; [ 1 0 262 261 0 ] ; ABBF63:xm	; [ 1 0 262 261 ] ; ABBF67:PICK4	; [ 1 0 262 261 262 ] ; ABBF6B:+	; [ 1 0 262 261 262 1 ] ; ABBF6F:borde	; [ 1 0 262 261 262 ] ; ABBF3B:OVER	; [ 1 0 262 261 262 ] ; ABBF3F:SDLPoint	; [ 1 0 262 261 262 261 ] ; ABBBDB:SDLrenderer	; [ 1 0 262 261 262 261 ] ; ABBBDF:ROT	; [ 1 0 262 261 262 261 23D ] ; ABBBE3:ROT	; [ 1 0 262 261 261 23D 262 ] ; ABBBE7:SDL_RenderDrawPoint	; [ 1 0 262 261 23D 262 261 ] ; ABB33F:sys-SDL_RenderDrawPoint	; [ 1 0 262 261 23D 262 261 ] ; ABB343:SYS3	; [ 1 0 262 261 23D 262 261 1FA ] ; ABB347:DROP	; [ 1 0 262 261 23D ] ; ABBF43:SDLPoint	; [ 1 0 262 261 ] ; ABBBDB:SDLrenderer	; [ 1 0 262 261 ] ; ABBBDF:ROT	; [ 1 0 262 261 23D ] ; ABBBE3:ROT	; [ 1 0 261 23D 262 ] ; ABBBE7:SDL_RenderDrawPoint	; [ 1 0 23D 262 261 ] ; ABB33F:sys-SDL_RenderDrawPoint	; [ 1 0 23D 262 261 ] ; ABB343:SYS3	; [ 1 0 23D 262 261 1FA ] ; ABB347:DROP	; [ 1 0 23D ] ; ABBF73:xm	; [ 1 0 ] ; ABBF77:PICK2	; [ 1 0 262 ] ; ABBF7B:-	; [ 1 0 262 1 ] ; ABBF7F:ym	; [ 1 0 262 ] ; ABBF83:PICK2	; [ 1 0 262 261 ] ; ABBF87:+	; [ 1 0 262 261 0 ] ; ABBF8B:xm	; [ 1 0 262 261 ] ; ABBF8F:PICK4	; [ 1 0 262 261 262 ] ; ABBF93:+	; [ 1 0 262 261 262 1 ] ; ABBF97:borde	; [ 1 0 262 261 262 ] ; ABBF3B:OVER	; [ 1 0 262 261 262 ] ; ABBF3F:SDLPoint	; [ 1 0 262 261 262 261 ] ; ABBBDB:SDLrenderer	; [ 1 0 262 261 262 261 ] ; ABBBDF:ROT	; [ 1 0 262 261 262 261 23D ] ; ABBBE3:ROT	; [ 1 0 262 261 261 23D 262 ] ; ABBBE7:SDL_RenderDrawPoint	; [ 1 0 262 261 23D 262 261 ] ; ABB33F:sys-SDL_RenderDrawPoint	; [ 1 0 262 261 23D 262 261 ] ; ABB343:SYS3	; [ 1 0 262 261 23D 262 261 1FA ] ; ABB347:DROP	; [ 1 0 262 261 23D ] ; ABBF43:SDLPoint	; [ 1 0 262 261 ] ; ABBBDB:SDLrenderer	; [ 1 0 262 261 ] ; ABBBDF:ROT	; [ 1 0 262 261 23D ] ; ABBBE3:ROT	; [ 1 0 261 23D 262 ] ; ABBBE7:SDL_RenderDrawPoint	; [ 1 0 23D 262 261 ] ; ABB33F:sys-SDL_RenderDrawPoint	; [ 1 0 23D 262 261 ] ; ABB343:SYS3	; [ 1 0 23D 262 261 1FA ] ; ABB347:DROP	; [ 1 0 23D ] ; ABBF9B:;	; [ 1 0 ] ;---------ANA;---------GEN; xmadd rbp,8mov [rbp],raxmov rax,qword[w262]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ymadd rbp,8mov [rbp],raxmov rax,qword[w261]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; xmadd rbp,8mov [rbp],raxmov rax,qword[w262]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; sys-SDL_RenderDrawPointadd rbp,8mov [rbp],raxmov rax,qword[w1FA]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; sys-SDL_RenderDrawPointadd rbp,8mov [rbp],raxmov rax,qword[w1FA]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; xmadd rbp,8mov [rbp],raxmov rax,qword[w262]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ymadd rbp,8mov [rbp],raxmov rax,qword[w261]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; xmadd rbp,8mov [rbp],raxmov rax,qword[w262]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; sys-SDL_RenderDrawPointadd rbp,8mov [rbp],raxmov rax,qword[w1FA]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; sys-SDL_RenderDrawPointadd rbp,8mov [rbp],raxmov rax,qword[w1FA]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLEllipse  |4001482|e     . I| calls:1 niv:4 len:55 ( abcd --  )w26A:;---------OPT; ABBF9F:A>	; [ 3 2 1 0 ] ; ABBFA3:>R	; [ 3 2 1 0 0 ] ; ABBFA7:inielipse	; [ 3 2 1 0 ] ; ABBFAB:xm	; [ 3 2 1 0 ] ; ABBFAF:PICK2	; [ 3 2 1 0 262 ] ; ABBFB3:-	; [ 3 2 1 0 262 1 ] ; ABBFB7:ym	; [ 3 2 1 0 262 ] ; ABBFBB:xm	; [ 3 2 1 0 262 261 ] ; ABBFBF:PICK4	; [ 3 2 1 0 262 261 262 ] ; ABBFC3:+	; [ 3 2 1 0 262 261 262 1 ] ; ABBFC7:borde	; [ 3 2 1 0 262 261 262 ] ; ABBF3B:OVER	; [ 3 2 1 0 262 261 262 ] ; ABBF3F:SDLPoint	; [ 3 2 1 0 262 261 262 261 ] ; ABBBDB:SDLrenderer	; [ 3 2 1 0 262 261 262 261 ] ; ABBBDF:ROT	; [ 3 2 1 0 262 261 262 261 23D ] ; ABBBE3:ROT	; [ 3 2 1 0 262 261 261 23D 262 ] ; ABBBE7:SDL_RenderDrawPoint	; [ 3 2 1 0 262 261 23D 262 261 ] ; ABB33F:sys-SDL_RenderDrawPoint	; [ 3 2 1 0 262 261 23D 262 261 ] ; ABB343:SYS3	; [ 3 2 1 0 262 261 23D 262 261 1FA ] ; ABB347:DROP	; [ 3 2 1 0 262 261 23D ] ; ABBF43:SDLPoint	; [ 3 2 1 0 262 261 ] ; ABBBDB:SDLrenderer	; [ 3 2 1 0 262 261 ] ; ABBBDF:ROT	; [ 3 2 1 0 262 261 23D ] ; ABBBE3:ROT	; [ 3 2 1 0 261 23D 262 ] ; ABBBE7:SDL_RenderDrawPoint	; [ 3 2 1 0 23D 262 261 ] ; ABB33F:sys-SDL_RenderDrawPoint	; [ 3 2 1 0 23D 262 261 ] ; ABB343:SYS3	; [ 3 2 1 0 23D 262 261 1FA ] ; ABB347:DROP	; [ 3 2 1 0 23D ] ; ABBFCB:(	; [ 3 2 1 0 ] ; ABBFCF:SWAP	; [ 3 2 1 0 ] ; ABBFD3:0	; [ 3 2 0 1 ] ; ABBFD7:>?	; [ 3 2 0 1 0 ] ; ABBFDB:SWAP	; [ 3 2 0 1 ] ; ABBFDF:A>	; [ 3 2 1 0 ] ; ABBFE3:1	; [ 3 2 1 0 0 ] ; ABBFE7:<<	; [ 3 2 1 0 0 1 ] ; ABBFEB:dx	; [ 3 2 1 0 0 ] ; ABBFEF:>=?	; [ 3 2 1 0 0 263 ] ; ABBFF3:(	; [ 3 2 1 0 0 ] ; ABBFF7:ROT	; [ 3 2 1 0 0 ] ; ABBFFB:1	; [ 3 2 0 0 1 ] ; ABBFFF:-	; [ 3 2 0 0 1 2 ] ; ABC003:ROT	; [ 3 2 0 0 1 ] ; ABC007:qfb	; [ 3 2 0 1 0 ] ; ABC00B:ROT	; [ 3 2 0 1 0 ] ; ABC00F:PICK3	; [ 3 2 1 0 0 ] ; ABC013:'dx	; [ 3 2 1 0 0 2 ] ; ABC017:+!	; [ 3 2 1 0 0 2 263 ] ; ABC01B:dx	; [ 3 2 1 0 0 ] ; ABC01F:A+	; [ 3 2 1 0 0 263 ] ; ABC023:)	; [ 3 2 1 0 0 ] ; ABC027:dy	; [ 3 2 1 0 0 ] ; ABC02B:<=?	; [ 3 2 1 0 0 264 ] ; ABC02F:(	; [ 3 2 1 0 0 ] ; ABC033:ROT	; [ 3 2 1 0 0 ] ; ABC037:ROT	; [ 3 2 0 0 1 ] ; ABC03B:qfb	; [ 3 2 0 1 0 ] ; ABC03F:1	; [ 3 2 0 1 0 ] ; ABC043:+	; [ 3 2 0 1 0 3 ] ; ABC047:ROT	; [ 3 2 0 1 0 ] ; ABC04B:PICK4	; [ 3 2 1 0 0 ] ; ABC04F:'dy	; [ 3 2 1 0 0 3 ] ; ABC053:+!	; [ 3 2 1 0 0 3 264 ] ; ABC057:dy	; [ 3 2 1 0 0 ] ; ABC05B:A+	; [ 3 2 1 0 0 264 ] ; ABC05F:)	; [ 3 2 1 0 0 ] ; ABC063:DROP	; [ 3 2 1 0 0 ] ; ABC067:)	; [ 3 2 1 0 ] ; ABC06B:4DROP	; [ 3 2 0 1 ] ; ABC06F:R>	; [ ] ; ABC073:>A	; [ 0 ] ; ABC077:;	; [ ] ;---------ANA;---------GEN; A>add rbp,8mov [rbp],raxmov rax,r14; >Rpush raxmov rax,[rbp]sub rbp,8; inielipsecall w265; xmadd rbp,8mov [rbp],raxmov rax,qword[w262]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ymadd rbp,8mov [rbp],raxmov rax,qword[w261]; xmadd rbp,8mov [rbp],raxmov rax,qword[w262]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; sys-SDL_RenderDrawPointadd rbp,8mov [rbp],raxmov rax,qword[w1FA]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; sys-SDL_RenderDrawPointadd rbp,8mov [rbp],raxmov rax,qword[w1FA]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; (_i1E:; SWAPxchg rax,[rbp]; 0; OPTN >?cmp rax,0jle _o1E; SWAPxchg rax,[rbp]; A>add rbp,8mov [rbp],raxmov rax,r14; 1; OPTN <<shl rax,1; dx; OPTV >=?cmp rax,qword[w263]jl _o1F; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN -sub rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; qfbcall w269; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 'dx; OPTAV +!add [w263],raxmov rax,[rbp]sub rbp,8; dx; OPTV A+add r14,qword[w263]; )_o1F:; dy; OPTV <=?cmp rax,qword[w264]jg _o20; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; qfbcall w269; 1; OPTN +add rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; 'dy; OPTAV +!add [w264],raxmov rax,[rbp]sub rbp,8; dy; OPTV A+add r14,qword[w264]; )_o20:; DROPmov rax,[rbp]sub rbp,8; )jmp _i1E_o1E:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; R>add rbp,8mov [rbp],raxpop rax; >Amov r14,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :loadimg  |1002492|e  ;  . I| calls:2 niv:1 len:11 ( a -- b )w277:;---------OPT; ABC50B:IMG_Load	; [ 0 ] ; ABC4EF:sys-IMG_Load	; [ 0 ] ; ABC4F3:SYS1	; [ 0 274 ] ; ABC50F:0?	; [ 0 ] ; ABC513:(	; [ 0 ] ; ABC517:;	; [ 0 ] ; ABC51B:)	; [ 0 ] ; ABC51F:SDLrenderer	; [ 0 ] ; ABC523:OVER	; [ 0 23D ] ; ABC527:SDL_CreateTextureFromSurface	; [ 0 23D 0 ] ; ABB297:sys-SDL_CreateTextureFromSurface	; [ 0 23D 0 ] ; ABB29B:SYS2	; [ 0 23D 0 1EF ] ; ABC52B:SWAP	; [ 0 23D ] ; ABC52F:SDL_FreeSurface	; [ 23D 0 ] ; ABB2D3:sys-SDL_FreeSurface	; [ 23D 0 ] ; ABB2D7:SYS1	; [ 23D 0 1F3 ] ; ABB2DB:DROP	; [ 23D 0 ] ; ABC533:;	; [ 23D ] ;---------ANA;---------GEN; sys-IMG_Loadadd rbp,8mov [rbp],raxmov rax,qword[w274]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 0?or rax,raxjnz _o21; (; ;ret; )_o21:; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; sys-SDL_CreateTextureFromSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1EF]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; SWAPxchg rax,[rbp]; sys-SDL_FreeSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w1F3]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |1001480|l     . I| calls:1 niv:1 len:17 (  --  )w279:;---------OPT; ABC553:	; [ ] ; ABC557:"SDL2_image.DLL"	; [ ] ; ABC55B:LOADLIB	; [ B6D2 ] ; ABC55F:DUP	; [ B6D2 ] ; ABC563:"IMG_Load"	; [ B6D2 B6D2 ] ; ABC567:GETPROC	; [ B6D2 B6D2 B6F0 ] ; ABC56B:'sys-IMG_Load	; [ B6D2 B6D2 ] ; ABC56F:!	; [ B6D2 B6D2 274 ] ; ABC573:DUP	; [ B6D2 ] ; ABC577:"IMG_Init"	; [ B6D2 B6D2 ] ; ABC57B:GETPROC	; [ B6D2 B6D2 B718 ] ; ABC57F:'sys-IMG_Init	; [ B6D2 B6D2 ] ; ABC583:!	; [ B6D2 B6D2 273 ] ; ABC587:DROP	; [ B6D2 ] ; ABC58B:$3	; [ ] ; ABC58F:IMG_Init	; [ 0 ] ; ABC4FB:sys-IMG_Init	; [ 0 ] ; ABC4FF:SYS1	; [ 0 273 ] ; ABC503:DROP	; [ 0 ] ; ABC593:;	; [ ] ;---------ANA;---------GEN; call w254; "SDL2_image.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,strB6D2; DUPadd rbp,8mov [rbp],rax; "IMG_Load"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB6F0; 'sys-IMG_Load; OPTAV !mov qword[w274],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "IMG_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,strB718; 'sys-IMG_Init; OPTAV !mov qword[w273],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; $3add rbp,8mov [rbp],raxmov rax,3; sys-IMG_Initadd rbp,8mov [rbp],raxmov rax,qword[w273]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :bmfont  |2001082|e     .  | calls:1 niv:2 len:21 ( abc --  )w27F:;---------OPT; ABC5A7:loadimg	; [ 2 1 0 ] ; ABC5AB:'pfont	; [ 2 1 0 ] ; ABC5AF:!	; [ 2 1 0 27A ] ; ABC5B3:2DUP	; [ 2 1 ] ; ABC5B7:32	; [ 2 1 2 1 ] ; ABC5BB:<<	; [ 2 1 2 1 0 ] ; ABC5BF:OR	; [ 2 1 2 1 ] ; ABC5C3:DUP	; [ 2 1 2 ] ; ABC5C7:'dp	; [ 2 1 2 2 ] ; ABC5CB:8	; [ 2 1 2 2 27E ] ; ABC5CF:+	; [ 2 1 2 2 27E 1 ] ; ABC5D3:!	; [ 2 1 2 2 27E ] ; ABC5D7:'op	; [ 2 1 2 ] ; ABC5DB:8	; [ 2 1 2 27D ] ; ABC5DF:+	; [ 2 1 2 27D 2 ] ; ABC5E3:!	; [ 2 1 2 27D ] ; ABC5E7:'hp	; [ 2 1 ] ; ABC5EB:!	; [ 2 1 27C ] ; ABC5EF:'wp	; [ 2 ] ; ABC5F3:!	; [ 2 27B ] ; ABC5F7:;	; [ ] ;---------ANA;---------GEN; loadimgcall w277; 'pfont; OPTAV !mov qword[w27A],raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 32; OPTN <<shl rax,32; ORor rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'dpadd rbp,8mov [rbp],raxmov rax,w27E; 8; OPTN +add rax,8; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 'opadd rbp,8mov [rbp],raxmov rax,w27D; 8; OPTN +add rax,8; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 'hp; OPTAV !mov qword[w27C],raxmov rax,[rbp]sub rbp,8; 'wp; OPTAV !mov qword[w27B],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :bemit  |1001482|e     . I| calls:1 niv:1 len:26 ( a --  )w281:;---------OPT; ABC63F:DUP	; [ 0 ] ; ABC643:$f	; [ 0 0 ] ; ABC647:AND	; [ 0 0 0 ] ; ABC64B:wp	; [ 0 0 ] ; ABC64F:*	; [ 0 0 27B ] ; ABC653:SWAP	; [ 0 0 ] ; ABC657:4	; [ 0 0 ] ; ABC65B:>>	; [ 0 0 1 ] ; ABC65F:$f	; [ 0 0 ] ; ABC663:AND	; [ 0 0 2 ] ; ABC667:hp	; [ 0 0 ] ; ABC66B:*	; [ 0 0 27C ] ; ABC66F:32	; [ 0 0 ] ; ABC673:<<	; [ 0 0 3 ] ; ABC677:OR	; [ 0 0 ] ; ABC67B:'op	; [ 0 ] ; ABC67F:!	; [ 0 27D ] ; ABC683:SDLrenderer	; [ ] ; ABC687:pfont	; [ 23D ] ; ABC68B:'op	; [ 23D 27A ] ; ABC68F:'dp	; [ 23D 27A 27D ] ; ABC693:SDL_RenderCopy	; [ 23D 27A 27D 27E ] ; ABB267:sys-SDL_RenderCopy	; [ 23D 27A 27D 27E ] ; ABB26B:SYS4	; [ 23D 27A 27D 27E 1EB ] ; ABB26F:DROP	; [ 23D ] ; ABC697:wp	; [ ] ; ABC69B:'dp	; [ 27B ] ; ABC69F:D+!	; [ 27B 27E ] ; ABC6A3:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; wp; OPTV *imul rax,qword[w27B]; SWAPxchg rax,[rbp]; 4; OPTN >>sar rax,4; $f; OPTN ANDand rax,15; hp; OPTV *imul rax,qword[w27C]; 32; OPTN <<shl rax,32; ORor rax,[rbp]sub rbp,8; 'op; OPTAV !mov qword[w27D],raxmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; pfontadd rbp,8mov [rbp],raxmov rax,qword[w27A]; 'opadd rbp,8mov [rbp],raxmov rax,w27D; 'dpadd rbp,8mov [rbp],raxmov rax,w27E; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w1EB]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; wpadd rbp,8mov [rbp],raxmov rax,qword[w27B]; 'dp; OPTAV D+!add dword[w27E],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :guiBox  |3082|e     .  | calls:3 niv:0 len:13 ( abcd --  )w293:;---------OPT; ABC737:PICK2	; [ 3 2 1 0 ] ; ABC73B:+	; [ 3 2 1 0 2 ] ; ABC73F:'yr2	; [ 3 2 1 0 ] ; ABC743:!	; [ 3 2 1 0 292 ] ; ABC747:PICK2	; [ 3 2 1 ] ; ABC74B:+	; [ 3 2 1 3 ] ; ABC74F:'xr2	; [ 3 2 1 ] ; ABC753:!	; [ 3 2 1 291 ] ; ABC757:'yr1	; [ 3 2 ] ; ABC75B:!	; [ 3 2 290 ] ; ABC75F:'xr1	; [ 3 ] ; ABC763:!	; [ 3 28F ] ; ABC767:;	; [ ] ;---------ANA;---------GEN; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 'yr2; OPTAV !mov qword[w292],raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 'xr2; OPTAV !mov qword[w291],raxmov rax,[rbp]sub rbp,8; 'yr1; OPTAV !mov qword[w290],raxmov rax,[rbp]sub rbp,8; 'xr1; OPTAV !mov qword[w28F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :guiIn  |3082|e     .  | calls:3 niv:0 len:24 ( abc --  )w297:;---------OPT; ABC78F:yr2	; [ 2 1 0 ] ; ABC793:OVER	; [ 2 1 0 292 ] ; ABC797:-	; [ 2 1 0 292 0 ] ; ABC79B:SWAP	; [ 2 1 0 292 ] ; ABC79F:yr1	; [ 2 1 292 0 ] ; ABC7A3:-	; [ 2 1 292 0 290 ] ; ABC7A7:OR	; [ 2 1 292 0 ] ; ABC7AB:SWAP	; [ 2 1 292 ] ; ABC7AF:xr2	; [ 2 292 1 ] ; ABC7B3:OVER	; [ 2 292 1 291 ] ; ABC7B7:-	; [ 2 292 1 291 1 ] ; ABC7BB:SWAP	; [ 2 292 1 291 ] ; ABC7BF:xr1	; [ 2 292 291 1 ] ; ABC7C3:-	; [ 2 292 291 1 28F ] ; ABC7C7:OR	; [ 2 292 291 1 ] ; ABC7CB:OR	; [ 2 292 291 ] ; ABC7CF:63	; [ 2 292 ] ; ABC7D3:>>	; [ 2 292 0 ] ; ABC7D7:NOT	; [ 2 292 ] ; ABC7DB:'in?	; [ 2 292 ] ; ABC7DF:!	; [ 2 292 295 ] ; ABC7E3:'btn?	; [ 2 ] ; ABC7E7:!	; [ 2 296 ] ; ABC7EB:;	; [ ] ;---------ANA;---------GEN; yr2add rbp,8mov [rbp],raxmov rax,qword[w292]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; yr1; OPTV -sub rax,qword[w290]; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; xr2add rbp,8mov [rbp],raxmov rax,qword[w291]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; xr1; OPTV -sub rax,qword[w28F]; ORor rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; 63; OPTN >>sar rax,63; NOTnot rax; 'in?; OPTAV !mov qword[w295],raxmov rax,[rbp]sub rbp,8; 'btn?; OPTAV !mov qword[w296],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :gui  |1082|e     .  | calls:1 niv:0 len:16 (  --  )w298:;---------OPT; ABC7EF:idf	; [ ] ; ABC7F3:'idl	; [ 28D ] ; ABC7F7:!	; [ 28D 28E ] ; ABC7FB:hot	; [ ] ; ABC7FF:'hotnow	; [ 288 ] ; ABC803:!	; [ 288 289 ] ; ABC807:0	; [ ] ; ABC80B:'id	; [ 0 ] ; ABC80F:!	; [ 0 28C ] ; ABC813:0	; [ ] ; ABC817:'idf	; [ 1 ] ; ABC81B:!	; [ 1 28D ] ; ABC81F:0	; [ ] ; ABC823:'hot	; [ 2 ] ; ABC827:!	; [ 2 288 ] ; ABC82B:;	; [ ] ;---------ANA;---------GEN; idfadd rbp,8mov [rbp],raxmov rax,qword[w28D]; 'idl; OPTAV !mov qword[w28E],raxmov rax,[rbp]sub rbp,8; hotadd rbp,8mov [rbp],raxmov rax,qword[w288]; 'hotnow; OPTAV !mov qword[w289],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'id; OPTAV !mov qword[w28C],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'idf; OPTAV !mov qword[w28D],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'hot; OPTAV !mov qword[w288],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :onClick  |1004092|e  ;  .  | calls:4 niv:1 len:29 ( a --  )w299:;---------OPT; ABC82F:1	; [ 0 ] ; ABC833:'id	; [ 0 0 ] ; ABC837:+!	; [ 0 0 28C ] ; ABC83B:in?	; [ 0 ] ; ABC83F:0?	; [ 0 295 ] ; ABC843:(	; [ 0 295 ] ; ABC847:2DROP	; [ 0 295 ] ; ABC84B:;	; [ ] ; ABC84F:)	; [ ] ; ABC853:DROP	; [ 0 295 ] ; ABC857:btn?	; [ 0 ] ; ABC85B:0?	; [ 0 296 ] ; ABC85F:(	; [ 0 296 ] ; ABC863:id	; [ 0 296 ] ; ABC867:hotnow	; [ 0 296 28C ] ; ABC86B:=?	; [ 0 296 28C 289 ] ; ABC86F:(	; [ 0 296 28C ] ; ABC873:2DROP	; [ 0 296 28C ] ; ABC877:EX	; [ 0 ] ; ABC87B:;	; [ 0 ] ; ABC87F:)	; [ 0 ] ; ABC883:3DROP	; [ 0 296 28C ] ; ABC887:;	; [ ] ; ABC88B:)	; [ ] ; ABC88F:2DROP	; [ 0 296 ] ; ABC893:id	; [ ] ; ABC897:'hot	; [ 28C ] ; ABC89B:!	; [ 28C 288 ] ; ABC89F:;	; [ ] ;---------ANA;---------GEN; 1add rbp,8mov [rbp],raxmov rax,1; 'id; OPTAV +!add [w28C],raxmov rax,[rbp]sub rbp,8; in?add rbp,8mov [rbp],raxmov rax,qword[w295]; 0?or rax,raxjnz _o22; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o22:; DROPmov rax,[rbp]sub rbp,8; btn?add rbp,8mov [rbp],raxmov rax,qword[w296]; 0?or rax,raxjnz _o23; (; idadd rbp,8mov [rbp],raxmov rax,qword[w28C]; hotnow; OPTV =?cmp rax,qword[w289]jne _o24; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o24:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o23:; 2DROPmov rax,[rbp-8]sub rbp,8*2; idadd rbp,8mov [rbp],raxmov rax,qword[w28C]; 'hot; OPTAV !mov qword[w288],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :onDnMove  |1002092|e  ;  .  | calls:2 niv:1 len:32 ( ab --  )w29B:;---------OPT; ABC8FB:1	; [ 1 0 ] ; ABC8FF:'id	; [ 1 0 0 ] ; ABC903:+!	; [ 1 0 0 28C ] ; ABC907:btn?	; [ 1 0 ] ; ABC90B:0?	; [ 1 0 296 ] ; ABC90F:(	; [ 1 0 296 ] ; ABC913:3DROP	; [ 1 0 296 ] ; ABC917:;	; [ ] ; ABC91B:)	; [ ] ; ABC91F:DROP	; [ 1 0 296 ] ; ABC923:in?	; [ 1 0 ] ; ABC927:0?	; [ 1 0 295 ] ; ABC92B:(	; [ 1 0 295 ] ; ABC92F:3DROP	; [ 1 0 295 ] ; ABC933:;	; [ ] ; ABC937:)	; [ ] ; ABC93B:DROP	; [ 1 0 295 ] ; ABC93F:id	; [ 1 0 ] ; ABC943:DUP	; [ 1 0 28C ] ; ABC947:'hot	; [ 1 0 28C 28C ] ; ABC94B:!	; [ 1 0 28C 28C 288 ] ; ABC94F:hotnow	; [ 1 0 28C ] ; ABC953:<>?	; [ 1 0 28C 289 ] ; ABC957:(	; [ 1 0 28C ] ; ABC95B:2DROP	; [ 1 0 28C ] ; ABC95F:EX	; [ 1 ] ; ABC963:;	; [ 1 ] ; ABC967:)	; [ 1 ] ; ABC96B:DROP	; [ 1 0 28C ] ; ABC96F:NIP	; [ 1 0 ] ; ABC973:EX	; [ 0 ] ; ABC977:;	; [ 0 ] ;---------ANA;---------GEN; 1add rbp,8mov [rbp],raxmov rax,1; 'id; OPTAV +!add [w28C],raxmov rax,[rbp]sub rbp,8; btn?add rbp,8mov [rbp],raxmov rax,qword[w296]; 0?or rax,raxjnz _o25; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o25:; DROPmov rax,[rbp]sub rbp,8; in?add rbp,8mov [rbp],raxmov rax,qword[w295]; 0?or rax,raxjnz _o26; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o26:; DROPmov rax,[rbp]sub rbp,8; idadd rbp,8mov [rbp],raxmov rax,qword[w28C]; DUPadd rbp,8mov [rbp],rax; 'hot; OPTAV !mov qword[w288],raxmov rax,[rbp]sub rbp,8; hotnow; OPTV <>?cmp rax,qword[w289]je _o27; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o27:; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :guiMap  |1004092|e  ;  .  | calls:4 niv:1 len:43 ( abc --  )w29D:;---------OPT; ABCA53:1	; [ 2 1 0 ] ; ABCA57:'id	; [ 2 1 0 0 ] ; ABCA5B:+!	; [ 2 1 0 0 28C ] ; ABCA5F:in?	; [ 2 1 0 ] ; ABCA63:0?	; [ 2 1 0 295 ] ; ABCA67:(	; [ 2 1 0 295 ] ; ABCA6B:4DROP	; [ 2 1 0 295 ] ; ABCA6F:;	; [ ] ; ABCA73:)	; [ ] ; ABCA77:DROP	; [ 2 1 0 295 ] ; ABCA7B:btn?	; [ 2 1 0 ] ; ABCA7F:0?	; [ 2 1 0 296 ] ; ABCA83:(	; [ 2 1 0 296 ] ; ABCA87:id	; [ 2 1 0 296 ] ; ABCA8B:hotnow	; [ 2 1 0 296 28C ] ; ABCA8F:=?	; [ 2 1 0 296 28C 289 ] ; ABCA93:(	; [ 2 1 0 296 28C ] ; ABCA97:2DROP	; [ 2 1 0 296 28C ] ; ABCA9B:NIP	; [ 2 1 0 ] ; ABCA9F:NIP	; [ 2 0 ] ; ABCAA3:EX	; [ 0 ] ; ABCAA7:;	; [ 0 ] ; ABCAAB:)	; [ 0 ] ; ABCAAF:4DROP	; [ 2 1 0 296 28C ] ; ABCAB3:DROP	; [ 2 ] ; ABCAB7:;	; [ ] ; ABCABB:)	; [ ] ; ABCABF:DROP	; [ 2 1 0 296 ] ; ABCAC3:id	; [ 2 1 0 ] ; ABCAC7:DUP	; [ 2 1 0 28C ] ; ABCACB:'hot	; [ 2 1 0 28C 28C ] ; ABCACF:!	; [ 2 1 0 28C 28C 288 ] ; ABCAD3:hotnow	; [ 2 1 0 28C ] ; ABCAD7:<>?	; [ 2 1 0 28C 289 ] ; ABCADB:(	; [ 2 1 0 28C ] ; ABCADF:3DROP	; [ 2 1 0 28C ] ; ABCAE3:EX	; [ 2 ] ; ABCAE7:;	; [ 2 ] ; ABCAEB:)	; [ 2 ] ; ABCAEF:2DROP	; [ 2 1 0 28C ] ; ABCAF3:NIP	; [ 2 1 ] ; ABCAF7:EX	; [ 1 ] ; ABCAFB:;	; [ 1 ] ;---------ANA;---------GEN; 1add rbp,8mov [rbp],raxmov rax,1; 'id; OPTAV +!add [w28C],raxmov rax,[rbp]sub rbp,8; in?add rbp,8mov [rbp],raxmov rax,qword[w295]; 0?or rax,raxjnz _o28; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o28:; DROPmov rax,[rbp]sub rbp,8; btn?add rbp,8mov [rbp],raxmov rax,qword[w296]; 0?or rax,raxjnz _o29; (; idadd rbp,8mov [rbp],raxmov rax,qword[w28C]; hotnow; OPTV =?cmp rax,qword[w289]jne _o2A; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; NIPsub rbp,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o2A:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o29:; DROPmov rax,[rbp]sub rbp,8; idadd rbp,8mov [rbp],raxmov rax,qword[w28C]; DUPadd rbp,8mov [rbp],rax; 'hot; OPTAV !mov qword[w288],raxmov rax,[rbp]sub rbp,8; hotnow; OPTV <>?cmp rax,qword[w289]je _o2B; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o2B:; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :guiI  |1002092|e  ;  .  | calls:2 niv:1 len:9 ( a --  )w2A0:;---------OPT; ABCBCB:in?	; [ 0 ] ; ABCBCF:0?	; [ 0 295 ] ; ABCBD3:(	; [ 0 295 ] ; ABCBD7:2DROP	; [ 0 295 ] ; ABCBDB:;	; [ ] ; ABCBDF:)	; [ ] ; ABCBE3:DROP	; [ 0 295 ] ; ABCBE7:EX	; [ 0 ] ; ABCBEB:;	; [ 0 ] ;---------ANA;---------GEN; in?add rbp,8mov [rbp],raxmov rax,qword[w295]; 0?or rax,raxjnz _o2C; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o2C:; DROPmov rax,[rbp]sub rbp,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :ihline  |1004090|l  ;  .  | calls:4 niv:1 len:34 ( abc -- de )w2C2:;---------OPT; ABD07F:PICK2	; [ 2 1 0 ] ; ABD083:-	; [ 2 1 0 2 ] ; ABD087:0?	; [ 2 1 0 ] ; ABD08B:(	; [ 2 1 0 ] ; ABD08F:DROP	; [ 2 1 0 ] ; ABD093:vecs	; [ 2 1 ] ; ABD097:EX	; [ 2 1 2B9 ] ; ABD09B:;	; [ 2 1 2B9 ] ; ABD09F:)	; [ 2 1 2B9 ] ; ABD0A3:-?	; [ 2 1 0 ] ; ABD0A7:(	; [ 2 1 0 ] ; ABD0AB:ROT	; [ 2 1 0 ] ; ABD0AF:OVER	; [ 1 0 2 ] ; ABD0B3:+	; [ 1 0 2 0 ] ; ABD0B7:ROT	; [ 1 0 2 ] ; ABD0BB:ROT	; [ 0 2 1 ] ; ABD0BF:NEG	; [ 2 1 0 ] ; ABD0C3:)	; [ 2 1 0 ] ; ABD0C7:(	; [ 2 1 0 ] ; ABD0CB:1?	; [ 2 1 0 ] ; ABD0CF:1	; [ 2 1 0 ] ; ABD0D3:-	; [ 2 1 0 0 ] ; ABD0D7:>R	; [ 2 1 0 ] ; ABD0DB:2DUP	; [ 2 1 ] ; ABD0DF:vecs	; [ 2 1 2 1 ] ; ABD0E3:EX	; [ 2 1 2 1 2B9 ] ; ABD0E7:SWAP	; [ 2 1 2 1 2B9 ] ; ABD0EB:1	; [ 2 1 2 2B9 1 ] ; ABD0EF:+	; [ 2 1 2 2B9 1 1 ] ; ABD0F3:SWAP	; [ 2 1 2 2B9 1 ] ; ABD0F7:R>	; [ 2 1 2 1 2B9 ] ; ABD0FB:)	; [ 2 1 2 1 2B9 2B9 ] ; ABD0FF:3DROP	; [ 2 1 0 ] ; ABD103:;	; [ ] ;---------ANA;---------GEN; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o2D; (; DROPmov rax,[rbp]sub rbp,8; vecs; OPTV EXmov rcx,qword[w2B9]jmp rcx; ;; )_o2D:; -?or rax,raxjns _o2E; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; NEGneg rax; )_o2E:; (_i2F:; 1?or rax,raxjz _o2F;; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; R>add rbp,8mov [rbp],raxpop rax; )jmp _i2F_o2F:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :ivline  |1002080|l     .  | calls:2 niv:1 len:17 ( abc --  )w2C3:;---------OPT; ABD107:OVER	; [ 2 1 0 ] ; ABD10B:>?	; [ 2 1 0 1 ] ; ABD10F:(	; [ 2 1 0 ] ; ABD113:SWAP	; [ 2 1 0 ] ; ABD117:)	; [ 2 0 1 ] ; ABD11B:(	; [ 2 1 0 ] ; ABD11F:OVER	; [ 2 1 0 ] ; ABD123:<=?	; [ 2 1 0 1 ] ; ABD127:PICK2	; [ 2 1 0 ] ; ABD12B:OVER	; [ 2 1 0 2 ] ; ABD12F:vecs	; [ 2 1 0 2 0 ] ; ABD133:EX	; [ 2 1 0 2 0 2B9 ] ; ABD137:1	; [ 2 1 0 2 0 2B9 ] ; ABD13B:+	; [ 2 1 0 2 0 2B9 0 ] ; ABD13F:)	; [ 2 1 0 2 0 2B9 ] ; ABD143:3DROP	; [ 2 1 0 ] ; ABD147:;	; [ ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o30; (; SWAPxchg rax,[rbp]; )_o30:; (_i31:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjg _o31; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; 1; OPTN +add rax,1; )jmp _i31_o31:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :rline  |2001090|l  ;  .  | calls:1 niv:2 len:59 ( ab -- cd )w2C4:;---------OPT; ABD14B:ya	; [ 1 0 ] ; ABD14F:=?	; [ 1 0 2C1 ] ; ABD153:(	; [ 1 0 ] ; ABD157:xa	; [ 1 0 ] ; ABD15B:ihline	; [ 1 0 2C0 ] ; ABD15F:;	; [ 1 0 ] ; ABD163:)	; [ 1 0 ] ; ABD167:xa	; [ 1 0 ] ; ABD16B:ya	; [ 1 0 2C0 ] ; ABD16F:PICK2	; [ 1 0 2C0 2C1 ] ; ABD173:<?	; [ 1 0 2C0 2C1 0 ] ; ABD177:(	; [ 1 0 2C0 2C1 ] ; ABD17B:2SWAP	; [ 1 0 2C0 2C1 ] ; ABD17F:)	; [ 2C0 2C1 1 0 ] ; ABD183:PICK2	; [ 1 0 2C0 2C1 ] ; ABD187:-	; [ 1 0 2C0 2C1 0 ] ; ABD18B:1	; [ 1 0 2C0 2C1 ] ; ABD18F:+	; [ 1 0 2C0 2C1 0 ] ; ABD193:>R	; [ 1 0 2C0 2C1 ] ; ABD197:PICK2	; [ 1 0 2C0 ] ; ABD19B:-	; [ 1 0 2C0 1 ] ; ABD19F:R@	; [ 1 0 2C0 ] ; ABD1A3:16	; [ 1 0 2C0 2C0 ] ; ABD1A7:<</	; [ 1 0 2C0 2C0 1 ] ; ABD1AB:ROT	; [ 1 0 2C0 ] ; ABD1AF:16	; [ 0 2C0 1 ] ; ABD1B3:<<	; [ 0 2C0 1 2 ] ; ABD1B7:$8000	; [ 0 2C0 1 ] ; ABD1BB:+	; [ 0 2C0 1 3 ] ; ABD1BF:ROT	; [ 0 2C0 1 ] ; ABD1C3:ROT	; [ 2C0 1 0 ] ; ABD1C7:R>	; [ 1 0 2C0 ] ; ABD1CB:(	; [ 1 0 2C0 2C0 ] ; ABD1CF:1?	; [ 1 0 2C0 2C0 ] ; ABD1D3:1	; [ 1 0 2C0 2C0 ] ; ABD1D7:-	; [ 1 0 2C0 2C0 4 ] ; ABD1DB:>R	; [ 1 0 2C0 2C0 ] ; ABD1DF:>R	; [ 1 0 2C0 ] ; ABD1E3:OVER	; [ 1 0 ] ; ABD1E7:16	; [ 1 0 1 ] ; ABD1EB:>>	; [ 1 0 1 5 ] ; ABD1EF:OVER	; [ 1 0 1 ] ; ABD1F3:PICK3	; [ 1 0 1 0 ] ; ABD1F7:R@	; [ 1 0 1 0 1 ] ; ABD1FB:+	; [ 1 0 1 0 1 1 ] ; ABD1FF:16	; [ 1 0 1 0 1 ] ; ABD203:>>	; [ 1 0 1 0 1 6 ] ; ABD207:ihline	; [ 1 0 1 0 1 ] ; ABD20B:1	; [ 1 0 1 0 ] ; ABD20F:+	; [ 1 0 1 0 7 ] ; ABD213:SWAP	; [ 1 0 1 0 ] ; ABD217:R@	; [ 1 0 0 1 ] ; ABD21B:+	; [ 1 0 0 1 1 ] ; ABD21F:SWAP	; [ 1 0 0 1 ] ; ABD223:R>	; [ 1 0 1 0 ] ; ABD227:R>	; [ 1 0 1 0 0 ] ; ABD22B:)	; [ 1 0 1 0 0 0 ] ; ABD22F:4DROP	; [ 1 0 2C0 2C0 ] ; ABD233:;	; [ ] ;---------ANA;---------GEN; ya; OPTV =?cmp rax,qword[w2C1]jne _o32; (; xaadd rbp,8mov [rbp],raxmov rax,qword[w2C0]; ihlinejmp w2C2; ;; )_o32:; xaadd rbp,8mov [rbp],raxmov rax,qword[w2C0]; yaadd rbp,8mov [rbp],raxmov rax,qword[w2C1]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o33; (; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; )_o33:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; 16; OPTN <</mov rbx,raxmov rax,[rbp]sub rbp,8cqoshld rdx,rax,16shl rax,16idiv rbx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 16; OPTN <<shl rax,16; $8000; OPTN +add rax,32768; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; R>add rbp,8mov [rbp],raxpop rax; (_i34:; 1?or rax,raxjz _o34;; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 16; OPTN >>sar rax,16; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; R@add rbp,8mov [rbp],raxmov rax,[rsp]; +add rax,[rbp]sub rbp,8; 16; OPTN >>sar rax,16; ihlinecall w2C2; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; R@add rbp,8mov [rbp],raxmov rax,[rsp]; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; )jmp _i34_o34:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret;--------------------------; :spanabove  |1001090|l  ;  .  | calls:1 niv:1 len:56 ( ab -- cd )w2CC:;---------OPT; ABD267:sa	; [ 1 0 ] ; ABD26B:0?	; [ 1 0 2C9 ] ; ABD26F:(	; [ 1 0 2C9 ] ; ABD273:DROP	; [ 1 0 2C9 ] ; ABD277:2DUP	; [ 1 0 ] ; ABD27B:SWAP	; [ 1 0 1 0 ] ; ABD27F:1	; [ 1 0 0 1 ] ; ABD283:-	; [ 1 0 0 1 0 ] ; ABD287:-?	; [ 1 0 0 1 ] ; ABD28B:(	; [ 1 0 0 1 ] ; ABD28F:2DROP	; [ 1 0 0 1 ] ; ABD293:;	; [ 1 0 ] ; ABD297:)	; [ 1 0 ] ; ABD29B:vecg	; [ 1 0 0 1 ] ; ABD29F:EX	; [ 1 0 0 1 2BA ] ; ABD2A3:cf	; [ 1 0 0 1 2BA ] ; ABD2A7:<>?	; [ 1 0 0 1 2BA 2C7 ] ; ABD2AB:(	; [ 1 0 0 1 2BA ] ; ABD2AF:DROP	; [ 1 0 0 1 2BA ] ; ABD2B3:;	; [ 1 0 0 1 ] ; ABD2B7:)	; [ 1 0 0 1 ] ; ABD2BB:DROP	; [ 1 0 0 1 2BA ] ; ABD2BF:ROT	; [ 1 0 0 1 ] ; ABD2C3:>A	; [ 1 0 1 0 ] ; ABD2C7:2DUP	; [ 1 0 1 ] ; ABD2CB:SWAP	; [ 1 0 1 0 1 ] ; ABD2CF:1	; [ 1 0 1 1 0 ] ; ABD2D3:-	; [ 1 0 1 1 0 1 ] ; ABD2D7:A!+	; [ 1 0 1 1 0 ] ; ABD2DB:A!+	; [ 1 0 1 1 ] ; ABD2DF:A>	; [ 1 0 1 ] ; ABD2E3:ROT	; [ 1 0 1 1 ] ; ABD2E7:ROT	; [ 1 1 1 0 ] ; ABD2EB:1	; [ 1 1 0 1 ] ; ABD2EF:'sa	; [ 1 1 0 1 2 ] ; ABD2F3:!	; [ 1 1 0 1 2 2C9 ] ; ABD2F7:;	; [ 1 1 0 1 ] ; ABD2FB:)	; [ 1 1 0 1 ] ; ABD2FF:DROP	; [ 1 0 2C9 ] ; ABD303:2DUP	; [ 1 0 ] ; ABD307:SWAP	; [ 1 0 1 0 ] ; ABD30B:1	; [ 1 0 0 1 ] ; ABD30F:-	; [ 1 0 0 1 3 ] ; ABD313:vecg	; [ 1 0 0 1 ] ; ABD317:EX	; [ 1 0 0 1 2BA ] ; ABD31B:cf	; [ 1 0 0 1 2BA ] ; ABD31F:=?	; [ 1 0 0 1 2BA 2C7 ] ; ABD323:(	; [ 1 0 0 1 2BA ] ; ABD327:DROP	; [ 1 0 0 1 2BA ] ; ABD32B:;	; [ 1 0 0 1 ] ; ABD32F:)	; [ 1 0 0 1 ] ; ABD333:DROP	; [ 1 0 0 1 2BA ] ; ABD337:0	; [ 1 0 0 1 ] ; ABD33B:'sa	; [ 1 0 0 1 4 ] ; ABD33F:!	; [ 1 0 0 1 4 2C9 ] ; ABD343:;	; [ 1 0 0 1 ] ;---------ANA;---------GEN; saadd rbp,8mov [rbp],raxmov rax,qword[w2C9]; 0?or rax,raxjnz _o35; (; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; -?or rax,raxjns _o36; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o36:; vecg; OPTV EXmov rcx,qword[w2BA]call rcx; cf; OPTV <>?cmp rax,qword[w2C7]je _o37; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o37:; DROPmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; >Amov r14,raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1add rbp,8mov [rbp],raxmov rax,1; 'sa; OPTAV !mov qword[w2C9],raxmov rax,[rbp]sub rbp,8; ;ret; )_o35:; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; vecg; OPTV EXmov rcx,qword[w2BA]call rcx; cf; OPTV =?cmp rax,qword[w2C7]jne _o38; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o38:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'sa; OPTAV !mov qword[w2C9],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :spanbelow  |1001090|l  ;  .  | calls:1 niv:1 len:57 ( ab -- cd )w2CD:;---------OPT; ABD347:sb	; [ 1 0 ] ; ABD34B:0?	; [ 1 0 2CA ] ; ABD34F:(	; [ 1 0 2CA ] ; ABD353:DROP	; [ 1 0 2CA ] ; ABD357:2DUP	; [ 1 0 ] ; ABD35B:SWAP	; [ 1 0 1 0 ] ; ABD35F:1	; [ 1 0 0 1 ] ; ABD363:+	; [ 1 0 0 1 0 ] ; ABD367:maxh	; [ 1 0 0 1 ] ; ABD36B:>=?	; [ 1 0 0 1 2BC ] ; ABD36F:(	; [ 1 0 0 1 ] ; ABD373:2DROP	; [ 1 0 0 1 ] ; ABD377:;	; [ 1 0 ] ; ABD37B:)	; [ 1 0 ] ; ABD37F:vecg	; [ 1 0 0 1 ] ; ABD383:EX	; [ 1 0 0 1 2BA ] ; ABD387:cf	; [ 1 0 0 1 2BA ] ; ABD38B:<>?	; [ 1 0 0 1 2BA 2C7 ] ; ABD38F:(	; [ 1 0 0 1 2BA ] ; ABD393:DROP	; [ 1 0 0 1 2BA ] ; ABD397:;	; [ 1 0 0 1 ] ; ABD39B:)	; [ 1 0 0 1 ] ; ABD39F:DROP	; [ 1 0 0 1 2BA ] ; ABD3A3:ROT	; [ 1 0 0 1 ] ; ABD3A7:>A	; [ 1 0 1 0 ] ; ABD3AB:2DUP	; [ 1 0 1 ] ; ABD3AF:SWAP	; [ 1 0 1 0 1 ] ; ABD3B3:1	; [ 1 0 1 1 0 ] ; ABD3B7:+	; [ 1 0 1 1 0 1 ] ; ABD3BB:A!+	; [ 1 0 1 1 0 ] ; ABD3BF:A!+	; [ 1 0 1 1 ] ; ABD3C3:A>	; [ 1 0 1 ] ; ABD3C7:ROT	; [ 1 0 1 1 ] ; ABD3CB:ROT	; [ 1 1 1 0 ] ; ABD3CF:1	; [ 1 1 0 1 ] ; ABD3D3:'sb	; [ 1 1 0 1 2 ] ; ABD3D7:!	; [ 1 1 0 1 2 2CA ] ; ABD3DB:;	; [ 1 1 0 1 ] ; ABD3DF:)	; [ 1 1 0 1 ] ; ABD3E3:DROP	; [ 1 0 2CA ] ; ABD3E7:2DUP	; [ 1 0 ] ; ABD3EB:SWAP	; [ 1 0 1 0 ] ; ABD3EF:1	; [ 1 0 0 1 ] ; ABD3F3:+	; [ 1 0 0 1 3 ] ; ABD3F7:vecg	; [ 1 0 0 1 ] ; ABD3FB:EX	; [ 1 0 0 1 2BA ] ; ABD3FF:cf	; [ 1 0 0 1 2BA ] ; ABD403:=?	; [ 1 0 0 1 2BA 2C7 ] ; ABD407:(	; [ 1 0 0 1 2BA ] ; ABD40B:DROP	; [ 1 0 0 1 2BA ] ; ABD40F:;	; [ 1 0 0 1 ] ; ABD413:)	; [ 1 0 0 1 ] ; ABD417:DROP	; [ 1 0 0 1 2BA ] ; ABD41B:0	; [ 1 0 0 1 ] ; ABD41F:'sb	; [ 1 0 0 1 4 ] ; ABD423:!	; [ 1 0 0 1 4 2CA ] ; ABD427:;	; [ 1 0 0 1 ] ;---------ANA;---------GEN; sbadd rbp,8mov [rbp],raxmov rax,qword[w2CA]; 0?or rax,raxjnz _o39; (; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; maxh; OPTV >=?cmp rax,qword[w2BC]jl _o3A; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o3A:; vecg; OPTV EXmov rcx,qword[w2BA]call rcx; cf; OPTV <>?cmp rax,qword[w2C7]je _o3B; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o3B:; DROPmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; >Amov r14,raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1add rbp,8mov [rbp],raxmov rax,1; 'sb; OPTAV !mov qword[w2CA],raxmov rax,[rbp]sub rbp,8; ;ret; )_o39:; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; vecg; OPTV EXmov rcx,qword[w2BA]call rcx; cf; OPTV =?cmp rax,qword[w2C7]jne _o3C; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o3C:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'sb; OPTAV !mov qword[w2CA],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :fillline  |2001090|l  ;  .  | calls:1 niv:2 len:31 ( ab -- c )w2CE:;---------OPT; ABD42B:0	; [ 1 0 ] ; ABD42F:'sa	; [ 1 0 0 ] ; ABD433:!	; [ 1 0 0 2C9 ] ; ABD437:0	; [ 1 0 ] ; ABD43B:'sb	; [ 1 0 1 ] ; ABD43F:!	; [ 1 0 1 2CA ] ; ABD443:(	; [ 1 0 ] ; ABD447:maxw	; [ 1 0 ] ; ABD44B:<?	; [ 1 0 2BB ] ; ABD44F:2DUP	; [ 1 0 ] ; ABD453:SWAP	; [ 1 0 1 0 ] ; ABD457:vecg	; [ 1 0 0 1 ] ; ABD45B:EX	; [ 1 0 0 1 2BA ] ; ABD45F:cf	; [ 1 0 0 1 2BA ] ; ABD463:<>?	; [ 1 0 0 1 2BA 2C7 ] ; ABD467:(	; [ 1 0 0 1 2BA ] ; ABD46B:3DROP	; [ 1 0 0 1 2BA ] ; ABD46F:;	; [ 1 0 ] ; ABD473:)	; [ 1 0 ] ; ABD477:DROP	; [ 1 0 0 1 2BA ] ; ABD47B:DUP	; [ 1 0 0 1 ] ; ABD47F:PICK2	; [ 1 0 0 1 1 ] ; ABD483:vecs	; [ 1 0 0 1 1 0 ] ; ABD487:EX	; [ 1 0 0 1 1 0 2B9 ] ; ABD48B:spanabove	; [ 1 0 0 1 1 0 2B9 ] ; ABD48F:spanbelow	; [ 1 0 0 1 1 1 0 ] ; ABD493:1	; [ 1 0 0 1 1 1 0 ] ; ABD497:+	; [ 1 0 0 1 1 1 0 2 ] ; ABD49B:)	; [ 1 0 0 1 1 1 0 ] ; ABD49F:2DROP	; [ 1 0 ] ; ABD4A3:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'sa; OPTAV !mov qword[w2C9],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'sb; OPTAV !mov qword[w2CA],raxmov rax,[rbp]sub rbp,8; (_i3D:; maxw; OPTV <?cmp rax,qword[w2BB]jge _o3D; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; vecg; OPTV EXmov rcx,qword[w2BA]call rcx; cf; OPTV <>?cmp rax,qword[w2C7]je _o3E; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o3E:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; spanabovecall w2CC; spanbelowcall w2CD; 1; OPTN +add rax,1; )jmp _i3D_o3D:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :firstx  |1001090|l  ;  .  | calls:1 niv:1 len:21 ( ab -- cde )w2CF:;---------OPT; ABD4A7:(	; [ 1 0 ] ; ABD4AB:+?	; [ 1 0 ] ; ABD4AF:2DUP	; [ 1 0 ] ; ABD4B3:SWAP	; [ 1 0 1 0 ] ; ABD4B7:vecg	; [ 1 0 0 1 ] ; ABD4BB:EX	; [ 1 0 0 1 2BA ] ; ABD4BF:cf	; [ 1 0 0 1 2BA ] ; ABD4C3:<>?	; [ 1 0 0 1 2BA 2C7 ] ; ABD4C7:(	; [ 1 0 0 1 2BA ] ; ABD4CB:DROP	; [ 1 0 0 1 2BA ] ; ABD4CF:1	; [ 1 0 0 1 ] ; ABD4D3:+	; [ 1 0 0 1 0 ] ; ABD4D7:;	; [ 1 0 0 1 ] ; ABD4DB:)	; [ 1 0 0 1 ] ; ABD4DF:DROP	; [ 1 0 0 1 2BA ] ; ABD4E3:1	; [ 1 0 0 1 ] ; ABD4E7:-	; [ 1 0 0 1 1 ] ; ABD4EB:)	; [ 1 0 0 1 ] ; ABD4EF:1	; [ 1 0 ] ; ABD4F3:+	; [ 1 0 2 ] ; ABD4F7:;	; [ 1 0 ] ;---------ANA;---------GEN; (_i3F:; +?or rax,raxjs _o3F; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SWAPxchg rax,[rbp]; vecg; OPTV EXmov rcx,qword[w2BA]call rcx; cf; OPTV <>?cmp rax,qword[w2C7]je _o40; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret; )_o40:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i3F_o3F:; 1; OPTN +add rax,1; ;ret;--------------------------; :vfill  |3001092|e  ;  .  | calls:1 niv:3 len:33 ( ab --  )w2D0:;---------OPT; ABD4FB:2DUP	; [ 1 0 ] ; ABD4FF:vecg	; [ 1 0 1 0 ] ; ABD503:EX	; [ 1 0 1 0 2BA ] ; ABD507:PICK3	; [ 1 0 1 0 2BA ] ; ABD50B:=?	; [ 1 0 1 0 2BA 0 ] ; ABD50F:(	; [ 1 0 1 0 2BA ] ; ABD513:4DROP	; [ 1 0 1 0 2BA ] ; ABD517:;	; [ 1 ] ; ABD51B:)	; [ 1 ] ; ABD51F:'cf	; [ 1 0 1 0 2BA ] ; ABD523:!	; [ 1 0 1 0 2BA 2C7 ] ; ABD527:ROT	; [ 1 0 1 0 ] ; ABD52B:DROP	; [ 1 1 0 0 ] ; ABD52F:here	; [ 1 1 0 ] ; ABD533:DUP	; [ 1 1 0 C8 ] ; ABD537:'herel	; [ 1 1 0 C8 C8 ] ; ABD53B:!	; [ 1 1 0 C8 C8 2CB ] ; ABD53F:!+	; [ 1 1 0 C8 ] ; ABD543:!+	; [ 1 1 0 ] ; ABD547:(	; [ 1 1 ] ; ABD54B:herel	; [ 1 1 ] ; ABD54F:>?	; [ 1 1 2CB ] ; ABD553:8	; [ 1 1 ] ; ABD557:-	; [ 1 1 0 ] ; ABD55B:DUP	; [ 1 1 ] ; ABD55F:@+	; [ 1 1 1 ] ; ABD563:SWAP	; [ 1 1 1 1 ] ; ABD567:@	; [ 1 1 1 1 ] ; ABD56B:firstx	; [ 1 1 1 1 ] ; ABD56F:fillline	; [ 1 1 2 1 0 ] ; ABD573:)	; [ 1 1 2 0 ] ; ABD577:DROP	; [ 1 1 ] ; ABD57B:;	; [ 1 ] ;---------ANA;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; vecg; OPTV EXmov rcx,qword[w2BA]call rcx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o41; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o41:; 'cf; OPTAV !mov qword[w2C7],raxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; DUPadd rbp,8mov [rbp],rax; 'herel; OPTAV !mov qword[w2CB],raxmov rax,[rbp]sub rbp,8; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; (_i42:; herel; OPTV >?cmp rax,qword[w2CB]jle _o42; 8; OPTN -sub rax,8; DUPadd rbp,8mov [rbp],rax; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @mov rax,qword[rax]; firstxcall w2CF; filllinecall w2CE; )jmp _i42_o42:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :vrect  |2001082|e     .  | calls:1 niv:2 len:18 ( abcd -- efgh )w2D1:;---------OPT; ABD57F:2OVER	; [ 3 2 1 0 ] ; ABD583:PICK3	; [ 3 2 1 0 3 2 ] ; ABD587:ihline	; [ 3 2 1 0 3 2 1 ] ; ABD58B:PICK3	; [ 3 2 1 0 1 0 ] ; ABD58F:OVER	; [ 3 2 1 0 1 0 1 ] ; ABD593:PICK3	; [ 3 2 1 0 1 0 1 0 ] ; ABD597:ihline	; [ 3 2 1 0 1 0 1 0 1 ] ; ABD59B:2OVER	; [ 3 2 1 0 1 0 1 0 ] ; ABD59F:1	; [ 3 2 1 0 1 0 1 0 1 0 ] ; ABD5A3:+	; [ 3 2 1 0 1 0 1 0 1 0 0 ] ; ABD5A7:PICK2	; [ 3 2 1 0 1 0 1 0 1 0 ] ; ABD5AB:1	; [ 3 2 1 0 1 0 1 0 1 0 0 ] ; ABD5AF:-	; [ 3 2 1 0 1 0 1 0 1 0 0 1 ] ; ABD5B3:ivline	; [ 3 2 1 0 1 0 1 0 1 0 0 ] ; ABD5B7:2SWAP	; [ 3 2 1 0 1 0 1 0 ] ; ABD5BB:NIP	; [ 3 2 1 0 1 0 1 0 ] ; ABD5BF:ivline	; [ 3 2 1 0 1 0 0 ] ; ABD5C3:;	; [ 3 2 1 0 ] ;---------ANA;---------GEN; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; ihlinecall w2C2; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; ihlinecall w2C2; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; 1; OPTN +add rax,1; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN -sub rax,1; ivlinecall w2C3; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; NIPsub rbp,8; ivlinejmp w2C3; ;;--------------------------; :iniellipse  |1080|l     .  | calls:1 niv:0 len:42 ( ab -- cdef )w2D6:;---------OPT; ABD5C7:OVER	; [ 1 0 ] ; ABD5CB:DUP	; [ 1 0 1 ] ; ABD5CF:*	; [ 1 0 1 1 ] ; ABD5D3:DUP	; [ 1 0 1 ] ; ABD5D7:1	; [ 1 0 1 1 ] ; ABD5DB:<<	; [ 1 0 1 1 0 ] ; ABD5DF:SWAP	; [ 1 0 1 1 ] ; ABD5E3:DUP	; [ 1 0 1 1 ] ; ABD5E7:>A	; [ 1 0 1 1 1 ] ; ABD5EB:'dy	; [ 1 0 1 1 ] ; ABD5EF:!	; [ 1 0 1 1 2D5 ] ; ABD5F3:ROT	; [ 1 0 1 ] ; ABD5F7:ROT	; [ 0 1 1 ] ; ABD5FB:OVER	; [ 1 1 0 ] ; ABD5FF:NEG	; [ 1 1 0 1 ] ; ABD603:1	; [ 1 1 0 1 ] ; ABD607:<<	; [ 1 1 0 1 1 ] ; ABD60B:1	; [ 1 1 0 1 ] ; ABD60F:+	; [ 1 1 0 1 2 ] ; ABD613:SWAP	; [ 1 1 0 1 ] ; ABD617:DUP	; [ 1 1 1 0 ] ; ABD61B:*	; [ 1 1 1 0 0 ] ; ABD61F:DUP	; [ 1 1 1 0 ] ; ABD623:1	; [ 1 1 1 0 0 ] ; ABD627:<<	; [ 1 1 1 0 0 3 ] ; ABD62B:ROT	; [ 1 1 1 0 0 ] ; ABD62F:ROT	; [ 1 1 0 0 1 ] ; ABD633:*	; [ 1 1 0 1 0 ] ; ABD637:DUP	; [ 1 1 0 1 ] ; ABD63B:A+	; [ 1 1 0 1 1 ] ; ABD63F:'dx	; [ 1 1 0 1 ] ; ABD643:!	; [ 1 1 0 1 2D4 ] ; ABD647:1	; [ 1 1 0 ] ; ABD64B:+	; [ 1 1 0 4 ] ; ABD64F:SWAP	; [ 1 1 0 ] ; ABD653:1	; [ 1 0 1 ] ; ABD657:PICK3	; [ 1 0 1 5 ] ; ABD65B:'dy	; [ 1 0 1 5 1 ] ; ABD65F:+!	; [ 1 0 1 5 1 2D5 ] ; ABD663:dy	; [ 1 0 1 5 ] ; ABD667:A+	; [ 1 0 1 5 2D5 ] ; ABD66B:;	; [ 1 0 1 5 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; *imul rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; >Amov r14,raxmov rax,[rbp]sub rbp,8; 'dy; OPTAV !mov qword[w2D5],raxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; NEGneg rax; 1; OPTN <<shl rax,1; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; *imul rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; *imul rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A+add r14,raxmov rax,[rbp]sub rbp,8; 'dx; OPTAV !mov qword[w2D4],raxmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; 1add rbp,8mov [rbp],raxmov rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 'dy; OPTAV +!add [w2D5],raxmov rax,[rbp]sub rbp,8; dy; OPTV A+add r14,qword[w2D5]; ;ret;--------------------------; :qfb  |2002480|l     . I| calls:2 niv:2 len:21 ( ab -- cdefghijkl )w2DA:;---------OPT; ABD7B3:xm	; [ 1 0 ] ; ABD7B7:PICK2	; [ 1 0 2D3 ] ; ABD7BB:-	; [ 1 0 2D3 1 ] ; ABD7BF:ym	; [ 1 0 2D3 ] ; ABD7C3:PICK2	; [ 1 0 2D3 2D2 ] ; ABD7C7:-	; [ 1 0 2D3 2D2 0 ] ; ABD7CB:xm	; [ 1 0 2D3 2D2 ] ; ABD7CF:PICK4	; [ 1 0 2D3 2D2 2D3 ] ; ABD7D3:+	; [ 1 0 2D3 2D2 2D3 1 ] ; ABD7D7:bor	; [ 1 0 2D3 2D2 2D3 ] ; ABD79B:OVER	; [ 1 0 2D3 2D2 2D3 ] ; ABD79F:vecs	; [ 1 0 2D3 2D2 2D3 2D2 ] ; ABD7A3:EX	; [ 1 0 2D3 2D2 2D3 2D2 2B9 ] ; ABD7A7:vecs	; [ 1 0 2D3 2D2 2D3 2D2 2B9 ] ; ABD7AB:EX	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD7DB:xm	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD7DF:PICK2	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 ] ; ABD7E3:-	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2B9 ] ; ABD7E7:ym	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 ] ; ABD7EB:PICK2	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 ] ; ABD7EF:+	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2B9 ] ; ABD7F3:xm	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 ] ; ABD7F7:PICK4	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 ] ; ABD7FB:+	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 2B9 ] ; ABD7FF:bor	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 ] ; ABD79B:OVER	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 ] ; ABD79F:vecs	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 2D2 ] ; ABD7A3:EX	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 2D2 2B9 ] ; ABD7A7:vecs	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 2D2 2B9 ] ; ABD7AB:EX	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD803:;	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2D3 2D2 2D3 2D2 2B9 2B9 ] ;---------ANA;---------GEN; xmadd rbp,8mov [rbp],raxmov rax,qword[w2D3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ymadd rbp,8mov [rbp],raxmov rax,qword[w2D2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; xmadd rbp,8mov [rbp],raxmov rax,qword[w2D3]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; xmadd rbp,8mov [rbp],raxmov rax,qword[w2D3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ymadd rbp,8mov [rbp],raxmov rax,qword[w2D2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; xmadd rbp,8mov [rbp],raxmov rax,qword[w2D3]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; vecs; OPTV EXmov rcx,qword[w2B9]jmp rcx; ;;--------------------------; :vellipseb  |3001482|e     . I| calls:1 niv:3 len:55 ( ab -- cd )w2DB:;---------OPT; ABD807:'ym	; [ 1 0 ] ; ABD80B:!	; [ 1 0 2D2 ] ; ABD80F:'xm	; [ 1 ] ; ABD813:!	; [ 1 2D3 ] ; ABD817:iniellipse	; [ ] ; ABD81B:xm	; [ 1 0 ] ; ABD81F:PICK2	; [ 1 0 2D3 ] ; ABD823:-	; [ 1 0 2D3 1 ] ; ABD827:ym	; [ 1 0 2D3 ] ; ABD82B:xm	; [ 1 0 2D3 2D2 ] ; ABD82F:PICK4	; [ 1 0 2D3 2D2 2D3 ] ; ABD833:+	; [ 1 0 2D3 2D2 2D3 1 ] ; ABD837:bor	; [ 1 0 2D3 2D2 2D3 ] ; ABD79B:OVER	; [ 1 0 2D3 2D2 2D3 ] ; ABD79F:vecs	; [ 1 0 2D3 2D2 2D3 2D2 ] ; ABD7A3:EX	; [ 1 0 2D3 2D2 2D3 2D2 2B9 ] ; ABD7A7:vecs	; [ 1 0 2D3 2D2 2D3 2D2 2B9 ] ; ABD7AB:EX	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD83B:(	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD83F:SWAP	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD843:0	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD847:>?	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 0 ] ; ABD84B:SWAP	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD84F:A>	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD853:1	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD857:<<	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 1 ] ; ABD85B:dx	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD85F:>=?	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 2D4 ] ; ABD863:(	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD867:ROT	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD86B:1	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD86F:-	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 2 ] ; ABD873:ROT	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD877:qfb	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD87B:ROT	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 2 1 0 ] ; ABD87F:PICK3	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 ] ; ABD883:'dx	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 3 ] ; ABD887:+!	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 3 2D4 ] ; ABD88B:dx	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 ] ; ABD88F:A+	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 2D4 ] ; ABD893:)	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 ] ; ABD897:dy	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD89B:<=?	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 2D5 ] ; ABD89F:(	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD8A3:ROT	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD8A7:ROT	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD8AB:qfb	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD8AF:1	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 2 1 0 ] ; ABD8B3:+	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 2 1 0 3 ] ; ABD8B7:ROT	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 2 1 0 ] ; ABD8BB:PICK4	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 ] ; ABD8BF:'dy	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 4 ] ; ABD8C3:+!	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 4 2D5 ] ; ABD8C7:dy	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 ] ; ABD8CB:A+	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 2D5 ] ; ABD8CF:)	; [ 1 0 2D3 2D2 2D3 2D2 2B9 9 8 7 6 5 4 3 1 0 2 ] ; ABD8D3:DROP	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 2B9 ] ; ABD8D7:)	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD8DB:4DROP	; [ 1 0 2D3 2D2 2D3 2D2 2B9 2B9 ] ; ABD8DF:;	; [ 1 0 2D3 2D2 ] ;---------ANA;---------GEN; 'ym; OPTAV !mov qword[w2D2],raxmov rax,[rbp]sub rbp,8; 'xm; OPTAV !mov qword[w2D3],raxmov rax,[rbp]sub rbp,8; iniellipsecall w2D6; xmadd rbp,8mov [rbp],raxmov rax,qword[w2D3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ymadd rbp,8mov [rbp],raxmov rax,qword[w2D2]; xmadd rbp,8mov [rbp],raxmov rax,qword[w2D3]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; vecs; OPTV EXmov rcx,qword[w2B9]call rcx; (_i43:; SWAPxchg rax,[rbp]; 0; OPTN >?cmp rax,0jle _o43; SWAPxchg rax,[rbp]; A>add rbp,8mov [rbp],raxmov rax,r14; 1; OPTN <<shl rax,1; dx; OPTV >=?cmp rax,qword[w2D4]jl _o44; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN -sub rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; qfbcall w2DA; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 'dx; OPTAV +!add [w2D4],raxmov rax,[rbp]sub rbp,8; dx; OPTV A+add r14,qword[w2D4]; )_o44:; dy; OPTV <=?cmp rax,qword[w2D5]jg _o45; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; qfbcall w2DA; 1; OPTN +add rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; 'dy; OPTAV +!add [w2D5],raxmov rax,[rbp]sub rbp,8; dy; OPTV A+add r14,qword[w2D5]; )_o45:; DROPmov rax,[rbp]sub rbp,8; )jmp _i43_o43:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret;--------------------------; :scr2img  |D080|l     .  | calls:13 niv:0 len:11 ( ab -- cd )w2EB:;---------OPT; ABD947:yi	; [ 1 0 ] ; ABD94B:-	; [ 1 0 2E9 ] ; ABD94F:zoom	; [ 1 0 ] ; ABD953:>>	; [ 1 0 2E7 ] ; ABD957:SWAP	; [ 1 0 ] ; ABD95B:xi	; [ 0 1 ] ; ABD95F:-	; [ 0 1 2E8 ] ; ABD963:zoom	; [ 0 1 ] ; ABD967:>>	; [ 0 1 2E7 ] ; ABD96B:SWAP	; [ 0 1 ] ; ABD96F:;	; [ 1 0 ] ;---------ANA;---------GEN; yi; OPTV -sub rax,qword[w2E9]; zoom; OPTV >>mov rcx,qword[w2E7]sar rax,cl; SWAPxchg rax,[rbp]; xi; OPTV -sub rax,qword[w2E8]; zoom; OPTV >>mov rcx,qword[w2E7]sar rax,cl; SWAPxchg rax,[rbp]; ;ret;--------------------------; :imagenset  |1002484|l'    . I| calls:2 niv:1 len:5 ( ab --  )w2ED:;---------OPT; ABD993:imagena	; [ 1 0 ] ; ABD973:imagenw	; [ 1 0 ] ; ABD977:*	; [ 1 0 2E1 ] ; ABD97B:+	; [ 1 0 ] ; ABD97F:2	; [ 1 ] ; ABD983:<<	; [ 1 0 ] ; ABD987:imagen	; [ 1 ] ; ABD98B:+	; [ 1 2E0 ] ; ABD997:color	; [ 1 ] ; ABD99B:SWAP	; [ 1 2E4 ] ; ABD99F:D!	; [ 2E4 1 ] ; ABD9A3:;	; [ ] ;---------ANA;---------GEN; imagenw; OPTV *imul rax,qword[w2E1]; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; imagen; OPTV +add rax,qword[w2E0]; coloradd rbp,8mov [rbp],raxmov rax,qword[w2E4]; SWAPxchg rax,[rbp]; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :imagenget  |1002484|l'    . I| calls:2 niv:1 len:3 ( ab -- c )w2EE:;---------OPT; ABD9A7:imagena	; [ 1 0 ] ; ABD973:imagenw	; [ 1 0 ] ; ABD977:*	; [ 1 0 2E1 ] ; ABD97B:+	; [ 1 0 ] ; ABD97F:2	; [ 1 ] ; ABD983:<<	; [ 1 0 ] ; ABD987:imagen	; [ 1 ] ; ABD98B:+	; [ 1 2E0 ] ; ABD9AB:D@	; [ 1 ] ; ABD9AF:;	; [ 1 ] ;---------ANA;---------GEN; imagenw; OPTV *imul rax,qword[w2E1]; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; imagen; OPTV +add rax,qword[w2E0]; D@movsxd rax,dword [rax]; ;ret;--------------------------; :buffercopy  |1006480|l     . I| calls:6 niv:1 len:14 (  --  )w2F8:;---------OPT; ABD9BF:textura	; [ ] ; ABD9C3:0	; [ 2E3 ] ; ABD9C7:'mpixel	; [ 2E3 0 ] ; ABD9CB:'mpitch	; [ 2E3 0 2F6 ] ; ABD9CF:SDL_LockTexture	; [ 2E3 0 2F6 2F7 ] ; ABB2E3:sys-SDL_LockTexture	; [ 2E3 0 2F6 2F7 ] ; ABB2E7:SYS4	; [ 2E3 0 2F6 2F7 1F4 ] ; ABB2EB:DROP	; [ 2E3 ] ; ABD9D3:mpixel	; [ ] ; ABD9D7:imagen	; [ 2F6 ] ; ABD9DB:imagenh	; [ 2F6 2E0 ] ; ABD9DF:imagenw	; [ 2F6 2E0 2E2 ] ; ABD9E3:*	; [ 2F6 2E0 2E2 2E1 ] ; ABD9E7:DMOVE	; [ 2F6 2E0 2E2 ] ; ABD9EB:textura	; [ ] ; ABD9EF:SDL_UnlockTexture	; [ 2E3 ] ; ABB2F3:sys-SDL_UnlockTexture	; [ 2E3 ] ; ABB2F7:SYS1	; [ 2E3 1F5 ] ; ABB2FB:DROP	; [ 2E3 ] ; ABD9F3:;	; [ ] ;---------ANA;---------GEN; texturaadd rbp,8mov [rbp],raxmov rax,qword[w2E3]; 0add rbp,8mov [rbp],raxxor rax,rax; 'mpixeladd rbp,8mov [rbp],raxmov rax,w2F6; 'mpitchadd rbp,8mov [rbp],raxmov rax,w2F7; sys-SDL_LockTextureadd rbp,8mov [rbp],raxmov rax,qword[w1F4]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; mpixeladd rbp,8mov [rbp],raxmov rax,qword[w2F6]; imagenadd rbp,8mov [rbp],raxmov rax,qword[w2E0]; imagenhadd rbp,8mov [rbp],raxmov rax,qword[w2E2]; imagenw; OPTV *imul rax,qword[w2E1]; DMOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; texturaadd rbp,8mov [rbp],raxmov rax,qword[w2E3]; sys-SDL_UnlockTextureadd rbp,8mov [rbp],raxmov rax,qword[w1F5]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :mododraw  |20024C4|l'   [. I| calls:2 niv:2 len:15 (  --  )w2F9:;---------OPT; ABD9F7:[	; [ ] ; ABD9FB:xypen	; [ ] ; ABD9B3:SDLx	; [ ] ; ABD9B7:SDLy	; [ 24B ] ; ABD9FF:scr2img	; [ 24B 24C ] ; ABDA03:vop	; [ 1 0 ] ; ABD237:'ya	; [ 1 0 ] ; ABD23B:!	; [ 1 0 2C1 ] ; ABD23F:'xa	; [ 1 ] ; ABD243:!	; [ 1 2C0 ] ; ABDA07:;	; [ ] ; ABDA0B:]	; [ ] ; ABDA0F:[	; [ 1 ] ; ABDA13:xypen	; [ 1 ] ; ABD9B3:SDLx	; [ 1 ] ; ABD9B7:SDLy	; [ 1 24B ] ; ABDA17:scr2img	; [ 1 24B 24C ] ; ABDA1B:vline	; [ 1 1 0 ] ; ABD24B:2DUP	; [ 1 1 0 ] ; ABD24F:rline	; [ 1 1 0 1 0 ] ; ABD253:'ya	; [ 1 1 0 1 0 ] ; ABD257:!	; [ 1 1 0 1 0 2C1 ] ; ABD25B:'xa	; [ 1 1 0 1 ] ; ABD25F:!	; [ 1 1 0 1 2C0 ] ; ABDA1F:buffercopy	; [ 1 1 0 ] ; ABDA23:;	; [ 1 1 0 ] ; ABDA27:]	; [ 1 1 0 ] ; ABDA2B:onDnMove	; [ 1 1 ] ; ABDA2F:;	; [ ] ;---------ANA;---------GEN; [jmp ja46anon46:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; 'ya; OPTAV !mov qword[w2C1],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2C0],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja46:add rbp,8mov [rbp],raxmov rax,anon46; [jmp ja47anon47:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; rlinecall w2C4; 'ya; OPTAV !mov qword[w2C1],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2C0],raxmov rax,[rbp]sub rbp,8; buffercopyjmp w2F8; ;; ]ja47:add rbp,8mov [rbp],raxmov rax,anon47; onDnMovejmp w29B; ;;--------------------------; :modofill  |20014C4|l'   [. I| calls:1 niv:2 len:10 (  --  )w2FA:;---------OPT; ABDA33:[	; [ ] ; ABDA37:color	; [ ] ; ABDA3B:xypen	; [ 2E4 ] ; ABD9B3:SDLx	; [ 2E4 ] ; ABD9B7:SDLy	; [ 2E4 24B ] ; ABDA3F:scr2img	; [ 2E4 24B 24C ] ; ABDA43:vfill	; [ 2E4 1 0 ] ; ABDA47:buffercopy	; [ 2E4 ] ; ABDA4B:;	; [ 2E4 ] ; ABDA4F:]	; [ 2E4 ] ; ABDA53:onClick	; [ 1 ] ; ABDA57:;	; [ ] ;---------ANA;---------GEN; [jmp ja48anon48:; coloradd rbp,8mov [rbp],raxmov rax,qword[w2E4]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; vfillcall w2D0; buffercopyjmp w2F8; ;; ]ja48:add rbp,8mov [rbp],raxmov rax,anon48; onClickjmp w299; ;;--------------------------; :modoline  |20014C4|l'   [. I| calls:1 niv:2 len:30 (  --  )w2FB:;---------OPT; ABDA5B:[	; [ ] ; ABDA5F:xypen	; [ ] ; ABD9B3:SDLx	; [ ] ; ABD9B7:SDLy	; [ 24B ] ; ABDA63:'ya	; [ 24B 24C ] ; ABDA67:!	; [ 24B 24C 2F0 ] ; ABDA6B:'xa	; [ 24B ] ; ABDA6F:!	; [ 24B 2EF ] ; ABDA73:;	; [ ] ; ABDA77:]	; [ ] ; ABDA7B:[	; [ 1 ] ; ABDA7F:color	; [ 1 ] ; ABDA83:SDLcolor	; [ 1 2E4 ] ; ABDA87:xa	; [ 1 ] ; ABDA8B:ya	; [ 1 2EF ] ; ABDA8F:xypen	; [ 1 2EF 2F0 ] ; ABD9B3:SDLx	; [ 1 2EF 2F0 ] ; ABD9B7:SDLy	; [ 1 2EF 2F0 24B ] ; ABDA93:SDLLine	; [ 1 2EF 2F0 24B 24C ] ; ABDA97:;	; [ 1 ] ; ABDA9B:]	; [ 1 ] ; ABDA9F:[	; [ 1 1 ] ; ABDAA3:xa	; [ 1 1 ] ; ABDAA7:ya	; [ 1 1 2EF ] ; ABDAAB:scr2img	; [ 1 1 2EF 2F0 ] ; ABDAAF:vop	; [ 1 1 1 0 ] ; ABD237:'ya	; [ 1 1 1 0 ] ; ABD23B:!	; [ 1 1 1 0 2C1 ] ; ABD23F:'xa	; [ 1 1 1 ] ; ABD243:!	; [ 1 1 1 2C0 ] ; ABDAB3:xypen	; [ 1 1 ] ; ABD9B3:SDLx	; [ 1 1 ] ; ABD9B7:SDLy	; [ 1 1 24B ] ; ABDAB7:scr2img	; [ 1 1 24B 24C ] ; ABDABB:vline	; [ 1 1 1 0 ] ; ABD24B:2DUP	; [ 1 1 1 0 ] ; ABD24F:rline	; [ 1 1 1 0 1 0 ] ; ABD253:'ya	; [ 1 1 1 0 1 0 ] ; ABD257:!	; [ 1 1 1 0 1 0 2C1 ] ; ABD25B:'xa	; [ 1 1 1 0 1 ] ; ABD25F:!	; [ 1 1 1 0 1 2C0 ] ; ABDABF:buffercopy	; [ 1 1 1 0 ] ; ABDAC3:;	; [ 1 1 1 0 ] ; ABDAC7:]	; [ 1 1 1 0 ] ; ABDACB:guiMap	; [ 1 1 1 ] ; ABDACF:;	; [ ] ;---------ANA;---------GEN; [jmp ja49anon49:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; 'ya; OPTAV !mov qword[w2F0],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2EF],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja49:add rbp,8mov [rbp],raxmov rax,anon49; [jmp ja4Aanon4A:; coloradd rbp,8mov [rbp],raxmov rax,qword[w2E4]; SDLcolorcall w255; xaadd rbp,8mov [rbp],raxmov rax,qword[w2EF]; yaadd rbp,8mov [rbp],raxmov rax,qword[w2F0]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; SDLLinejmp w257; ;; ]ja4A:add rbp,8mov [rbp],raxmov rax,anon4A; [jmp ja4Banon4B:; xaadd rbp,8mov [rbp],raxmov rax,qword[w2EF]; yaadd rbp,8mov [rbp],raxmov rax,qword[w2F0]; scr2imgcall w2EB; 'ya; OPTAV !mov qword[w2C1],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2C0],raxmov rax,[rbp]sub rbp,8; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; rlinecall w2C4; 'ya; OPTAV !mov qword[w2C1],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2C0],raxmov rax,[rbp]sub rbp,8; buffercopyjmp w2F8; ;; ]ja4B:add rbp,8mov [rbp],raxmov rax,anon4B; guiMapjmp w29D; ;;--------------------------; :modobox  |20014C4|l'   [. I| calls:1 niv:2 len:35 (  --  )w2FC:;---------OPT; ABDAD3:[	; [ ] ; ABDAD7:xypen	; [ ] ; ABD9B3:SDLx	; [ ] ; ABD9B7:SDLy	; [ 24B ] ; ABDADB:'ya	; [ 24B 24C ] ; ABDADF:!	; [ 24B 24C 2F0 ] ; ABDAE3:'xa	; [ 24B ] ; ABDAE7:!	; [ 24B 2EF ] ; ABDAEB:;	; [ ] ; ABDAEF:]	; [ ] ; ABDAF3:[	; [ 1 ] ; ABDAF7:color	; [ 1 ] ; ABDAFB:SDLcolor	; [ 1 2E4 ] ; ABDAFF:xa	; [ 1 ] ; ABDB03:ya	; [ 1 2EF ] ; ABDB07:xypen	; [ 1 2EF 2F0 ] ; ABD9B3:SDLx	; [ 1 2EF 2F0 ] ; ABD9B7:SDLy	; [ 1 2EF 2F0 24B ] ; ABDB0B:PICK2	; [ 1 2EF 2F0 24B 24C ] ; ABDB0F:-	; [ 1 2EF 2F0 24B 24C 2F0 ] ; ABDB13:SWAP	; [ 1 2EF 2F0 24B 24C ] ; ABDB17:PICK3	; [ 1 2EF 2F0 24C 24B ] ; ABDB1B:-	; [ 1 2EF 2F0 24C 24B 2EF ] ; ABDB1F:SWAP	; [ 1 2EF 2F0 24C 24B ] ; ABDB23:SDLRect	; [ 1 2EF 2F0 24B 24C ] ; ABDB27:;	; [ 1 ] ; ABDB2B:]	; [ 1 ] ; ABDB2F:[	; [ 1 1 ] ; ABDB33:xa	; [ 1 1 ] ; ABDB37:ya	; [ 1 1 2EF ] ; ABDB3B:scr2img	; [ 1 1 2EF 2F0 ] ; ABDB3F:xypen	; [ 1 1 1 0 ] ; ABD9B3:SDLx	; [ 1 1 1 0 ] ; ABD9B7:SDLy	; [ 1 1 1 0 24B ] ; ABDB43:scr2img	; [ 1 1 1 0 24B 24C ] ; ABDB47:vrect	; [ 1 1 1 0 1 0 ] ; ABDB4B:buffercopy	; [ 1 1 3 2 1 0 ] ; ABDB4F:;	; [ 1 1 3 2 1 0 ] ; ABDB53:]	; [ 1 1 3 2 1 0 ] ; ABDB57:guiMap	; [ 1 1 1 ] ; ABDB5B:;	; [ ] ;---------ANA;---------GEN; [jmp ja4Canon4C:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; 'ya; OPTAV !mov qword[w2F0],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2EF],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja4C:add rbp,8mov [rbp],raxmov rax,anon4C; [jmp ja4Danon4D:; coloradd rbp,8mov [rbp],raxmov rax,qword[w2E4]; SDLcolorcall w255; xaadd rbp,8mov [rbp],raxmov rax,qword[w2EF]; yaadd rbp,8mov [rbp],raxmov rax,qword[w2F0]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; SDLRectjmp w25C; ;; ]ja4D:add rbp,8mov [rbp],raxmov rax,anon4D; [jmp ja4Eanon4E:; xaadd rbp,8mov [rbp],raxmov rax,qword[w2EF]; yaadd rbp,8mov [rbp],raxmov rax,qword[w2F0]; scr2imgcall w2EB; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; vrectcall w2D1; buffercopyjmp w2F8; ;; ]ja4E:add rbp,8mov [rbp],raxmov rax,anon4E; guiMapjmp w29D; ;;--------------------------; :border2cenrad  |2080|l     .  | calls:2 niv:0 len:25 ( abcd -- efgh )w2FD:;---------OPT; ABDB5F:ROT	; [ 3 2 1 0 ] ; ABDB63:2DUP	; [ 3 1 0 2 ] ; ABDB67:+	; [ 3 1 0 2 0 2 ] ; ABDB6B:1	; [ 3 1 0 2 0 ] ; ABDB6F:>>	; [ 3 1 0 2 0 0 ] ; ABDB73:>R	; [ 3 1 0 2 0 ] ; ABDB77:-	; [ 3 1 0 2 ] ; ABDB7B:ABS	; [ 3 1 0 ] ; ABDB7F:1	; [ 3 1 0 ] ; ABDB83:>>	; [ 3 1 0 1 ] ; ABDB87:>R	; [ 3 1 0 ] ; ABDB8B:2DUP	; [ 3 1 ] ; ABDB8F:+	; [ 3 1 3 1 ] ; ABDB93:1	; [ 3 1 3 ] ; ABDB97:>>	; [ 3 1 3 2 ] ; ABDB9B:>R	; [ 3 1 3 ] ; ABDB9F:-	; [ 3 1 ] ; ABDBA3:ABS	; [ 3 ] ; ABDBA7:1	; [ 3 ] ; ABDBAB:>>	; [ 3 3 ] ; ABDBAF:R>	; [ 3 ] ; ABDBB3:R>	; [ 3 3 ] ; ABDBB7:SWAP	; [ 3 3 3 ] ; ABDBBB:R>	; [ 3 3 3 ] ; ABDBBF:;	; [ 3 3 3 3 ] ;---------ANA;---------GEN; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; -neg raxadd rax,[rbp]sub rbp,8; ABScqoadd rax,rdxxor rax,rdx; 1; OPTN >>sar rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; -neg raxadd rax,[rbp]sub rbp,8; ABScqoadd rax,rdxxor rax,rdx; 1; OPTN >>sar rax,1; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; R>add rbp,8mov [rbp],raxpop rax; ;ret;--------------------------; :modocircle  |20014C4|l'   [. I| calls:1 niv:2 len:31 (  --  )w2FE:;---------OPT; ABDBC3:[	; [ ] ; ABDBC7:xypen	; [ ] ; ABD9B3:SDLx	; [ ] ; ABD9B7:SDLy	; [ 24B ] ; ABDBCB:'ya	; [ 24B 24C ] ; ABDBCF:!	; [ 24B 24C 2F0 ] ; ABDBD3:'xa	; [ 24B ] ; ABDBD7:!	; [ 24B 2EF ] ; ABDBDB:;	; [ ] ; ABDBDF:]	; [ ] ; ABDBE3:[	; [ 1 ] ; ABDBE7:color	; [ 1 ] ; ABDBEB:SDLcolor	; [ 1 2E4 ] ; ABDBEF:xa	; [ 1 ] ; ABDBF3:ya	; [ 1 2EF ] ; ABDBF7:xypen	; [ 1 2EF 2F0 ] ; ABD9B3:SDLx	; [ 1 2EF 2F0 ] ; ABD9B7:SDLy	; [ 1 2EF 2F0 24B ] ; ABDBFB:border2cenrad	; [ 1 2EF 2F0 24B 24C ] ; ABDBFF:SDLEllipse	; [ 1 3 2 1 0 ] ; ABDC03:;	; [ 1 ] ; ABDC07:]	; [ 1 ] ; ABDC0B:[	; [ 1 1 ] ; ABDC0F:xa	; [ 1 1 ] ; ABDC13:ya	; [ 1 1 2EF ] ; ABDC17:scr2img	; [ 1 1 2EF 2F0 ] ; ABDC1B:xypen	; [ 1 1 1 0 ] ; ABD9B3:SDLx	; [ 1 1 1 0 ] ; ABD9B7:SDLy	; [ 1 1 1 0 24B ] ; ABDC1F:scr2img	; [ 1 1 1 0 24B 24C ] ; ABDC23:border2cenrad	; [ 1 1 1 0 1 0 ] ; ABDC27:vellipseb	; [ 1 1 3 2 1 0 ] ; ABDC2B:buffercopy	; [ 1 1 3 2 1 0 ] ; ABDC2F:;	; [ 1 1 3 2 1 0 ] ; ABDC33:]	; [ 1 1 3 2 1 0 ] ; ABDC37:guiMap	; [ 1 1 1 ] ; ABDC3B:;	; [ ] ;---------ANA;---------GEN; [jmp ja4Fanon4F:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; 'ya; OPTAV !mov qword[w2F0],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2EF],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja4F:add rbp,8mov [rbp],raxmov rax,anon4F; [jmp ja50anon50:; coloradd rbp,8mov [rbp],raxmov rax,qword[w2E4]; SDLcolorcall w255; xaadd rbp,8mov [rbp],raxmov rax,qword[w2EF]; yaadd rbp,8mov [rbp],raxmov rax,qword[w2F0]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; border2cenradcall w2FD; SDLEllipsejmp w26A; ;; ]ja50:add rbp,8mov [rbp],raxmov rax,anon50; [jmp ja51anon51:; xaadd rbp,8mov [rbp],raxmov rax,qword[w2EF]; yaadd rbp,8mov [rbp],raxmov rax,qword[w2F0]; scr2imgcall w2EB; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; border2cenradcall w2FD; vellipsebcall w2DB; buffercopyjmp w2F8; ;; ]ja51:add rbp,8mov [rbp],raxmov rax,anon51; guiMapjmp w29D; ;;--------------------------; :modopicker  |20014C4|l'   [. I| calls:1 niv:2 len:10 (  --  )w2FF:;---------OPT; ABDC3F:[	; [ ] ; ABDC43:xypen	; [ ] ; ABD9B3:SDLx	; [ ] ; ABD9B7:SDLy	; [ 24B ] ; ABDC47:scr2img	; [ 24B 24C ] ; ABDC4B:imagenget	; [ 1 0 ] ; ABDC4F:'color	; [ 0 ] ; ABDC53:!	; [ 0 2E4 ] ; ABDC57:;	; [ ] ; ABDC5B:]	; [ ] ; ABDC5F:onClick	; [ 1 ] ; ABDC63:;	; [ ] ;---------ANA;---------GEN; [jmp ja52anon52:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; imagengetcall w2EE; 'color; OPTAV !mov qword[w2E4],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja52:add rbp,8mov [rbp],raxmov rax,anon52; onClickjmp w299; ;;--------------------------; :modoeraser  |20014C4|l'   [. I| calls:1 niv:2 len:15 (  --  )w300:;---------OPT; ABDC67:[	; [ ] ; ABDC6B:xypen	; [ ] ; ABD9B3:SDLx	; [ ] ; ABD9B7:SDLy	; [ 24B ] ; ABDC6F:scr2img	; [ 24B 24C ] ; ABDC73:vop	; [ 1 0 ] ; ABD237:'ya	; [ 1 0 ] ; ABD23B:!	; [ 1 0 2C1 ] ; ABD23F:'xa	; [ 1 ] ; ABD243:!	; [ 1 2C0 ] ; ABDC77:;	; [ ] ; ABDC7B:]	; [ ] ; ABDC7F:[	; [ 1 ] ; ABDC83:xypen	; [ 1 ] ; ABD9B3:SDLx	; [ 1 ] ; ABD9B7:SDLy	; [ 1 24B ] ; ABDC87:scr2img	; [ 1 24B 24C ] ; ABDC8B:vline	; [ 1 1 0 ] ; ABD24B:2DUP	; [ 1 1 0 ] ; ABD24F:rline	; [ 1 1 0 1 0 ] ; ABD253:'ya	; [ 1 1 0 1 0 ] ; ABD257:!	; [ 1 1 0 1 0 2C1 ] ; ABD25B:'xa	; [ 1 1 0 1 ] ; ABD25F:!	; [ 1 1 0 1 2C0 ] ; ABDC8F:buffercopy	; [ 1 1 0 ] ; ABDC93:;	; [ 1 1 0 ] ; ABDC97:]	; [ 1 1 0 ] ; ABDC9B:onDnMove	; [ 1 1 ] ; ABDC9F:;	; [ ] ;---------ANA;---------GEN; [jmp ja53anon53:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; 'ya; OPTAV !mov qword[w2C1],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2C0],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja53:add rbp,8mov [rbp],raxmov rax,anon53; [jmp ja54anon54:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; rlinecall w2C4; 'ya; OPTAV !mov qword[w2C1],raxmov rax,[rbp]sub rbp,8; 'xa; OPTAV !mov qword[w2C0],raxmov rax,[rbp]sub rbp,8; buffercopyjmp w2F8; ;; ]ja54:add rbp,8mov [rbp],raxmov rax,anon54; onDnMovejmp w29B; ;;--------------------------; :modoselect  |20014C4|l'   [. I| calls:1 niv:2 len:32 (  --  )w301:;---------OPT; ABDCA3:[	; [ ] ; ABDCA7:xypen	; [ ] ; ABD9B3:SDLx	; [ ] ; ABD9B7:SDLy	; [ 24B ] ; ABDCAB:'ys1	; [ 24B 24C ] ; ABDCAF:!	; [ 24B 24C 2F2 ] ; ABDCB3:'xs1	; [ 24B ] ; ABDCB7:!	; [ 24B 2F1 ] ; ABDCBB:;	; [ ] ; ABDCBF:]	; [ ] ; ABDCC3:[	; [ 1 ] ; ABDCC7:xs1	; [ 1 ] ; ABDCCB:ys1	; [ 1 2F1 ] ; ABDCCF:xypen	; [ 1 2F1 2F2 ] ; ABD9B3:SDLx	; [ 1 2F1 2F2 ] ; ABD9B7:SDLy	; [ 1 2F1 2F2 24B ] ; ABDCD3:PICK2	; [ 1 2F1 2F2 24B 24C ] ; ABDCD7:-	; [ 1 2F1 2F2 24B 24C 2F2 ] ; ABDCDB:SWAP	; [ 1 2F1 2F2 24B 24C ] ; ABDCDF:PICK3	; [ 1 2F1 2F2 24C 24B ] ; ABDCE3:-	; [ 1 2F1 2F2 24C 24B 2F1 ] ; ABDCE7:SWAP	; [ 1 2F1 2F2 24C 24B ] ; ABDCEB:SDLRect	; [ 1 2F1 2F2 24B 24C ] ; ABDCEF:;	; [ 1 ] ; ABDCF3:]	; [ 1 ] ; ABDCF7:[	; [ 1 1 ] ; ABDCFB:xypen	; [ 1 1 ] ; ABD9B3:SDLx	; [ 1 1 ] ; ABD9B7:SDLy	; [ 1 1 24B ] ; ABDCFF:scr2img	; [ 1 1 24B 24C ] ; ABDD03:'ys2	; [ 1 1 1 0 ] ; ABDD07:!	; [ 1 1 1 0 2F4 ] ; ABDD0B:'xs2	; [ 1 1 1 ] ; ABDD0F:!	; [ 1 1 1 2F3 ] ; ABDD13:;	; [ 1 1 ] ; ABDD17:]	; [ 1 1 ] ; ABDD1B:guiMap	; [ 1 1 1 ] ; ABDD1F:;	; [ ] ;---------ANA;---------GEN; [jmp ja55anon55:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; 'ys1; OPTAV !mov qword[w2F2],raxmov rax,[rbp]sub rbp,8; 'xs1; OPTAV !mov qword[w2F1],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja55:add rbp,8mov [rbp],raxmov rax,anon55; [jmp ja56anon56:; xs1add rbp,8mov [rbp],raxmov rax,qword[w2F1]; ys1add rbp,8mov [rbp],raxmov rax,qword[w2F2]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; SDLRectjmp w25C; ;; ]ja56:add rbp,8mov [rbp],raxmov rax,anon56; [jmp ja57anon57:; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; scr2imgcall w2EB; 'ys2; OPTAV !mov qword[w2F4],raxmov rax,[rbp]sub rbp,8; 'xs2; OPTAV !mov qword[w2F3],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja57:add rbp,8mov [rbp],raxmov rax,anon57; guiMapjmp w29D; ;;--------------------------; :modo2xy  |2080|l     .  | calls:2 niv:0 len:15 ( a -- bc )w308:;---------OPT; ABDD6B:DUP	; [ 0 ] ; ABDD6F:$1	; [ 0 0 ] ; ABDD73:AND	; [ 0 0 0 ] ; ABDD77:30	; [ 0 0 ] ; ABDD7B:*	; [ 0 0 1 ] ; ABDD7F:xtool	; [ 0 0 ] ; INLINE CTE; ABDD83:+	; [ 0 0 2 ] ; ABDD87:SWAP	; [ 0 0 ] ; ABDD8B:1	; [ 0 0 ] ; ABDD8F:>>	; [ 0 0 3 ] ; ABDD93:30	; [ 0 0 ] ; ABDD97:*	; [ 0 0 4 ] ; ABDD9B:ytool	; [ 0 0 ] ; INLINE CTE; ABDD9F:+	; [ 0 0 5 ] ; ABDDA3:;	; [ 0 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; 30; OPTN *imul rax,30; 0; OPTN +add rax,0; SWAPxchg rax,[rbp]; 1; OPTN >>sar rax,1; 30; OPTN *imul rax,30; 24; OPTN +add rax,24; ;ret;--------------------------; :xytool  |2080|l     .  | calls:2 niv:0 len:14 (  -- a )w309:;---------OPT; ABDDA7:SDLx	; [ ] ; ABDDAB:xtool	; [ 24B ] ; INLINE CTE; ABDDAF:-	; [ 24B 0 ] ; ABDDB3:30	; [ 24B ] ; ABDDB7:/	; [ 24B 1 ] ; ABDDBB:SDLy	; [ 24B 1 ] ; ABDDBF:ytool	; [ 24B 1 24C ] ; INLINE CTE; ABDDC3:-	; [ 24B 1 24C 2 ] ; ABDDC7:30	; [ 24B 1 24C ] ; ABDDCB:/	; [ 24B 1 24C 3 ] ; ABDDCF:1	; [ 24B 1 24C 3 ] ; ABDDD3:<<	; [ 24B 1 24C 3 4 ] ; ABDDD7:+	; [ 24B 1 24C 3 ] ; ABDDDB:;	; [ 24B 1 24C ] ;---------ANA;---------GEN; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; 0; OPTN -sub rax,0; $88888889 ; calcadd rbp,8mov [rbp],raxmov rax,2290649225; $24 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,36; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; 24; OPTN -sub rax,24; $88888889 ; calcadd rbp,8mov [rbp],raxmov rax,2290649225; $24 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,36; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :intool  |2001084|l'    .  | calls:1 niv:2 len:8 (  --  )w30A:;---------OPT; ABDDDF:$ffffff	; [ ] ; ABDDE3:SDLcolor	; [ 0 ] ; ABDDE7:xytool	; [ ] ; ABDDEB:modo2xy	; [ 0 ] ; ABDDEF:30	; [ 1 0 ] ; ABDDF3:30	; [ 1 0 1 ] ; ABDDF7:SDLRect	; [ 1 0 1 2 ] ; ABDDFB:;	; [ ] ;---------ANA;---------GEN; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; SDLcolorcall w255; xytoolcall w309; modo2xycall w308; 30add rbp,8mov [rbp],raxmov rax,30; 30add rbp,8mov [rbp],raxmov rax,30; SDLRectjmp w25C; ;;--------------------------; :settool  |1001084|l'    .  | calls:1 niv:1 len:12 (  --  )w30B:;---------OPT; ABDDFF:xytool	; [ ] ; ABDE03:DUP	; [ 0 ] ; ABDE07:'modo	; [ 0 0 ] ; ABDE0B:!	; [ 0 0 302 ] ; ABDE0F:3	; [ 0 ] ; ABDE13:<<	; [ 0 0 ] ; ABDE17:'modos	; [ 0 ] ; ABDE1B:+	; [ 0 307 ] ; ABDE1F:@	; [ 0 ] ; ABDE23:'modoex	; [ 0 ] ; ABDE27:!	; [ 0 303 ] ; ABDE2B:;	; [ ] ;---------ANA;---------GEN; xytoolcall w309; DUPadd rbp,8mov [rbp],rax; 'modo; OPTAV !mov qword[w302],raxmov rax,[rbp]sub rbp,8; 3; OPTN <<shl rax,3; 'modos; OPTAV +add rax,w307; @mov rax,qword[rax]; 'modoex; OPTAV !mov qword[w303],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :toolbar  |2001080|l     .  | calls:1 niv:2 len:25 (  --  )w30C:;---------OPT; ABDE2F:xtool	; [ ] ; INLINE CTE; ABDE33:ytool	; [ 0 ] ; INLINE CTE; ABDE37:imgtoolbar	; [ 0 1 ] ; ABDE3B:SDLimage	; [ 0 1 306 ] ; ABDE3F:$ff00	; [ ] ; ABDE43:SDLcolor	; [ 2 ] ; ABDE47:modo	; [ ] ; ABDE4B:modo2xy	; [ 302 ] ; ABDE4F:30	; [ 1 0 ] ; ABDE53:30	; [ 1 0 3 ] ; ABDE57:SDLRect	; [ 1 0 3 4 ] ; ABDE5B:xtool	; [ ] ; INLINE CTE; ABDE5F:ytool	; [ 5 ] ; INLINE CTE; ABDE63:60	; [ 5 6 ] ; ABDE67:180	; [ 5 6 7 ] ; ABDE6B:guiBox	; [ 5 6 7 8 ] ; ABDE6F:SDLb	; [ ] ; ABDE73:SDLx	; [ 24D ] ; ABDE77:SDLy	; [ 24D 24B ] ; ABDE7B:guiIn	; [ 24D 24B 24C ] ; ABDE7F:'intool	; [ ] ; ABDE83:guiI	; [ 30A ] ; ABDE87:'settool	; [ ] ; ABDE8B:onClick	; [ 30B ] ; ABDE8F:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 24add rbp,8mov [rbp],raxmov rax,24; imgtoolbaradd rbp,8mov [rbp],raxmov rax,qword[w306]; SDLimagecall w25E; $ff00add rbp,8mov [rbp],raxmov rax,65280; SDLcolorcall w255; modoadd rbp,8mov [rbp],raxmov rax,qword[w302]; modo2xycall w308; 30add rbp,8mov [rbp],raxmov rax,30; 30add rbp,8mov [rbp],raxmov rax,30; SDLRectcall w25C; 0add rbp,8mov [rbp],raxxor rax,rax; 24add rbp,8mov [rbp],raxmov rax,24; 60add rbp,8mov [rbp],raxmov rax,60; 180add rbp,8mov [rbp],raxmov rax,180; guiBoxcall w293; SDLbadd rbp,8mov [rbp],raxmov rax,qword[w24D]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; guiIncall w297; 'intooladd rbp,8mov [rbp],raxmov rax,w30A; guiIcall w2A0; 'settooladd rbp,8mov [rbp],raxmov rax,w30B; onClickjmp w299; ;;--------------------------; :imagen.draw  |2001080|l     .  | calls:1 niv:2 len:11 (  --  )w30D:;---------OPT; ABDE93:xi	; [ ] ; ABDE97:yi	; [ 2E8 ] ; ABDE9B:imagenw	; [ 2E8 2E9 ] ; ABDE9F:zoom	; [ 2E8 2E9 2E1 ] ; ABDEA3:<<	; [ 2E8 2E9 2E1 2E7 ] ; ABDEA7:imagenh	; [ 2E8 2E9 2E1 ] ; ABDEAB:zoom	; [ 2E8 2E9 2E1 2E2 ] ; ABDEAF:<<	; [ 2E8 2E9 2E1 2E2 2E7 ] ; ABDEB3:textura	; [ 2E8 2E9 2E1 2E2 ] ; ABDEB7:SDLimages	; [ 2E8 2E9 2E1 2E2 2E3 ] ; ABDEBB:;	; [ ] ;---------ANA;---------GEN; xiadd rbp,8mov [rbp],raxmov rax,qword[w2E8]; yiadd rbp,8mov [rbp],raxmov rax,qword[w2E9]; imagenwadd rbp,8mov [rbp],raxmov rax,qword[w2E1]; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; imagenhadd rbp,8mov [rbp],raxmov rax,qword[w2E2]; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; texturaadd rbp,8mov [rbp],raxmov rax,qword[w2E3]; SDLimagesjmp w25D; ;;--------------------------; :teclado  |1001480|l     . I| calls:1 niv:1 len:51 (  --  )w30E:;---------OPT; ABDEBF:SDLkey	; [ ] ; ABDEC3:>esc<	; [ 249 ] ; INLINE CTE; ABDEC7:=?	; [ 249 0 ] ; ABDECB:(	; [ 249 ] ; ABDECF:exit	; [ 249 ] ; ABB7D3:1	; [ 249 ] ; ABB7D7:'.exit	; [ 249 1 ] ; ABB7DB:!	; [ 249 1 251 ] ; ABDED3:)	; [ 249 ] ; ABDED7:<up>	; [ 249 ] ; INLINE CTE; ABDEDB:=?	; [ 249 2 ] ; ABDEDF:(	; [ 249 ] ; ABDEE3:1	; [ 249 ] ; ABDEE7:zoom	; [ 249 3 ] ; ABDEEB:<<	; [ 249 3 2E7 ] ; ABDEEF:NEG	; [ 249 3 ] ; ABDEF3:'yi	; [ 249 3 ] ; ABDEF7:+!	; [ 249 3 2E9 ] ; ABDEFB:)	; [ 249 ] ; ABDEFF:<dn>	; [ 249 ] ; INLINE CTE; ABDF03:=?	; [ 249 4 ] ; ABDF07:(	; [ 249 ] ; ABDF0B:1	; [ 249 ] ; ABDF0F:zoom	; [ 249 5 ] ; ABDF13:<<	; [ 249 5 2E7 ] ; ABDF17:'yi	; [ 249 5 ] ; ABDF1B:+!	; [ 249 5 2E9 ] ; ABDF1F:)	; [ 249 ] ; ABDF23:<le>	; [ 249 ] ; INLINE CTE; ABDF27:=?	; [ 249 6 ] ; ABDF2B:(	; [ 249 ] ; ABDF2F:1	; [ 249 ] ; ABDF33:zoom	; [ 249 7 ] ; ABDF37:<<	; [ 249 7 2E7 ] ; ABDF3B:NEG	; [ 249 7 ] ; ABDF3F:'xi	; [ 249 7 ] ; ABDF43:+!	; [ 249 7 2E8 ] ; ABDF47:)	; [ 249 ] ; ABDF4B:<ri>	; [ 249 ] ; INLINE CTE; ABDF4F:=?	; [ 249 8 ] ; ABDF53:(	; [ 249 ] ; ABDF57:1	; [ 249 ] ; ABDF5B:zoom	; [ 249 9 ] ; ABDF5F:<<	; [ 249 9 2E7 ] ; ABDF63:'xi	; [ 249 9 ] ; ABDF67:+!	; [ 249 9 2E8 ] ; ABDF6B:)	; [ 249 ] ; ABDF6F:>esc<	; [ 249 ] ; INLINE CTE; ABDF73:=?	; [ 249 A ] ; ABDF77:(	; [ 249 ] ; ABDF7B:exit	; [ 249 ] ; ABB7D3:1	; [ 249 ] ; ABB7D7:'.exit	; [ 249 B ] ; ABB7DB:!	; [ 249 B 251 ] ; ABDF7F:)	; [ 249 ] ; ABDF83:DROP	; [ 249 ] ; ABDF87:;	; [ ] ;---------ANA;---------GEN; SDLkeyadd rbp,8mov [rbp],raxmov rax,qword[w249]; $101b; OPTN =?cmp rax,4123jne _o58; (; 1add rbp,8mov [rbp],raxmov rax,1; '.exit; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; )_o58:; $4052; OPTN =?cmp rax,16466jne _o59; (; 1add rbp,8mov [rbp],raxmov rax,1; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; NEGneg rax; 'yi; OPTAV +!add [w2E9],raxmov rax,[rbp]sub rbp,8; )_o59:; $4051; OPTN =?cmp rax,16465jne _o5A; (; 1add rbp,8mov [rbp],raxmov rax,1; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; 'yi; OPTAV +!add [w2E9],raxmov rax,[rbp]sub rbp,8; )_o5A:; $4050; OPTN =?cmp rax,16464jne _o5B; (; 1add rbp,8mov [rbp],raxmov rax,1; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; NEGneg rax; 'xi; OPTAV +!add [w2E8],raxmov rax,[rbp]sub rbp,8; )_o5B:; $404f; OPTN =?cmp rax,16463jne _o5C; (; 1add rbp,8mov [rbp],raxmov rax,1; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; 'xi; OPTAV +!add [w2E8],raxmov rax,[rbp]sub rbp,8; )_o5C:; $101b; OPTN =?cmp rax,4123jne _o5D; (; 1add rbp,8mov [rbp],raxmov rax,1; '.exit; OPTAV !mov qword[w251],raxmov rax,[rbp]sub rbp,8; )_o5D:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :canvassize  |1001480|l     . I| calls:1 niv:1 len:17 ( ab --  )w30F:;---------OPT; ABDF8B:2DUP	; [ 1 0 ] ; ABDF8F:'imagenh	; [ 1 0 1 0 ] ; ABDF93:!	; [ 1 0 1 0 2E2 ] ; ABDF97:'imagenw	; [ 1 0 1 ] ; ABDF9B:!	; [ 1 0 1 2E1 ] ; ABDF9F:2DUP	; [ 1 0 ] ; ABDFA3:SDLframebuffer	; [ 1 0 1 0 ] ; ABDFA7:'textura	; [ 1 0 0 ] ; ABDFAB:!	; [ 1 0 0 2E3 ] ; ABDFAF:vsize	; [ 1 0 ] ; ABD06B:'maxh	; [ 1 0 ] ; ABD06F:!	; [ 1 0 2BC ] ; ABD073:'maxw	; [ 1 ] ; ABD077:!	; [ 1 2BB ] ; ABDFB3:here	; [ ] ; ABDFB7:'imagen	; [ C8 ] ; ABDFBB:!	; [ C8 2E0 ] ; ABDFBF:"new"	; [ ] ; ABDFC3:'nombre	; [ C97 ] ; ABDFC7:strcpy	; [ C97 2DF ] ; ABDFCB:;	; [ ] ;---------ANA;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 'imagenh; OPTAV !mov qword[w2E2],raxmov rax,[rbp]sub rbp,8; 'imagenw; OPTAV !mov qword[w2E1],raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; SDLframebuffercall w246; 'textura; OPTAV !mov qword[w2E3],raxmov rax,[rbp]sub rbp,8; 'maxh; OPTAV !mov qword[w2BC],raxmov rax,[rbp]sub rbp,8; 'maxw; OPTAV !mov qword[w2BB],raxmov rax,[rbp]sub rbp,8; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; 'imagen; OPTAV !mov qword[w2E0],raxmov rax,[rbp]sub rbp,8; "new"add rbp,8mov [rbp],raxmov rax,strC97; 'nombreadd rbp,8mov [rbp],raxmov rax,w2DF; strcpyjmp w91; ;;--------------------------; :loadfile  |1001494|l' ;  . I| calls:1 niv:1 len:28 ( abcd -- efg )w310:;---------OPT; ABDFCF:0?	; [ 3 2 1 0 ] ; ABDFD3:(	; [ 3 2 1 0 ] ; ABDFD7:DROP	; [ 3 2 1 0 ] ; ABDFDB:;	; [ 3 2 1 ] ; ABDFDF:)	; [ 3 2 1 ] ; ABDFE3:DUP	; [ 3 2 1 0 ] ; ABDFE7:'nombre	; [ 3 2 1 0 0 ] ; ABDFEB:strcpy	; [ 3 2 1 0 0 2DF ] ; ABDFEF:0?	; [ 3 2 1 0 ] ; ABDFF3:(	; [ 3 2 1 0 ] ; ABDFF7:DROP	; [ 3 2 1 0 ] ; ABDFFB:;	; [ 3 2 1 ] ; ABDFFF:)	; [ 3 2 1 ] ; ABE003:2DUP	; [ 3 2 1 0 ] ; ABE007:'imagenh	; [ 3 2 1 0 1 0 ] ; ABE00B:!	; [ 3 2 1 0 1 0 2E2 ] ; ABE00F:'imagenw	; [ 3 2 1 0 1 ] ; ABE013:!	; [ 3 2 1 0 1 2E1 ] ; ABE017:vsize	; [ 3 2 1 0 ] ; ABD06B:'maxh	; [ 3 2 1 0 ] ; ABD06F:!	; [ 3 2 1 0 2BC ] ; ABD073:'maxw	; [ 3 2 1 ] ; ABD077:!	; [ 3 2 1 2BB ] ; ABE01B:imagen	; [ 3 2 ] ; ABE01F:SWAP	; [ 3 2 2E0 ] ; ABE023:4	; [ 3 2E0 2 ] ; ABE027:-	; [ 3 2E0 2 0 ] ; ABE02B:SWAP	; [ 3 2E0 2 ] ; ABE02F:1	; [ 3 2 2E0 ] ; ABE033:+	; [ 3 2 2E0 1 ] ; ABE037:MOVE	; [ 3 2 2E0 ] ; ABE03B:;	; [ ] ;---------ANA;---------GEN; 0?or rax,raxjnz _o5E; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o5E:; DUPadd rbp,8mov [rbp],rax; 'nombreadd rbp,8mov [rbp],raxmov rax,w2DF; strcpycall w91; 0?or rax,raxjnz _o5F; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o5F:; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 'imagenh; OPTAV !mov qword[w2E2],raxmov rax,[rbp]sub rbp,8; 'imagenw; OPTAV !mov qword[w2E1],raxmov rax,[rbp]sub rbp,8; 'maxh; OPTAV !mov qword[w2BC],raxmov rax,[rbp]sub rbp,8; 'maxw; OPTAV !mov qword[w2BB],raxmov rax,[rbp]sub rbp,8; imagenadd rbp,8mov [rbp],raxmov rax,qword[w2E0]; SWAPxchg rax,[rbp]; 4; OPTN -sub rax,4; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; MOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :btnt  |20054C0|l    [. I| calls:5 niv:2 len:50 ( ab --  )w311:;---------OPT; ABE03F:bsize	; [ 1 0 ] ; ABC6DB:count	; [ 1 0 ] ; ABC6DF:wp	; [ 1 1 0 ] ; ABC6E3:*	; [ 1 1 0 27B ] ; ABC6E7:hp	; [ 1 1 0 ] ; ABE043:bpos	; [ 1 1 0 27C ] ; ABC6EF:dp	; [ 1 1 0 27C ] ; ABC6F3:DUP	; [ 1 1 0 27C 27E ] ; ABC6F7:$ffffff	; [ 1 1 0 27C 27E 27E ] ; ABC6FB:AND	; [ 1 1 0 27C 27E 27E 0 ] ; ABC6FF:SWAP	; [ 1 1 0 27C 27E 27E ] ; ABC703:32	; [ 1 1 0 27C 27E 27E ] ; ABC707:>>	; [ 1 1 0 27C 27E 27E 1 ] ; ABE047:2SWAP	; [ 1 1 0 27C 27E 27E ] ; ABE04B:guiBox	; [ 1 1 27E 27E 0 27C ] ; ABE04F:SDLb	; [ 1 1 ] ; ABE053:SDLx	; [ 1 1 24D ] ; ABE057:SDLy	; [ 1 1 24D 24B ] ; ABE05B:guiIn	; [ 1 1 24D 24B 24C ] ; ABE05F:$7f	; [ 1 1 ] ; ABE063:[	; [ 1 1 2 ] ; ABE067:$ff	; [ 1 1 2 ] ; ABE06B:NIP	; [ 1 1 2 3 ] ; ABE06F:;	; [ 1 1 3 ] ; ABE073:]	; [ 1 1 3 ] ; ABE077:guiI	; [ 1 1 2 1 ] ; ABE07B:SDLcolor	; [ 1 1 2 ] ; ABE07F:xr1	; [ 1 1 ] ; ABE083:yr1	; [ 1 1 28F ] ; ABE087:xr2	; [ 1 1 28F 290 ] ; ABE08B:PICK2	; [ 1 1 28F 290 291 ] ; ABE08F:-	; [ 1 1 28F 290 291 28F ] ; ABE093:yr2	; [ 1 1 28F 290 291 ] ; ABE097:PICK2	; [ 1 1 28F 290 291 292 ] ; ABE09B:-	; [ 1 1 28F 290 291 292 290 ] ; ABE09F:SDLFillRect	; [ 1 1 28F 290 291 292 ] ; ABE0A3:$ffffff	; [ 1 1 ] ; ABE0A7:SDLcolor	; [ 1 1 4 ] ; ABE0AB:bsize	; [ 1 1 ] ; ABC6DB:count	; [ 1 1 ] ; ABC6DF:wp	; [ 1 1 0 ] ; ABC6E3:*	; [ 1 1 0 27B ] ; ABC6E7:hp	; [ 1 1 0 ] ; ABE0AF:xr2	; [ 1 1 0 27C ] ; ABE0B3:xr1	; [ 1 1 0 27C 291 ] ; ABE0B7:+	; [ 1 1 0 27C 291 28F ] ; ABE0BB:1	; [ 1 1 0 27C 291 ] ; ABE0BF:>>	; [ 1 1 0 27C 291 5 ] ; ABE0C3:ROT	; [ 1 1 0 27C 291 ] ; ABE0C7:1	; [ 1 1 27C 291 0 ] ; ABE0CB:>>	; [ 1 1 27C 291 0 6 ] ; ABE0CF:-	; [ 1 1 27C 291 0 ] ; ABE0D3:yr2	; [ 1 1 27C 291 ] ; ABE0D7:yr1	; [ 1 1 27C 291 292 ] ; ABE0DB:+	; [ 1 1 27C 291 292 290 ] ; ABE0DF:1	; [ 1 1 27C 291 292 ] ; ABE0E3:>>	; [ 1 1 27C 291 292 7 ] ; ABE0E7:ROT	; [ 1 1 27C 291 292 ] ; ABE0EB:1	; [ 1 1 291 292 27C ] ; ABE0EF:>>	; [ 1 1 291 292 27C 8 ] ; ABE0F3:-	; [ 1 1 291 292 27C ] ; ABE0F7:bat	; [ 1 1 291 292 ] ; ABC6C3:32	; [ 1 1 291 292 ] ; ABC6C7:<<	; [ 1 1 291 292 9 ] ; ABC6CB:OR	; [ 1 1 291 292 ] ; ABC6CF:'dp	; [ 1 1 291 ] ; ABC6D3:!	; [ 1 1 291 27E ] ; ABE0FB:bprint	; [ 1 1 ] ; ABC6A7:(	; [ 1 1 ] ; ABC6AB:C@+	; [ 1 1 ] ; ABC6AF:1?	; [ 1 1 1 ] ; ABC6B3:bemit	; [ 1 1 1 ] ; ABC6B7:)	; [ 1 1 ] ; ABC6BB:2DROP	; [ 1 1 1 ] ; ABE0FF:onClick	; [ 1 ] ; ABE103:;	; [ ] ;---------ANA;---------GEN; countcall w99; wp; OPTV *imul rax,qword[w27B]; hpadd rbp,8mov [rbp],raxmov rax,qword[w27C]; dpadd rbp,8mov [rbp],raxmov rax,qword[w27E]; DUPadd rbp,8mov [rbp],rax; $ffffff; OPTN ANDand rax,16777215; SWAPxchg rax,[rbp]; 32; OPTN >>sar rax,32; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; guiBoxcall w293; SDLbadd rbp,8mov [rbp],raxmov rax,qword[w24D]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; guiIncall w297; $7fadd rbp,8mov [rbp],raxmov rax,127; [jmp ja60anon60:; $ffadd rbp,8mov [rbp],raxmov rax,255; NIPsub rbp,8; ;ret; ]ja60:add rbp,8mov [rbp],raxmov rax,anon60; guiIcall w2A0; SDLcolorcall w255; xr1add rbp,8mov [rbp],raxmov rax,qword[w28F]; yr1add rbp,8mov [rbp],raxmov rax,qword[w290]; xr2add rbp,8mov [rbp],raxmov rax,qword[w291]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; yr2add rbp,8mov [rbp],raxmov rax,qword[w292]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; SDLFillRectcall w25B; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; SDLcolorcall w255; countcall w99; wp; OPTV *imul rax,qword[w27B]; hpadd rbp,8mov [rbp],raxmov rax,qword[w27C]; xr2add rbp,8mov [rbp],raxmov rax,qword[w291]; xr1; OPTV +add rax,qword[w28F]; 1; OPTN >>sar rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN >>sar rax,1; -neg raxadd rax,[rbp]sub rbp,8; yr2add rbp,8mov [rbp],raxmov rax,qword[w292]; yr1; OPTV +add rax,qword[w290]; 1; OPTN >>sar rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN >>sar rax,1; -neg raxadd rax,[rbp]sub rbp,8; 32; OPTN <<shl rax,32; ORor rax,[rbp]sub rbp,8; 'dp; OPTAV !mov qword[w27E],raxmov rax,[rbp]sub rbp,8; (_i61:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o61;; bemitcall w281; )jmp _i61_o61:; 2DROPmov rax,[rbp-8]sub rbp,8*2; onClickjmp w299; ;;--------------------------; :main  |20014C4|l'   [. I| calls:1 niv:2 len:103 (  --  )w312:;---------OPT; ABE107:gui	; [ ] ; ABE10B:$454545	; [ ] ; ABE10F:SDLclear	; [ 0 ] ; ABBD2F:SDLcolor	; [ 0 ] ; ABBD33:SDLrenderer	; [ ] ; ABBD37:SDL_RenderClear	; [ 23D ] ; ABB257:sys-SDL_RenderClear	; [ 23D ] ; ABB25B:SYS1	; [ 23D 1EA ] ; ABB25F:DROP	; [ 23D ] ; ABE113:'imagenset	; [ ] ; ABE117:vset!	; [ 2ED ] ; ABD053:'vecs	; [ 2ED ] ; ABD057:!	; [ 2ED 2B9 ] ; ABE11B:imagen.draw	; [ ] ; ABE11F:$454545	; [ ] ; ABE123:SDLcolor	; [ 1 ] ; ABE127:$ffffff	; [ ] ; ABE12B:SDLcolor	; [ 2 ] ; ABE12F:4	; [ ] ; ABE133:4	; [ 3 ] ; ABE137:bat	; [ 3 4 ] ; ABC6C3:32	; [ 3 4 ] ; ABC6C7:<<	; [ 3 4 5 ] ; ABC6CB:OR	; [ 3 5 ] ; ABC6CF:'dp	; [ 5 ] ; ABC6D3:!	; [ 5 27E ] ; ABE13B:":r3 Img Editor [ "	; [ ] ; ABE13F:bprint	; [ F44 ] ; ABC6A7:(	; [ F44 ] ; ABC6AB:C@+	; [ F44 ] ; ABC6AF:1?	; [ F44 F44 ] ; ABC6B3:bemit	; [ F44 F44 ] ; ABC6B7:)	; [ F44 ] ; ABC6BB:2DROP	; [ F44 F44 ] ; ABE143:'nombre	; [ ] ; ABE147:bprint	; [ 2DF ] ; ABC6A7:(	; [ 2DF ] ; ABC6AB:C@+	; [ 2DF ] ; ABC6AF:1?	; [ 2DF 2DF ] ; ABC6B3:bemit	; [ 2DF 2DF ] ; ABC6B7:)	; [ 2DF ] ; ABC6BB:2DROP	; [ 2DF 2DF ] ; ABE14B:imagenh	; [ ] ; ABE14F:imagenw	; [ 2E2 ] ; ABE153:" | %dx%d ] "	; [ 2E2 2E1 ] ; ABE157:sprint	; [ 2E2 2E1 F82 ] ; ABE15B:bprint	; [ 2E2 2E1 0 ] ; ABC6A7:(	; [ 2E2 2E1 0 ] ; ABC6AB:C@+	; [ 2E2 2E1 0 ] ; ABC6AF:1?	; [ 2E2 2E1 0 0 ] ; ABC6B3:bemit	; [ 2E2 2E1 0 0 ] ; ABC6B7:)	; [ 2E2 2E1 0 ] ; ABC6BB:2DROP	; [ 2E2 2E1 0 0 ] ; ABE15F:$7f7f7f	; [ 2E2 2E1 ] ; ABE163:SDLcolor	; [ 2E2 2E1 6 ] ; ABE167:[	; [ 2E2 2E1 ] ; ABE16B:0	; [ 2E2 2E1 ] ; ABE16F:'zoom	; [ 2E2 2E1 7 ] ; ABE173:!	; [ 2E2 2E1 7 2E7 ] ; ABE177:;	; [ 2E2 2E1 ] ; ABE17B:]	; [ 2E2 2E1 ] ; ABE17F:"x1"	; [ 2E2 2E1 1 ] ; ABE183:btnt	; [ 2E2 2E1 1 FC3 ] ; ABE187:" "	; [ 2E2 2E1 ] ; ABE18B:bprint	; [ 2E2 2E1 FCD ] ; ABC6A7:(	; [ 2E2 2E1 FCD ] ; ABC6AB:C@+	; [ 2E2 2E1 FCD ] ; ABC6AF:1?	; [ 2E2 2E1 FCD FCD ] ; ABC6B3:bemit	; [ 2E2 2E1 FCD FCD ] ; ABC6B7:)	; [ 2E2 2E1 FCD ] ; ABC6BB:2DROP	; [ 2E2 2E1 FCD FCD ] ; ABE18F:[	; [ 2E2 2E1 ] ; ABE193:1	; [ 2E2 2E1 ] ; ABE197:'zoom	; [ 2E2 2E1 8 ] ; ABE19B:!	; [ 2E2 2E1 8 2E7 ] ; ABE19F:;	; [ 2E2 2E1 ] ; ABE1A3:]	; [ 2E2 2E1 ] ; ABE1A7:"x2"	; [ 2E2 2E1 1 ] ; ABE1AB:btnt	; [ 2E2 2E1 1 FEA ] ; ABE1AF:" "	; [ 2E2 2E1 ] ; ABE1B3:bprint	; [ 2E2 2E1 FF4 ] ; ABC6A7:(	; [ 2E2 2E1 FF4 ] ; ABC6AB:C@+	; [ 2E2 2E1 FF4 ] ; ABC6AF:1?	; [ 2E2 2E1 FF4 FF4 ] ; ABC6B3:bemit	; [ 2E2 2E1 FF4 FF4 ] ; ABC6B7:)	; [ 2E2 2E1 FF4 ] ; ABC6BB:2DROP	; [ 2E2 2E1 FF4 FF4 ] ; ABE1B7:[	; [ 2E2 2E1 ] ; ABE1BB:2	; [ 2E2 2E1 ] ; ABE1BF:'zoom	; [ 2E2 2E1 9 ] ; ABE1C3:!	; [ 2E2 2E1 9 2E7 ] ; ABE1C7:;	; [ 2E2 2E1 ] ; ABE1CB:]	; [ 2E2 2E1 ] ; ABE1CF:"x4"	; [ 2E2 2E1 1 ] ; ABE1D3:btnt	; [ 2E2 2E1 1 1011 ] ; ABE1D7:" "	; [ 2E2 2E1 ] ; ABE1DB:bprint	; [ 2E2 2E1 101B ] ; ABC6A7:(	; [ 2E2 2E1 101B ] ; ABC6AB:C@+	; [ 2E2 2E1 101B ] ; ABC6AF:1?	; [ 2E2 2E1 101B 101B ] ; ABC6B3:bemit	; [ 2E2 2E1 101B 101B ] ; ABC6B7:)	; [ 2E2 2E1 101B ] ; ABC6BB:2DROP	; [ 2E2 2E1 101B 101B ] ; ABE1DF:[	; [ 2E2 2E1 ] ; ABE1E3:3	; [ 2E2 2E1 ] ; ABE1E7:'zoom	; [ 2E2 2E1 A ] ; ABE1EB:!	; [ 2E2 2E1 A 2E7 ] ; ABE1EF:;	; [ 2E2 2E1 ] ; ABE1F3:]	; [ 2E2 2E1 ] ; ABE1F7:"x8"	; [ 2E2 2E1 1 ] ; ABE1FB:btnt	; [ 2E2 2E1 1 1038 ] ; ABE1FF:" "	; [ 2E2 2E1 ] ; ABE203:bprint	; [ 2E2 2E1 1042 ] ; ABC6A7:(	; [ 2E2 2E1 1042 ] ; ABC6AB:C@+	; [ 2E2 2E1 1042 ] ; ABC6AF:1?	; [ 2E2 2E1 1042 1042 ] ; ABC6B3:bemit	; [ 2E2 2E1 1042 1042 ] ; ABC6B7:)	; [ 2E2 2E1 1042 ] ; ABC6BB:2DROP	; [ 2E2 2E1 1042 1042 ] ; ABE207:'loadfile	; [ 2E2 2E1 ] ; ABE20B:"load"	; [ 2E2 2E1 310 ] ; ABE20F:btnt	; [ 2E2 2E1 310 1059 ] ; ABE213:toolbar	; [ 2E2 2E1 ] ; ABE217:xi	; [ 2E2 2E1 ] ; ABE21B:limx	; [ 2E2 2E1 2E8 ] ; INLINE CTE; ABE21F:clampmin	; [ 2E2 2E1 2E8 B ] ; ABE223:yi	; [ 2E2 2E1 0 ] ; ABE227:limy	; [ 2E2 2E1 0 2E9 ] ; INLINE CTE; ABE22B:clampmin	; [ 2E2 2E1 0 2E9 C ] ; ABE22F:imagenw	; [ 2E2 2E1 0 0 ] ; ABE233:zoom	; [ 2E2 2E1 0 0 2E1 ] ; ABE237:<<	; [ 2E2 2E1 0 0 2E1 2E7 ] ; ABE23B:xi	; [ 2E2 2E1 0 0 2E1 ] ; ABE23F:+	; [ 2E2 2E1 0 0 2E1 2E8 ] ; ABE243:sw	; [ 2E2 2E1 0 0 2E1 ] ; ABE247:clampmax	; [ 2E2 2E1 0 0 2E1 23E ] ; ABE24B:imagenh	; [ 2E2 2E1 0 0 0 ] ; ABE24F:zoom	; [ 2E2 2E1 0 0 0 2E2 ] ; ABE253:<<	; [ 2E2 2E1 0 0 0 2E2 2E7 ] ; ABE257:yi	; [ 2E2 2E1 0 0 0 2E2 ] ; ABE25B:+	; [ 2E2 2E1 0 0 0 2E2 2E9 ] ; ABE25F:sh	; [ 2E2 2E1 0 0 0 2E2 ] ; ABE263:clampmax	; [ 2E2 2E1 0 0 0 2E2 23F ] ; ABE267:guiBox	; [ 2E2 2E1 0 0 0 0 ] ; ABE26B:SDLb	; [ 2E2 2E1 ] ; ABE26F:SDLx	; [ 2E2 2E1 24D ] ; ABE273:SDLy	; [ 2E2 2E1 24D 24B ] ; ABE277:guiIn	; [ 2E2 2E1 24D 24B 24C ] ; ABE27B:modoex	; [ 2E2 2E1 ] ; ABE27F:1?	; [ 2E2 2E1 303 ] ; ABE283:(	; [ 2E2 2E1 303 ] ; ABE287:DUP	; [ 2E2 2E1 303 ] ; ABE28B:EX	; [ 2E2 2E1 303 303 ] ; ABE28F:)	; [ 2E2 2E1 303 303 ] ; ABE293:DROP	; [ 2E2 2E1 303 ] ; ABE297:teclado	; [ 2E2 2E1 ] ; ABE29B:SDLRedraw	; [ 2E2 2E1 ] ; ABBD3F:SDLrenderer	; [ 2E2 2E1 ] ; ABBD43:SDL_RenderPresent	; [ 2E2 2E1 23D ] ; ABB287:sys-SDL_RenderPresent	; [ 2E2 2E1 23D ] ; ABB28B:SYS1	; [ 2E2 2E1 23D 1ED ] ; ABB28F:DROP	; [ 2E2 2E1 23D ] ; ABE29F:;	; [ 2E2 2E1 ] ;---------ANA;---------GEN; guicall w298; $454545add rbp,8mov [rbp],raxmov rax,4539717; SDLcolorcall w255; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; sys-SDL_RenderClearadd rbp,8mov [rbp],raxmov rax,qword[w1EA]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; 'imagensetadd rbp,8mov [rbp],raxmov rax,w2ED; 'vecs; OPTAV !mov qword[w2B9],raxmov rax,[rbp]sub rbp,8; imagen.drawcall w30D; $454545add rbp,8mov [rbp],raxmov rax,4539717; SDLcolorcall w255; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; SDLcolorcall w255; $400000004 ; calcadd rbp,8mov [rbp],raxmov rax,17179869188; 'dp; OPTAV !mov qword[w27E],raxmov rax,[rbp]sub rbp,8; ":r3 Img Editor [ "add rbp,8mov [rbp],raxmov rax,strF44; (_i62:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o62;; bemitcall w281; )jmp _i62_o62:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'nombreadd rbp,8mov [rbp],raxmov rax,w2DF; (_i63:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o63;; bemitcall w281; )jmp _i63_o63:; 2DROPmov rax,[rbp-8]sub rbp,8*2; imagenhadd rbp,8mov [rbp],raxmov rax,qword[w2E2]; imagenwadd rbp,8mov [rbp],raxmov rax,qword[w2E1]; " | %dx%d ] "add rbp,8mov [rbp],raxmov rax,strF82; sprintcall wF6; (_i64:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o64;; bemitcall w281; )jmp _i64_o64:; 2DROPmov rax,[rbp-8]sub rbp,8*2; $7f7f7fadd rbp,8mov [rbp],raxmov rax,8355711; SDLcolorcall w255; [jmp ja65anon65:; 0add rbp,8mov [rbp],raxxor rax,rax; 'zoom; OPTAV !mov qword[w2E7],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja65:add rbp,8mov [rbp],raxmov rax,anon65; "x1"add rbp,8mov [rbp],raxmov rax,strFC3; btntcall w311; " "add rbp,8mov [rbp],raxmov rax,strFCD; (_i66:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o66;; bemitcall w281; )jmp _i66_o66:; 2DROPmov rax,[rbp-8]sub rbp,8*2; [jmp ja67anon67:; 1add rbp,8mov [rbp],raxmov rax,1; 'zoom; OPTAV !mov qword[w2E7],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja67:add rbp,8mov [rbp],raxmov rax,anon67; "x2"add rbp,8mov [rbp],raxmov rax,strFEA; btntcall w311; " "add rbp,8mov [rbp],raxmov rax,strFF4; (_i68:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o68;; bemitcall w281; )jmp _i68_o68:; 2DROPmov rax,[rbp-8]sub rbp,8*2; [jmp ja69anon69:; 2add rbp,8mov [rbp],raxmov rax,2; 'zoom; OPTAV !mov qword[w2E7],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja69:add rbp,8mov [rbp],raxmov rax,anon69; "x4"add rbp,8mov [rbp],raxmov rax,str1011; btntcall w311; " "add rbp,8mov [rbp],raxmov rax,str101B; (_i6A:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o6A;; bemitcall w281; )jmp _i6A_o6A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; [jmp ja6Banon6B:; 3add rbp,8mov [rbp],raxmov rax,3; 'zoom; OPTAV !mov qword[w2E7],raxmov rax,[rbp]sub rbp,8; ;ret; ]ja6B:add rbp,8mov [rbp],raxmov rax,anon6B; "x8"add rbp,8mov [rbp],raxmov rax,str1038; btntcall w311; " "add rbp,8mov [rbp],raxmov rax,str1042; (_i6C:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o6C;; bemitcall w281; )jmp _i6C_o6C:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'loadfileadd rbp,8mov [rbp],raxmov rax,w310; "load"add rbp,8mov [rbp],raxmov rax,str1059; btntcall w311; toolbarcall w30C; xiadd rbp,8mov [rbp],raxmov rax,qword[w2E8]; 60add rbp,8mov [rbp],raxmov rax,60; clampmincall w63; yiadd rbp,8mov [rbp],raxmov rax,qword[w2E9]; 24add rbp,8mov [rbp],raxmov rax,24; clampmincall w63; imagenwadd rbp,8mov [rbp],raxmov rax,qword[w2E1]; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; xi; OPTV +add rax,qword[w2E8]; swadd rbp,8mov [rbp],raxmov rax,qword[w23E]; clampmaxcall w62; imagenhadd rbp,8mov [rbp],raxmov rax,qword[w2E2]; zoom; OPTV <<mov rcx,qword[w2E7]shl rax,cl; yi; OPTV +add rax,qword[w2E9]; shadd rbp,8mov [rbp],raxmov rax,qword[w23F]; clampmaxcall w62; guiBoxcall w293; SDLbadd rbp,8mov [rbp],raxmov rax,qword[w24D]; SDLxadd rbp,8mov [rbp],raxmov rax,qword[w24B]; SDLyadd rbp,8mov [rbp],raxmov rax,qword[w24C]; guiIncall w297; modoexadd rbp,8mov [rbp],raxmov rax,qword[w303]; 1?or rax,raxjz _o6D;; (; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )_o6D:; DROPmov rax,[rbp]sub rbp,8; tecladocall w30E; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; sys-SDL_RenderPresentadd rbp,8mov [rbp],raxmov rax,qword[w1ED]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :inimem  |2001480|l     . I| calls:1 niv:2 len:17 (  --  )w313:;---------OPT; ABE2A3:'imagenset	; [ ] ; ABE2A7:vset!	; [ 2ED ] ; ABD053:'vecs	; [ 2ED ] ; ABD057:!	; [ 2ED 2B9 ] ; ABE2AB:'imagenget	; [ ] ; ABE2AF:vget!	; [ 2EE ] ; ABD05F:'vecg	; [ 2EE ] ; ABD063:!	; [ 2EE 2BA ] ; ABE2B3:mark	; [ ] ; AB9753:here	; [ ] ; AB9757:memmap>	; [ C8 ] ; AB975B:!+	; [ C8 CA ] ; AB975F:'memmap>	; [ C8 ] ; AB9763:!	; [ C8 CA ] ; ABE2B7:"media/img/img-toolbar.png"	; [ ] ; ABE2BB:loadimg	; [ 118E ] ; ABE2BF:'imgtoolbar	; [ 0 ] ; ABE2C3:!	; [ 0 306 ] ; ABE2C7:mark	; [ ] ; AB9753:here	; [ ] ; AB9757:memmap>	; [ C8 ] ; AB975B:!+	; [ C8 CA ] ; AB975F:'memmap>	; [ C8 ] ; AB9763:!	; [ C8 CA ] ; ABE2CB:here	; [ ] ; ABE2CF:'imagen	; [ C8 ] ; ABE2D3:!	; [ C8 2E0 ] ; ABE2D7:320	; [ ] ; ABE2DB:240	; [ 0 ] ; ABE2DF:canvassize	; [ 0 1 ] ; ABE2E3:;	; [ ] ;---------ANA;---------GEN; 'imagensetadd rbp,8mov [rbp],raxmov rax,w2ED; 'vecs; OPTAV !mov qword[w2B9],raxmov rax,[rbp]sub rbp,8; 'imagengetadd rbp,8mov [rbp],raxmov rax,w2EE; 'vecg; OPTAV !mov qword[w2BA],raxmov rax,[rbp]sub rbp,8; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; memmap>; OPTV !+mov rbx,qword[wCA]mov [rbx],raxadd rbx,8mov rax,rbx; 'memmap>; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; "media/img/img-toolbar.png"add rbp,8mov [rbp],raxmov rax,str118E; loadimgcall w277; 'imgtoolbar; OPTAV !mov qword[w306],raxmov rax,[rbp]sub rbp,8; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; memmap>; OPTV !+mov rbx,qword[wCA]mov [rbx],raxadd rbx,8mov rax,rbx; 'memmap>; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; hereadd rbp,8mov [rbp],raxmov rax,qword[wC8]; 'imagen; OPTAV !mov qword[w2E0],raxmov rax,[rbp]sub rbp,8; 320add rbp,8mov [rbp],raxmov rax,320; 240add rbp,8mov [rbp],raxmov rax,240; canvassizejmp w30F; ;;--------------------------; :  |2001480|l     . I| calls:1 niv:2 len:11 (  -- a )INICIO:;---------OPT; ABE2E7:	; [ ] ; ABE2EB:"r3paint"	; [ ] ; ABE2EF:800	; [ 1215 ] ; ABE2F3:600	; [ 1215 0 ] ; ABE2F7:SDLinit	; [ 1215 0 1 ] ; ABE2FB:bfont1	; [ ] ; ABC70F:8	; [ ] ; ABC713:16	; [ 2 ] ; ABC717:"media/img/VGA8x16.png"	; [ 2 3 ] ; ABC71B:bmfont	; [ 2 3 B502 ] ; ABE2FF:inimem	; [ ] ; ABE303:'main	; [ ] ; ABE307:SDLshow	; [ 312 ] ; ABE30B:SDLquit	; [ ] ; ABB57B:SDLrenderer	; [ ] ; ABB57F:SDL_DestroyRenderer	; [ 23D ] ; ABB23F:sys-SDL_DestroyRenderer	; [ 23D ] ; ABB243:SYS1	; [ 23D 1E8 ] ; ABB583:SDL_windows	; [ 23D ] ; ABB587:SDL_DestroyWindow	; [ 23D 23B ] ; ABB1E7:sys-SDL_DestroyWindow	; [ 23D 23B ] ; ABB1EB:SYS1	; [ 23D 23B 1E4 ] ; ABB1EF:DROP	; [ 23D 23B ] ; ABB58B:SDL_Quit	; [ 23D ] ; ABB173:sys-SDL_Quit	; [ 23D ] ; ABB177:SYS0	; [ 23D 1DC ] ; ABB17B:DROP	; [ 23D 1DC ] ; ABE30F:;	; [ 23D ] ;---------ANA;---------GEN; call w279; "r3paint"add rbp,8mov [rbp],raxmov rax,str1215; 800add rbp,8mov [rbp],raxmov rax,800; 600add rbp,8mov [rbp],raxmov rax,600; SDLinitcall w243; 8add rbp,8mov [rbp],raxmov rax,8; 16add rbp,8mov [rbp],raxmov rax,16; "media/img/VGA8x16.png"add rbp,8mov [rbp],raxmov rax,strB502; bmfontcall w27F; inimemcall w313; 'mainadd rbp,8mov [rbp],raxmov rax,w312; SDLshowcall w252; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w23D]; sys-SDL_DestroyRendereradd rbp,8mov [rbp],raxmov rax,qword[w1E8]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w23B]; sys-SDL_DestroyWindowadd rbp,8mov [rbp],raxmov rax,qword[w1E4]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-SDL_Quitadd rbp,8mov [rbp],raxmov rax,qword[w1DC]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret 