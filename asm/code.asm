;---r3 compiler code.asm; r3/demo/balls.r3;--------------------------; :  |1001480|l     . I| calls:1 niv:1 len:206 (  --  )w47:;---------OPT; AFFF76:"KERNEL32.DLL"	; [ ] ; AFFF7A:LOADLIB	; [ 3E89 ] ; AFFF7E:DUP	; [ 3E89 ] ; AFFF82:"AllocConsole"	; [ 3E89 3E89 ] ; AFFF86:GETPROC	; [ 3E89 3E89 3EA6 ] ; AFFF8A:'sys-AllocConsole	; [ 3E89 3E89 ] ; AFFF8E:!	; [ 3E89 3E89 0 ] ; AFFF92:DUP	; [ 3E89 ] ; AFFF96:"ExitProcess"	; [ 3E89 3E89 ] ; AFFF9A:GETPROC	; [ 3E89 3E89 3ED6 ] ; AFFF9E:'sys-ExitProcess	; [ 3E89 3E89 ] ; AFFFA2:!	; [ 3E89 3E89 1 ] ; AFFFA6:DUP	; [ 3E89 ] ; AFFFAA:"GetStdHandle"	; [ 3E89 3E89 ] ; AFFFAE:GETPROC	; [ 3E89 3E89 3F05 ] ; AFFFB2:'sys-GetStdHandle	; [ 3E89 3E89 ] ; AFFFB6:!	; [ 3E89 3E89 2 ] ; AFFFBA:DUP	; [ 3E89 ] ; AFFFBE:"ReadFile"	; [ 3E89 3E89 ] ; AFFFC2:GETPROC	; [ 3E89 3E89 3F37 ] ; AFFFC6:'sys-ReadFile	; [ 3E89 3E89 ] ; AFFFCA:!	; [ 3E89 3E89 3 ] ; AFFFCE:DUP	; [ 3E89 ] ; AFFFD2:"WriteFile"	; [ 3E89 3E89 ] ; AFFFD6:GETPROC	; [ 3E89 3E89 3F5F ] ; AFFFDA:'sys-WriteFile	; [ 3E89 3E89 ] ; AFFFDE:!	; [ 3E89 3E89 4 ] ; AFFFE2:DUP	; [ 3E89 ] ; AFFFE6:"GetConsoleMode"	; [ 3E89 3E89 ] ; AFFFEA:GETPROC	; [ 3E89 3E89 3F8B ] ; AFFFEE:'sys-GetConsoleMode	; [ 3E89 3E89 ] ; AFFFF2:!	; [ 3E89 3E89 5 ] ; AFFFF6:DUP	; [ 3E89 ] ; AFFFFA:"SetConsoleMode"	; [ 3E89 3E89 ] ; AFFFFE:GETPROC	; [ 3E89 3E89 3FBF ] ; B00002:'sys-SetConsoleMode	; [ 3E89 3E89 ] ; B00006:!	; [ 3E89 3E89 6 ] ; B0000A:DUP	; [ 3E89 ] ; B0000E:"PeekConsoleInputW"	; [ 3E89 3E89 ] ; B00012:GETPROC	; [ 3E89 3E89 3FF3 ] ; B00016:'sys-PeekConsoleInput	; [ 3E89 3E89 ] ; B0001A:!	; [ 3E89 3E89 7 ] ; B0001E:DUP	; [ 3E89 ] ; B00022:"ReadConsoleInputW"	; [ 3E89 3E89 ] ; B00026:GETPROC	; [ 3E89 3E89 402C ] ; B0002A:'sys-ReadConsoleInput	; [ 3E89 3E89 ] ; B0002E:!	; [ 3E89 3E89 8 ] ; B00032:DUP	; [ 3E89 ] ; B00036:"WriteConsole"	; [ 3E89 3E89 ] ; B0003A:GETPROC	; [ 3E89 3E89 4065 ] ; B0003E:'sys-WriteConsole	; [ 3E89 3E89 ] ; B00042:!	; [ 3E89 3E89 9 ] ; B00046:DUP	; [ 3E89 ] ; B0004A:"FlushConsoleInputBuffer"	; [ 3E89 3E89 ] ; B0004E:GETPROC	; [ 3E89 3E89 4097 ] ; B00052:'sys-FlushConsoleInputBuffer	; [ 3E89 3E89 ] ; B00056:!	; [ 3E89 3E89 A ] ; B0005A:DUP	; [ 3E89 ] ; B0005E:"Sleep"	; [ 3E89 3E89 ] ; B00062:GETPROC	; [ 3E89 3E89 40DD ] ; B00066:'sys-Sleep	; [ 3E89 3E89 ] ; B0006A:!	; [ 3E89 3E89 B ] ; B0006E:DUP	; [ 3E89 ] ; B00072:"WaitForSingleObject"	; [ 3E89 3E89 ] ; B00076:GETPROC	; [ 3E89 3E89 40FF ] ; B0007A:'sys-WaitForSingleObject	; [ 3E89 3E89 ] ; B0007E:!	; [ 3E89 3E89 C ] ; B00082:DUP	; [ 3E89 ] ; B00086:"GetLastError"	; [ 3E89 3E89 ] ; B0008A:GETPROC	; [ 3E89 3E89 413E ] ; B0008E:'sys-GetLastError	; [ 3E89 3E89 ] ; B00092:!	; [ 3E89 3E89 D ] ; B00096:DUP	; [ 3E89 ] ; B0009A:"CreateFileA"	; [ 3E89 3E89 ] ; B0009E:GETPROC	; [ 3E89 3E89 416F ] ; B000A2:'sys-CreateFile	; [ 3E89 3E89 ] ; B000A6:!	; [ 3E89 3E89 E ] ; B000AA:DUP	; [ 3E89 ] ; B000AE:"CloseHandle"	; [ 3E89 3E89 ] ; B000B2:GETPROC	; [ 3E89 3E89 419D ] ; B000B6:'sys-CloseHandle	; [ 3E89 3E89 ] ; B000BA:!	; [ 3E89 3E89 F ] ; B000BE:DUP	; [ 3E89 ] ; B000C2:"FlushFileBuffers"	; [ 3E89 3E89 ] ; B000C6:GETPROC	; [ 3E89 3E89 41CB ] ; B000CA:'sys-FlushFileBuffers	; [ 3E89 3E89 ] ; B000CE:!	; [ 3E89 3E89 10 ] ; B000D2:DUP	; [ 3E89 ] ; B000D6:"DeleteFileA"	; [ 3E89 3E89 ] ; B000DA:GETPROC	; [ 3E89 3E89 4203 ] ; B000DE:'sys-DeleteFile	; [ 3E89 3E89 ] ; B000E2:!	; [ 3E89 3E89 11 ] ; B000E6:DUP	; [ 3E89 ] ; B000EA:"MoveFileA"	; [ 3E89 3E89 ] ; B000EE:GETPROC	; [ 3E89 3E89 4230 ] ; B000F2:'sys-MoveFile	; [ 3E89 3E89 ] ; B000F6:!	; [ 3E89 3E89 12 ] ; B000FA:DUP	; [ 3E89 ] ; B000FE:"SetFilePointer"	; [ 3E89 3E89 ] ; B00102:GETPROC	; [ 3E89 3E89 4259 ] ; B00106:'sys-SetFilePointer	; [ 3E89 3E89 ] ; B0010A:!	; [ 3E89 3E89 13 ] ; B0010E:DUP	; [ 3E89 ] ; B00112:"SetEndOfFile"	; [ 3E89 3E89 ] ; B00116:GETPROC	; [ 3E89 3E89 428D ] ; B0011A:'sys-SetEndOfFile	; [ 3E89 3E89 ] ; B0011E:!	; [ 3E89 3E89 14 ] ; B00122:DUP	; [ 3E89 ] ; B00126:"GetFileSize"	; [ 3E89 3E89 ] ; B0012A:GETPROC	; [ 3E89 3E89 42BD ] ; B0012E:'sys-GetFileSize	; [ 3E89 3E89 ] ; B00132:!	; [ 3E89 3E89 15 ] ; B00136:DUP	; [ 3E89 ] ; B0013A:"GetProcessHeap"	; [ 3E89 3E89 ] ; B0013E:GETPROC	; [ 3E89 3E89 42EC ] ; B00142:'sys-GetProcessHeap	; [ 3E89 3E89 ] ; B00146:!	; [ 3E89 3E89 16 ] ; B0014A:DUP	; [ 3E89 ] ; B0014E:"HeapAlloc"	; [ 3E89 3E89 ] ; B00152:GETPROC	; [ 3E89 3E89 4320 ] ; B00156:'sys-HeapAlloc	; [ 3E89 3E89 ] ; B0015A:!	; [ 3E89 3E89 17 ] ; B0015E:DUP	; [ 3E89 ] ; B00162:"HeapFree"	; [ 3E89 3E89 ] ; B00166:GETPROC	; [ 3E89 3E89 434A ] ; B0016A:'sys-HeapFree	; [ 3E89 3E89 ] ; B0016E:!	; [ 3E89 3E89 18 ] ; B00172:DUP	; [ 3E89 ] ; B00176:"HeapReAlloc"	; [ 3E89 3E89 ] ; B0017A:GETPROC	; [ 3E89 3E89 4372 ] ; B0017E:'sys-HeapReAlloc	; [ 3E89 3E89 ] ; B00182:!	; [ 3E89 3E89 19 ] ; B00186:DUP	; [ 3E89 ] ; B0018A:"GetLocalTime"	; [ 3E89 3E89 ] ; B0018E:GETPROC	; [ 3E89 3E89 43A1 ] ; B00192:'sys-GetLocalTime	; [ 3E89 3E89 ] ; B00196:!	; [ 3E89 3E89 1B ] ; B0019A:DUP	; [ 3E89 ] ; B0019E:"FindFirstFileA"	; [ 3E89 3E89 ] ; B001A2:GETPROC	; [ 3E89 3E89 43D1 ] ; B001A6:'sys-FindFirstFile	; [ 3E89 3E89 ] ; B001AA:!	; [ 3E89 3E89 1C ] ; B001AE:DUP	; [ 3E89 ] ; B001B2:"FindNextFileA"	; [ 3E89 3E89 ] ; B001B6:GETPROC	; [ 3E89 3E89 4404 ] ; B001BA:'sys-FindNextFile	; [ 3E89 3E89 ] ; B001BE:!	; [ 3E89 3E89 1D ] ; B001C2:DUP	; [ 3E89 ] ; B001C6:"FindClose"	; [ 3E89 3E89 ] ; B001CA:GETPROC	; [ 3E89 3E89 4435 ] ; B001CE:'sys-FindClose	; [ 3E89 3E89 ] ; B001D2:!	; [ 3E89 3E89 1E ] ; B001D6:DUP	; [ 3E89 ] ; B001DA:"CreateProcessA"	; [ 3E89 3E89 ] ; B001DE:GETPROC	; [ 3E89 3E89 4460 ] ; B001E2:'sys-CreateProcess	; [ 3E89 3E89 ] ; B001E6:!	; [ 3E89 3E89 1F ] ; B001EA:DUP	; [ 3E89 ] ; B001EE:"GetTickCount"	; [ 3E89 3E89 ] ; B001F2:GETPROC	; [ 3E89 3E89 4493 ] ; B001F6:'sys-GetTickCount	; [ 3E89 3E89 ] ; B001FA:!	; [ 3E89 3E89 1A ] ; B001FE:DUP	; [ 3E89 ] ; B00202:"GetConsoleScreenBufferInfo"	; [ 3E89 3E89 ] ; B00206:GETPROC	; [ 3E89 3E89 44C3 ] ; B0020A:'sys-GetConsoleScreenBufferInfo	; [ 3E89 3E89 ] ; B0020E:!	; [ 3E89 3E89 20 ] ; B00212:DROP	; [ 3E89 ] ; B00216:AllocConsole	; [ ] ; AFFDBE:sys-AllocConsole	; [ ] ; AFFDC2:SYS0	; [ 0 ] ; AFFDC6:DROP	; [ 0 ] ; B0021A:-10	; [ ] ; B0021E:GetStdHandle	; [ 0 ] ; AFFDDA:sys-GetStdHandle	; [ 0 ] ; AFFDDE:SYS1	; [ 0 2 ] ; B00222:'stdin	; [ 0 ] ; B00226:!	; [ 0 44 ] ; B0022A:-11	; [ ] ; B0022E:GetStdHandle	; [ 1 ] ; AFFDDA:sys-GetStdHandle	; [ 1 ] ; AFFDDE:SYS1	; [ 1 2 ] ; B00232:'stdout	; [ 1 ] ; B00236:!	; [ 1 45 ] ; B0023A:-12	; [ ] ; B0023E:GetStdHandle	; [ 2 ] ; AFFDDA:sys-GetStdHandle	; [ 2 ] ; AFFDDE:SYS1	; [ 2 2 ] ; B00242:'stderr	; [ 2 ] ; B00246:!	; [ 2 46 ] ; B0024A:stdin	; [ ] ; B0024E:'console-mode	; [ 44 ] ; B00252:GetConsoleMode	; [ 44 42 ] ; AFFDFE:sys-GetConsoleMode	; [ 44 42 ] ; AFFE02:SYS2	; [ 44 42 5 ] ; B00256:DROP	; [ 44 ] ; B0025A:stdin	; [ ] ; B0025E:console-mode	; [ 44 ] ; B00262:$1a	; [ 44 42 ] ; B00266:NEG	; [ 44 42 3 ] ; B0026A:AND	; [ 44 42 3 ] ; B0026E:SetConsoleMode	; [ 44 42 ] ; AFFE0A:sys-SetConsoleMode	; [ 44 42 ] ; AFFE0E:SYS2	; [ 44 42 6 ] ; B00272:DROP	; [ 44 ] ; B00276:stdout	; [ ] ; B0027A:'console-mode	; [ 45 ] ; B0027E:GetConsoleMode	; [ 45 42 ] ; AFFDFE:sys-GetConsoleMode	; [ 45 42 ] ; AFFE02:SYS2	; [ 45 42 5 ] ; B00282:DROP	; [ 45 ] ; B00286:stdout	; [ ] ; B0028A:console-mode	; [ 45 ] ; B0028E:$4	; [ 45 42 ] ; B00292:OR	; [ 45 42 4 ] ; B00296:SetConsoleMode	; [ 45 42 ] ; AFFE0A:sys-SetConsoleMode	; [ 45 42 ] ; AFFE0E:SYS2	; [ 45 42 6 ] ; B0029A:DROP	; [ 45 ] ; B0029E:GetProcessHeap	; [ ] ; AFFEDE:sys-GetProcessHeap	; [ ] ; AFFEE2:SYS0	; [ 16 ] ; B002A2:'process-heap	; [ 16 ] ; B002A6:!	; [ 16 43 ] ; B002AA:;	; [ ] ;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str3E89; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3EA6; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3ED6; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3F05; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3F37; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3F5F; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3F8B; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3FBF; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "PeekConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3FF3; 'sys-PeekConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str402C; 'sys-ReadConsoleInput; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4065; 'sys-WriteConsole; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4097; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str40DD; 'sys-Sleep; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str40FF; 'sys-WaitForSingleObject; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str413E; 'sys-GetLastError; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str416F; 'sys-CreateFile; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str419D; 'sys-CloseHandle; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str41CB; 'sys-FlushFileBuffers; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4203; 'sys-DeleteFile; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4230; 'sys-MoveFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4259; 'sys-SetFilePointer; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str428D; 'sys-SetEndOfFile; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str42BD; 'sys-GetFileSize; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str42EC; 'sys-GetProcessHeap; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4320; 'sys-HeapAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str434A; 'sys-HeapFree; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4372; 'sys-HeapReAlloc; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str43A1; 'sys-GetLocalTime; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str43D1; 'sys-FindFirstFile; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4404; 'sys-FindNextFile; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4435; 'sys-FindClose; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4460; 'sys-CreateProcess; OPTAV !mov qword[w1F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str4493; 'sys-GetTickCount; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str44C3; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w20],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stdin; OPTAV !mov qword[w44],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stdout; OPTAV !mov qword[w45],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 'stderr; OPTAV !mov qword[w46],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w44]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w42; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w44]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w42]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w45]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w42; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w45]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w42]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-GetProcessHeapadd rbp,8mov [rbp],raxmov rax,qword[w16]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; 'process-heap; OPTAV !mov qword[w43],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sinp  |4080|l     .  | calls:4 niv:0 len:21 ( a -- b )w55:;---------OPT; B0037A:$7fff	; [ 0 ] ; B0037E:AND	; [ 0 0 ] ; B00382:$4000	; [ 0 ] ; B00386:-	; [ 0 1 ] ; B0038A:DUP	; [ 0 ] ; B0038E:DUP	; [ 0 0 ] ; B00392:16	; [ 0 0 0 ] ; B00396:*>>	; [ 0 0 0 2 ] ; B0039A:DUP	; [ 0 0 ] ; B0039E:4876210	; [ 0 0 0 ] ; B003A2:16	; [ 0 0 0 3 ] ; B003A6:*>>	; [ 0 0 0 3 4 ] ; B003AA:2699161	; [ 0 0 0 ] ; B003AE:-	; [ 0 0 0 5 ] ; B003B2:16	; [ 0 0 0 ] ; B003B6:*>>	; [ 0 0 0 6 ] ; B003BA:411769	; [ 0 0 ] ; B003BE:+	; [ 0 0 7 ] ; B003C2:16	; [ 0 0 ] ; B003C6:*>>	; [ 0 0 8 ] ; B003CA:;	; [ 0 ] ;---------ANA;---------GEN; $7fff; OPTN ANDand rax,32767; $4000; OPTN -sub rax,16384; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 4876210add rbp,8mov [rbp],raxmov rax,4876210; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 2699161; OPTN -sub rax,2699161; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 411769; OPTN +add rax,411769; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; ;ret;--------------------------; :cos  |1001092|e  ;  .  | calls:1 niv:1 len:11 ( a -- b )w56:;---------OPT; B003CE:$8000	; [ 0 ] ; B003D2:+	; [ 0 0 ] ; B003D6:$8000	; [ 0 ] ; B003DA:nand?	; [ 0 1 ] ; B003DE:(	; [ 0 ] ; B003E2:sinp	; [ 0 ] ; B003E6:;	; [ 0 ] ; B003EA:)	; [ 0 ] ; B003EE:sinp	; [ 0 ] ; B003F2:NEG	; [ 0 ] ; B003F6:;	; [ 0 ] ;---------ANA;---------GEN; $8000; OPTN +add rax,32768; $8000; OPTN nand?test rax,32768jnz _o0; (; sinpjmp w55; ;; )_o0:; sinpcall w55; NEGneg rax; ;ret;--------------------------; :sin  |1001092|e  ;  .  | calls:1 niv:1 len:11 ( a -- b )w57:;---------OPT; B003FA:$4000	; [ 0 ] ; B003FE:+	; [ 0 0 ] ; B00402:$8000	; [ 0 ] ; B00406:nand?	; [ 0 1 ] ; B0040A:(	; [ 0 ] ; B0040E:sinp	; [ 0 ] ; B00412:;	; [ 0 ] ; B00416:)	; [ 0 ] ; B0041A:sinp	; [ 0 ] ; B0041E:NEG	; [ 0 ] ; B00422:;	; [ 0 ] ;---------ANA;---------GEN; $4000; OPTN +add rax,16384; $8000; OPTN nand?test rax,32768jnz _o1; (; sinpjmp w55; ;; )_o1:; sinpcall w55; NEGneg rax; ;ret;--------------------------; :iatan2p  |1090|l  ;  .  | calls:1 niv:0 len:24 ( ab -- cdef )w5E:;---------OPT; B0055E:+?	; [ 1 0 ] ; B00562:(	; [ 1 0 ] ; B00566:2DUP	; [ 1 0 ] ; B0056A:+	; [ 1 0 1 0 ] ; B0056E:>R	; [ 1 0 1 ] ; B00572:SWAP	; [ 1 0 ] ; B00576:-	; [ 0 1 ] ; B0057A:>R	; [ 0 ] ; B0057E:0.125	; [ ] ; B00582:0.125	; [ 0 ] ; B00586:R>	; [ 0 1 ] ; B0058A:R>	; [ 0 1 1 ] ; B0058E:;	; [ 0 1 1 1 ] ; B00592:)	; [ 0 1 1 1 ] ; B00596:2DUP	; [ 1 0 ] ; B0059A:-	; [ 1 0 1 0 ] ; B0059E:>R	; [ 1 0 1 ] ; B005A2:+	; [ 1 0 ] ; B005A6:>R	; [ 1 ] ; B005AA:0.375	; [ ] ; B005AE:0.125	; [ 2 ] ; B005B2:R>	; [ 2 3 ] ; B005B6:R>	; [ 2 3 3 ] ; B005BA:;	; [ 2 3 3 3 ] ;---------ANA;---------GEN; +?or rax,raxjs _o2; (; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 0.125add rbp,8mov [rbp],raxmov rax,8192; 0.125add rbp,8mov [rbp],raxmov rax,8192; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; ;ret; )_o2:; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 0.375add rbp,8mov [rbp],raxmov rax,24576; 0.125add rbp,8mov [rbp],raxmov rax,8192; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; ;ret;--------------------------; :iatan2  |1002090|l  ;  .  | calls:2 niv:1 len:11 ( ab -- c )w5F:;---------OPT; B005BE:iatan2p	; [ 1 0 ] ; B005C2:0?	; [ 3 2 1 0 ] ; B005C6:(	; [ 3 2 1 0 ] ; B005CA:NIP	; [ 3 2 1 0 ] ; B005CE:NIP	; [ 3 2 0 ] ; B005D2:NIP	; [ 3 0 ] ; B005D6:;	; [ 0 ] ; B005DA:)	; [ 0 ] ; B005DE:*/	; [ 3 2 1 0 ] ; B005E2:-	; [ 3 2 ] ; B005E6:;	; [ 3 ] ;---------ANA;---------GEN; iatan2pcall w5E; 0?or rax,raxjnz _o3; (; NIPsub rbp,8; NIPsub rbp,8; NIPsub rbp,8; ;ret; )_o3:; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :atan2  |2001092|e  ;  .  | calls:1 niv:2 len:12 ( ab -- c )w60:;---------OPT; B005EA:SWAP	; [ 1 0 ] ; B005EE:-?	; [ 0 1 ] ; B005F2:(	; [ 0 1 ] ; B005F6:NEG	; [ 0 1 ] ; B005FA:SWAP	; [ 0 1 ] ; B005FE:iatan2	; [ 1 0 ] ; B00602:NEG	; [ 0 ] ; B00606:;	; [ 0 ] ; B0060A:)	; [ 0 ] ; B0060E:SWAP	; [ 0 1 ] ; B00612:iatan2	; [ 1 0 ] ; B00616:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; -?or rax,raxjns _o4; (; NEGneg rax; SWAPxchg rax,[rbp]; iatan2call w5F; NEGneg rax; ;ret; )_o4:; SWAPxchg rax,[rbp]; iatan2jmp w5F; ;;--------------------------; :sq  |1090|l  ;  .  | calls:1 niv:0 len:13 ( abc -- de )w6A:;---------OPT; B007DE:PICK2	; [ 2 1 0 ] ; B007E2:<=?	; [ 2 1 0 2 ] ; B007E6:(	; [ 2 1 0 ] ; B007EA:SWAP	; [ 2 1 0 ] ; B007EE:1	; [ 2 0 1 ] ; B007F2:+	; [ 2 0 1 0 ] ; B007F6:>R	; [ 2 0 1 ] ; B007FA:-	; [ 2 0 ] ; B007FE:R>	; [ 2 ] ; B00802:;	; [ 2 2 ] ; B00806:)	; [ 2 2 ] ; B0080A:DROP	; [ 2 1 0 ] ; B0080E:;	; [ 2 1 ] ;---------ANA;---------GEN; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; <=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjg _o5; (; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; ;ret; )_o5:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sqrt.  |1001092|e  ;  .  | calls:1 niv:1 len:44 ( a -- b )w6B:;---------OPT; B00812:1	; [ 0 ] ; B00816:<?	; [ 0 0 ] ; B0081A:(	; [ 0 ] ; B0081E:DROP	; [ 0 ] ; B00822:0	; [ ] ; B00826:;	; [ 1 ] ; B0082A:)	; [ 1 ] ; B0082E:0	; [ 0 ] ; B00832:0	; [ 0 2 ] ; B00836:ROT	; [ 0 2 3 ] ; B0083A:24	; [ 2 3 0 ] ; B0083E:(	; [ 2 3 0 4 ] ; B00842:1?	; [ 2 3 0 4 ] ; B00846:1	; [ 2 3 0 4 ] ; B0084A:-	; [ 2 3 0 4 5 ] ; B0084E:>R	; [ 2 3 0 4 ] ; B00852:DUP	; [ 2 3 0 ] ; B00856:30	; [ 2 3 0 0 ] ; B0085A:>>	; [ 2 3 0 0 6 ] ; B0085E:$3	; [ 2 3 0 0 ] ; B00862:AND	; [ 2 3 0 0 7 ] ; B00866:ROT	; [ 2 3 0 0 ] ; B0086A:2	; [ 2 0 0 3 ] ; B0086E:<<	; [ 2 0 0 3 8 ] ; B00872:OR	; [ 2 0 0 3 ] ; B00876:SWAP	; [ 2 0 0 ] ; B0087A:2	; [ 2 0 0 ] ; B0087E:<<	; [ 2 0 0 9 ] ; B00882:SWAP	; [ 2 0 0 ] ; B00886:ROT	; [ 2 0 0 ] ; B0088A:1	; [ 0 0 2 ] ; B0088E:<<	; [ 0 0 2 A ] ; B00892:DUP	; [ 0 0 2 ] ; B00896:1	; [ 0 0 2 2 ] ; B0089A:<<	; [ 0 0 2 2 B ] ; B0089E:1	; [ 0 0 2 2 ] ; B008A2:+	; [ 0 0 2 2 C ] ; B008A6:sq	; [ 0 0 2 2 ] ; B008AA:SWAP	; [ 0 1 0 ] ; B008AE:ROT	; [ 0 0 1 ] ; B008B2:R>	; [ 0 1 0 ] ; B008B6:)	; [ 0 1 0 0 ] ; B008BA:3DROP	; [ 2 3 0 4 ] ; B008BE:;	; [ 2 ] ;---------ANA;---------GEN; 1; OPTN <?cmp rax,1jge _o6; (; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o6:; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 24add rbp,8mov [rbp],raxmov rax,24; (_i7:; 1?or rax,raxjz _o7;; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 30; OPTN >>sar rax,30; $3; OPTN ANDand rax,3; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 2; OPTN <<shl rax,2; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; 1; OPTN +add rax,1; sqcall w6A; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; R>add rbp,8mov [rbp],raxpop rax; )jmp _i7_o7:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :SDLinit  |1001482|e     . I| calls:1 niv:1 len:40 ( abc --  )w19D:;---------OPT; B02512:2DUP	; [ 2 1 0 ] ; B02516:*	; [ 2 1 0 1 0 ] ; B0251A:'sizebuffer	; [ 2 1 0 1 ] ; B0251E:!	; [ 2 1 0 1 19B ] ; B02522:'sh	; [ 2 1 0 ] ; B02526:!	; [ 2 1 0 199 ] ; B0252A:'sw	; [ 2 1 ] ; B0252E:!	; [ 2 1 198 ] ; B02532:$3231	; [ 2 ] ; B02536:SDL_Init	; [ 2 0 ] ; B022A2:sys-SDL_Init	; [ 2 0 ] ; B022A6:SYS1	; [ 2 0 141 ] ; B022AA:DROP	; [ 2 0 ] ; B0253A:$1FFF0000	; [ 2 ] ; B0253E:$1FFF0000	; [ 2 1 ] ; B02542:sw	; [ 2 1 2 ] ; B02546:sh	; [ 2 1 2 198 ] ; B0254A:0	; [ 2 1 2 198 199 ] ; B0254E:SDL_CreateWindow	; [ 2 1 2 198 199 3 ] ; B022CE:sys-SDL_CreateWindow	; [ 2 1 2 198 199 3 ] ; B022D2:SYS6	; [ 2 1 2 198 199 3 144 ] ; B02552:DUP	; [ 2 ] ; B02556:'SDL_windows	; [ 2 2 ] ; B0255A:!	; [ 2 2 195 ] ; B0255E:SDL_GetWindowSurface	; [ 2 ] ; B022EA:sys-SDL_GetWindowSurface	; [ 2 ] ; B022EE:SYS1	; [ 2 146 ] ; B02562:DUP	; [ 2 ] ; B02566:'SDL_screen	; [ 2 2 ] ; B0256A:!	; [ 2 2 196 ] ; B0256E:24	; [ 2 ] ; B02572:+	; [ 2 4 ] ; B02576:D@+	; [ 2 ] ; B0257A:'pitch	; [ 2 2 ] ; B0257E:!	; [ 2 2 19A ] ; B02582:4	; [ 2 ] ; B02586:+	; [ 2 5 ] ; B0258A:@	; [ 2 ] ; B0258E:'vframe	; [ 2 ] ; B02592:!	; [ 2 19C ] ; B02596:SDL_windows	; [ ] ; B0259A:-1	; [ 195 ] ; B0259E:0	; [ 195 6 ] ; B025A2:SDL_CreateRenderer	; [ 195 6 7 ] ; B02326:sys-SDL_CreateRenderer	; [ 195 6 7 ] ; B0232A:SYS3	; [ 195 6 7 14A ] ; B025A6:'SDLrenderer	; [ 195 ] ; B025AA:!	; [ 195 197 ] ; B025AE:;	; [ ] ;---------ANA;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; *imul rax,[rbp]sub rbp,8; 'sizebuffer; OPTAV !mov qword[w19B],raxmov rax,[rbp]sub rbp,8; 'sh; OPTAV !mov qword[w199],raxmov rax,[rbp]sub rbp,8; 'sw; OPTAV !mov qword[w198],raxmov rax,[rbp]sub rbp,8; $3231add rbp,8mov [rbp],raxmov rax,12849; sys-SDL_Initadd rbp,8mov [rbp],raxmov rax,qword[w141]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; swadd rbp,8mov [rbp],raxmov rax,qword[w198]; shadd rbp,8mov [rbp],raxmov rax,qword[w199]; 0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateWindowadd rbp,8mov [rbp],raxmov rax,qword[w144]; SYS6PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rdx,[rbp]mov [rsp+$28],rdxmov rcx,[rbp-1*8]mov [rsp+$20],rcxmov r9,[rbp-2*8]mov r8,[rbp-3*8]mov rdx,[rbp-4*8]mov rcx,[rbp-5*8]call raxsub rbp,8*6add RSP,$30POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_windows; OPTAV !mov qword[w195],raxmov rax,[rbp]sub rbp,8; sys-SDL_GetWindowSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w146]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_screen; OPTAV !mov qword[w196],raxmov rax,[rbp]sub rbp,8; 24; OPTN +add rax,24; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'pitch; OPTAV !mov qword[w19A],raxmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; @mov rax,qword[rax]; 'vframe; OPTAV !mov qword[w19C],raxmov rax,[rbp]sub rbp,8; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w195]; -1add rbp,8mov [rbp],raxmov rax,-1; 0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateRendereradd rbp,8mov [rbp],raxmov rax,qword[w14A]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxsub rbp,8*3add RSP,$20POP RSP; 'SDLrenderer; OPTAV !mov qword[w197],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLupdate  |1001482|e     . I| calls:1 niv:1 len:103 (  --  )w1A8:;---------OPT; B02666:0	; [ ] ; B0266A:'SDLkey	; [ 0 ] ; B0266E:!	; [ 0 1A3 ] ; B02672:0	; [ ] ; B02676:'SDLkeychar	; [ 1 ] ; B0267A:!	; [ 1 1A4 ] ; B0267E:10	; [ ] ; B02682:SDL_Delay	; [ 2 ] ; B02472:sys-SDL_Delay	; [ 2 ] ; B02476:SYS1	; [ 2 15F ] ; B0247A:DROP	; [ 2 ] ; B02686:(	; [ ] ; B0268A:'SDLevent	; [ ] ; B0268E:SDL_PollEvent	; [ 1A2 ] ; B02482:sys-SDL_PollEvent	; [ 1A2 ] ; B02486:SYS1	; [ 1A2 160 ] ; B02692:1?	; [ 1A2 ] ; B02696:DROP	; [ 1A2 ] ; B0269A:'SDLevent	; [ ] ; B0269E:D@	; [ 1A2 ] ; B026A2:$300	; [ 1A2 ] ; B026A6:=?	; [ 1A2 3 ] ; B026AA:(	; [ 1A2 ] ; B026AE:'SDLevent	; [ 1A2 ] ; B026B2:20	; [ 1A2 1A2 ] ; B026B6:+	; [ 1A2 1A2 4 ] ; B026BA:D@	; [ 1A2 1A2 ] ; B026BE:DUP	; [ 1A2 1A2 ] ; B026C2:$ffff	; [ 1A2 1A2 1A2 ] ; B026C6:AND	; [ 1A2 1A2 1A2 5 ] ; B026CA:SWAP	; [ 1A2 1A2 1A2 ] ; B026CE:16	; [ 1A2 1A2 1A2 ] ; B026D2:>>	; [ 1A2 1A2 1A2 6 ] ; B026D6:OR	; [ 1A2 1A2 1A2 ] ; B026DA:'SDLkey	; [ 1A2 1A2 ] ; B026DE:!	; [ 1A2 1A2 1A3 ] ; B026E2:)	; [ 1A2 ] ; B026E6:$301	; [ 1A2 ] ; B026EA:=?	; [ 1A2 7 ] ; B026EE:(	; [ 1A2 ] ; B026F2:'SDLevent	; [ 1A2 ] ; B026F6:20	; [ 1A2 1A2 ] ; B026FA:+	; [ 1A2 1A2 8 ] ; B026FE:D@	; [ 1A2 1A2 ] ; B02702:DUP	; [ 1A2 1A2 ] ; B02706:$ffff	; [ 1A2 1A2 1A2 ] ; B0270A:AND	; [ 1A2 1A2 1A2 9 ] ; B0270E:SWAP	; [ 1A2 1A2 1A2 ] ; B02712:16	; [ 1A2 1A2 1A2 ] ; B02716:>>	; [ 1A2 1A2 1A2 A ] ; B0271A:OR	; [ 1A2 1A2 1A2 ] ; B0271E:$1000	; [ 1A2 1A2 ] ; B02722:OR	; [ 1A2 1A2 B ] ; B02726:'SDLkey	; [ 1A2 1A2 ] ; B0272A:!	; [ 1A2 1A2 1A3 ] ; B0272E:)	; [ 1A2 ] ; B02732:$303	; [ 1A2 ] ; B02736:=?	; [ 1A2 C ] ; B0273A:(	; [ 1A2 ] ; B0273E:'SDLevent	; [ 1A2 ] ; B02742:12	; [ 1A2 1A2 ] ; B02746:+	; [ 1A2 1A2 D ] ; B0274A:C@	; [ 1A2 1A2 ] ; B0274E:'SDLkeychar	; [ 1A2 1A2 ] ; B02752:!	; [ 1A2 1A2 1A4 ] ; B02756:)	; [ 1A2 ] ; B0275A:$400	; [ 1A2 ] ; B0275E:=?	; [ 1A2 E ] ; B02762:(	; [ 1A2 ] ; B02766:'SDLevent	; [ 1A2 ] ; B0276A:20	; [ 1A2 1A2 ] ; B0276E:+	; [ 1A2 1A2 F ] ; B02772:D@+	; [ 1A2 1A2 ] ; B02776:'SDLx	; [ 1A2 1A2 1A2 ] ; B0277A:!	; [ 1A2 1A2 1A2 1A5 ] ; B0277E:D@	; [ 1A2 1A2 ] ; B02782:'SDLy	; [ 1A2 1A2 ] ; B02786:!	; [ 1A2 1A2 1A6 ] ; B0278A:)	; [ 1A2 ] ; B0278E:$401	; [ 1A2 ] ; B02792:=?	; [ 1A2 10 ] ; B02796:(	; [ 1A2 ] ; B0279A:'SDLevent	; [ 1A2 ] ; B0279E:16	; [ 1A2 1A2 ] ; B027A2:+	; [ 1A2 1A2 11 ] ; B027A6:C@	; [ 1A2 1A2 ] ; B027AA:SDLb	; [ 1A2 1A2 ] ; B027AE:OR	; [ 1A2 1A2 1A7 ] ; B027B2:'SDLb	; [ 1A2 1A2 ] ; B027B6:!	; [ 1A2 1A2 1A7 ] ; B027BA:)	; [ 1A2 ] ; B027BE:$402	; [ 1A2 ] ; B027C2:=?	; [ 1A2 12 ] ; B027C6:(	; [ 1A2 ] ; B027CA:'SDLevent	; [ 1A2 ] ; B027CE:16	; [ 1A2 1A2 ] ; B027D2:+	; [ 1A2 1A2 13 ] ; B027D6:C@	; [ 1A2 1A2 ] ; B027DA:NOT	; [ 1A2 1A2 ] ; B027DE:SDLb	; [ 1A2 1A2 ] ; B027E2:AND	; [ 1A2 1A2 1A7 ] ; B027E6:'SDLb	; [ 1A2 1A2 ] ; B027EA:!	; [ 1A2 1A2 1A7 ] ; B027EE:)	; [ 1A2 ] ; B027F2:DROP	; [ 1A2 ] ; B027F6:)	; [ ] ; B027FA:DROP	; [ 1A2 ] ; B027FE:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkey; OPTAV !mov qword[w1A3],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkeychar; OPTAV !mov qword[w1A4],raxmov rax,[rbp]sub rbp,8; 10add rbp,8mov [rbp],raxmov rax,10; sys-SDL_Delayadd rbp,8mov [rbp],raxmov rax,qword[w15F]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; (_i8:; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w1A2; sys-SDL_PollEventadd rbp,8mov [rbp],raxmov rax,qword[w160]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 1?or rax,raxjz _o8;; DROPmov rax,[rbp]sub rbp,8; 'SDLevent; OPTAV D@add rbp,8mov [rbp],raxmovsxd rax,dword [w1A2]; $300; OPTN =?cmp rax,768jne _o9; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w1A2; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; 'SDLkey; OPTAV !mov qword[w1A3],raxmov rax,[rbp]sub rbp,8; )_o9:; $301; OPTN =?cmp rax,769jne _oA; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w1A2; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; $1000; OPTN ORor rax,4096; 'SDLkey; OPTAV !mov qword[w1A3],raxmov rax,[rbp]sub rbp,8; )_oA:; $303; OPTN =?cmp rax,771jne _oB; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w1A2; 12; OPTN +add rax,12; C@movsx rax,byte [rax]; 'SDLkeychar; OPTAV !mov qword[w1A4],raxmov rax,[rbp]sub rbp,8; )_oB:; $400; OPTN =?cmp rax,1024jne _oC; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w1A2; 20; OPTN +add rax,20; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'SDLx; OPTAV !mov qword[w1A5],raxmov rax,[rbp]sub rbp,8; D@movsxd rax,dword [rax]; 'SDLy; OPTAV !mov qword[w1A6],raxmov rax,[rbp]sub rbp,8; )_oC:; $401; OPTN =?cmp rax,1025jne _oD; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w1A2; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; SDLb; OPTV ORor rax,qword[w1A7]; 'SDLb; OPTAV !mov qword[w1A7],raxmov rax,[rbp]sub rbp,8; )_oD:; $402; OPTN =?cmp rax,1026jne _oE; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w1A2; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; NOTnot rax; SDLb; OPTV ANDand rax,qword[w1A7]; 'SDLb; OPTAV !mov qword[w1A7],raxmov rax,[rbp]sub rbp,8; )_oE:; DROPmov rax,[rbp]sub rbp,8; )jmp _i8_o8:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLshow  |1001082|e     .  | calls:1 niv:1 len:16 ( a --  )w1AC:;---------OPT; B0285E:0	; [ 0 ] ; B02862:'.exit	; [ 0 0 ] ; B02866:!	; [ 0 0 1AB ] ; B0286A:(	; [ 0 ] ; B0286E:.exit	; [ 0 ] ; B02872:0?	; [ 0 1AB ] ; B02876:DROP	; [ 0 1AB ] ; B0287A:SDLupdate	; [ 0 ] ; B0287E:DUP	; [ 0 ] ; B02882:EX	; [ 0 0 ] ; B02886:)	; [ 0 0 ] ; B0288A:2DROP	; [ 0 1AB ] ; B0288E:0	; [ ] ; B02892:'.exit	; [ 1 ] ; B02896:!	; [ 1 1AB ] ; B0289A:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w1AB],raxmov rax,[rbp]sub rbp,8; (_iF:; .exitadd rbp,8mov [rbp],raxmov rax,qword[w1AB]; 0?or rax,raxjnz _oF; DROPmov rax,[rbp]sub rbp,8; SDLupdatecall w1A8; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )jmp _iF_oF:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w1AB],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLcolor  |1001482|e     . I| calls:1 niv:1 len:19 ( a --  )w1AE:;---------OPT; B028AE:SDLrenderer	; [ 0 ] ; B028B2:SWAP	; [ 0 197 ] ; B028B6:DUP	; [ 197 0 ] ; B028BA:16	; [ 197 0 0 ] ; B028BE:>>	; [ 197 0 0 0 ] ; B028C2:$ff	; [ 197 0 0 ] ; B028C6:AND	; [ 197 0 0 1 ] ; B028CA:SWAP	; [ 197 0 0 ] ; B028CE:DUP	; [ 197 0 0 ] ; B028D2:8	; [ 197 0 0 0 ] ; B028D6:>>	; [ 197 0 0 0 2 ] ; B028DA:$ff	; [ 197 0 0 0 ] ; B028DE:AND	; [ 197 0 0 0 3 ] ; B028E2:SWAP	; [ 197 0 0 0 ] ; B028E6:$ff	; [ 197 0 0 0 ] ; B028EA:AND	; [ 197 0 0 0 4 ] ; B028EE:$ff	; [ 197 0 0 0 ] ; B028F2:SDL_SetRenderDrawColor	; [ 197 0 0 0 5 ] ; B023D2:sys-SDL_SetRenderDrawColor	; [ 197 0 0 0 5 ] ; B023D6:SYS5	; [ 197 0 0 0 5 153 ] ; B023DA:DROP	; [ 197 ] ; B028F6:;	; [ ] ;---------ANA;---------GEN; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w197]; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; $ff; OPTN ANDand rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; sys-SDL_SetRenderDrawColoradd rbp,8mov [rbp],raxmov rax,qword[w153]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$30mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxsub rbp,8*5add RSP,$30POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLimages  |1001482|e     . I| calls:1 niv:1 len:15 ( abcde --  )w1B6:;---------OPT; B029BA:>R	; [ 4 3 2 1 0 ] ; B029BE:SWAP	; [ 4 3 2 1 ] ; B029C2:2SWAP	; [ 4 3 1 2 ] ; B029C6:SWAP	; [ 1 2 4 3 ] ; B029CA:'rec	; [ 1 2 3 4 ] ; B029CE:D!+	; [ 1 2 3 4 1B1 ] ; B029D2:D!+	; [ 1 2 3 4 ] ; B029D6:D!+	; [ 1 2 3 ] ; B029DA:D!	; [ 1 2 ] ; B029DE:SDLrenderer	; [ ] ; B029E2:R>	; [ 197 ] ; B029E6:0	; [ 197 197 ] ; B029EA:'rec	; [ 197 197 0 ] ; B029EE:SDL_RenderCopy	; [ 197 197 0 1B1 ] ; B02396:sys-SDL_RenderCopy	; [ 197 197 0 1B1 ] ; B0239A:SYS4	; [ 197 197 0 1B1 150 ] ; B0239E:DROP	; [ 197 ] ; B029F2:;	; [ ] ;---------ANA;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SWAPxchg rax,[rbp]; 'rec; OPTAV D!+mov rcx,w1B1mov dword[rcx],eaxadd rcx,4mov rax,rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w197]; R>add rbp,8mov [rbp],raxpop rax; 0add rbp,8mov [rbp],raxxor rax,rax; 'recadd rbp,8mov [rbp],raxmov rax,w1B1; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w150]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxsub rbp,8*4add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |2001080|l     .  | calls:1 niv:2 len:205 (  --  )w1CC:;---------OPT; B0320E:	; [ ] ; B03212:"SDL2.DLL"	; [ ] ; B03216:LOADLIB	; [ 2B47 ] ; B0321A:DUP	; [ 2B47 ] ; B0321E:"SDL_Init"	; [ 2B47 2B47 ] ; B03222:GETPROC	; [ 2B47 2B47 2B5F ] ; B03226:'sys-SDL_Init	; [ 2B47 2B47 ] ; B0322A:!	; [ 2B47 2B47 141 ] ; B0322E:DUP	; [ 2B47 ] ; B03232:"SDL_Quit"	; [ 2B47 2B47 ] ; B03236:GETPROC	; [ 2B47 2B47 2B87 ] ; B0323A:'sys-SDL_Quit	; [ 2B47 2B47 ] ; B0323E:!	; [ 2B47 2B47 142 ] ; B03242:DUP	; [ 2B47 ] ; B03246:"SDL_GetNumVideoDisplays"	; [ 2B47 2B47 ] ; B0324A:GETPROC	; [ 2B47 2B47 2BAF ] ; B0324E:'sys-SDL_GetNumVideoDisplays	; [ 2B47 2B47 ] ; B03252:!	; [ 2B47 2B47 143 ] ; B03256:DUP	; [ 2B47 ] ; B0325A:"SDL_CreateWindow"	; [ 2B47 2B47 ] ; B0325E:GETPROC	; [ 2B47 2B47 2BF5 ] ; B03262:'sys-SDL_CreateWindow	; [ 2B47 2B47 ] ; B03266:!	; [ 2B47 2B47 144 ] ; B0326A:DUP	; [ 2B47 ] ; B0326E:"SDL_SetWindowFullscreen"	; [ 2B47 2B47 ] ; B03272:GETPROC	; [ 2B47 2B47 2C2D ] ; B03276:'sys-SDL_SetWindowFullscreen	; [ 2B47 2B47 ] ; B0327A:!	; [ 2B47 2B47 145 ] ; B0327E:DUP	; [ 2B47 ] ; B03282:"SDL_GetWindowSurface"	; [ 2B47 2B47 ] ; B03286:GETPROC	; [ 2B47 2B47 2C73 ] ; B0328A:'sys-SDL_GetWindowSurface	; [ 2B47 2B47 ] ; B0328E:!	; [ 2B47 2B47 146 ] ; B03292:DUP	; [ 2B47 ] ; B03296:"SDL_ShowCursor"	; [ 2B47 2B47 ] ; B0329A:GETPROC	; [ 2B47 2B47 2CB3 ] ; B0329E:'sys-SDL_ShowCursor	; [ 2B47 2B47 ] ; B032A2:!	; [ 2B47 2B47 147 ] ; B032A6:DUP	; [ 2B47 ] ; B032AA:"SDL_UpdateWindowSurface"	; [ 2B47 2B47 ] ; B032AE:GETPROC	; [ 2B47 2B47 2CE7 ] ; B032B2:'sys-SDL_UpdateWindowSurface	; [ 2B47 2B47 ] ; B032B6:!	; [ 2B47 2B47 148 ] ; B032BA:DUP	; [ 2B47 ] ; B032BE:"SDL_DestroyWindow"	; [ 2B47 2B47 ] ; B032C2:GETPROC	; [ 2B47 2B47 2D2D ] ; B032C6:'sys-SDL_DestroyWindow	; [ 2B47 2B47 ] ; B032CA:!	; [ 2B47 2B47 149 ] ; B032CE:DUP	; [ 2B47 ] ; B032D2:"SDL_CreateRenderer"	; [ 2B47 2B47 ] ; B032D6:GETPROC	; [ 2B47 2B47 2D67 ] ; B032DA:'sys-SDL_CreateRenderer	; [ 2B47 2B47 ] ; B032DE:!	; [ 2B47 2B47 14A ] ; B032E2:DUP	; [ 2B47 ] ; B032E6:"SDL_CreateTexture"	; [ 2B47 2B47 ] ; B032EA:GETPROC	; [ 2B47 2B47 2DA3 ] ; B032EE:'sys-SDL_CreateTexture	; [ 2B47 2B47 ] ; B032F2:!	; [ 2B47 2B47 14B ] ; B032F6:DUP	; [ 2B47 ] ; B032FA:"SDL_DestroyTexture"	; [ 2B47 2B47 ] ; B032FE:GETPROC	; [ 2B47 2B47 2DDD ] ; B03302:'sys-SDL_DestroyTexture	; [ 2B47 2B47 ] ; B03306:!	; [ 2B47 2B47 14C ] ; B0330A:DUP	; [ 2B47 ] ; B0330E:"SDL_DestroyRenderer"	; [ 2B47 2B47 ] ; B03312:GETPROC	; [ 2B47 2B47 2E19 ] ; B03316:'sys-SDL_DestroyRenderer	; [ 2B47 2B47 ] ; B0331A:!	; [ 2B47 2B47 14D ] ; B0331E:DUP	; [ 2B47 ] ; B03322:"SDL_UpdateTexture"	; [ 2B47 2B47 ] ; B03326:GETPROC	; [ 2B47 2B47 2E57 ] ; B0332A:'sys-SDL_UpdateTexture	; [ 2B47 2B47 ] ; B0332E:!	; [ 2B47 2B47 14E ] ; B03332:DUP	; [ 2B47 ] ; B03336:"SDL_RenderClear"	; [ 2B47 2B47 ] ; B0333A:GETPROC	; [ 2B47 2B47 2E91 ] ; B0333E:'sys-SDL_RenderClear	; [ 2B47 2B47 ] ; B03342:!	; [ 2B47 2B47 14F ] ; B03346:DUP	; [ 2B47 ] ; B0334A:"SDL_RenderCopy"	; [ 2B47 2B47 ] ; B0334E:GETPROC	; [ 2B47 2B47 2EC7 ] ; B03352:'sys-SDL_RenderCopy	; [ 2B47 2B47 ] ; B03356:!	; [ 2B47 2B47 150 ] ; B0335A:DUP	; [ 2B47 ] ; B0335E:"SDL_RenderCopyEx"	; [ 2B47 2B47 ] ; B03362:GETPROC	; [ 2B47 2B47 2EFB ] ; B03366:'sys-SDL_RenderCopyEx	; [ 2B47 2B47 ] ; B0336A:!	; [ 2B47 2B47 151 ] ; B0336E:DUP	; [ 2B47 ] ; B03372:"SDL_RenderPresent"	; [ 2B47 2B47 ] ; B03376:GETPROC	; [ 2B47 2B47 2F33 ] ; B0337A:'sys-SDL_RenderPresent	; [ 2B47 2B47 ] ; B0337E:!	; [ 2B47 2B47 152 ] ; B03382:DUP	; [ 2B47 ] ; B03386:"SDL_CreateTextureFromSurface"	; [ 2B47 2B47 ] ; B0338A:GETPROC	; [ 2B47 2B47 2F6D ] ; B0338E:'sys-SDL_CreateTextureFromSurface	; [ 2B47 2B47 ] ; B03392:!	; [ 2B47 2B47 154 ] ; B03396:DUP	; [ 2B47 ] ; B0339A:"SDL_QueryTexture"	; [ 2B47 2B47 ] ; B0339E:GETPROC	; [ 2B47 2B47 2FBD ] ; B033A2:'sys-SDL_QueryTexture	; [ 2B47 2B47 ] ; B033A6:!	; [ 2B47 2B47 155 ] ; B033AA:DUP	; [ 2B47 ] ; B033AE:"SDL_SetTextureColorMod"	; [ 2B47 2B47 ] ; B033B2:GETPROC	; [ 2B47 2B47 2FF5 ] ; B033B6:'sys-SDL_SetTextureColorMod	; [ 2B47 2B47 ] ; B033BA:!	; [ 2B47 2B47 16A ] ; B033BE:DUP	; [ 2B47 ] ; B033C2:"SDL_SetRenderDrawColor"	; [ 2B47 2B47 ] ; B033C6:GETPROC	; [ 2B47 2B47 3039 ] ; B033CA:'sys-SDL_SetRenderDrawColor	; [ 2B47 2B47 ] ; B033CE:!	; [ 2B47 2B47 153 ] ; B033D2:DUP	; [ 2B47 ] ; B033D6:"SDL_FreeSurface"	; [ 2B47 2B47 ] ; B033DA:GETPROC	; [ 2B47 2B47 307D ] ; B033DE:'sys-SDL_FreeSurface	; [ 2B47 2B47 ] ; B033E2:!	; [ 2B47 2B47 156 ] ; B033E6:DUP	; [ 2B47 ] ; B033EA:"SDL_LockTexture"	; [ 2B47 2B47 ] ; B033EE:GETPROC	; [ 2B47 2B47 30B3 ] ; B033F2:'sys-SDL_LockTexture	; [ 2B47 2B47 ] ; B033F6:!	; [ 2B47 2B47 157 ] ; B033FA:DUP	; [ 2B47 ] ; B033FE:"SDL_UnlockTexture"	; [ 2B47 2B47 ] ; B03402:GETPROC	; [ 2B47 2B47 30E9 ] ; B03406:'sys-SDL_UnlockTexture	; [ 2B47 2B47 ] ; B0340A:!	; [ 2B47 2B47 158 ] ; B0340E:DUP	; [ 2B47 ] ; B03412:"SDL_RenderSetLogicalSize"	; [ 2B47 2B47 ] ; B03416:GETPROC	; [ 2B47 2B47 3123 ] ; B0341A:'sys-SDL_RenderSetLogicalSize	; [ 2B47 2B47 ] ; B0341E:!	; [ 2B47 2B47 159 ] ; B03422:DUP	; [ 2B47 ] ; B03426:"SDL_SetRenderDrawBlendMode"	; [ 2B47 2B47 ] ; B0342A:GETPROC	; [ 2B47 2B47 316B ] ; B0342E:'sys-SDL_SetRenderDrawBlendMode	; [ 2B47 2B47 ] ; B03432:!	; [ 2B47 2B47 15A ] ; B03436:DUP	; [ 2B47 ] ; B0343A:"SDL_RenderDrawPoint"	; [ 2B47 2B47 ] ; B0343E:GETPROC	; [ 2B47 2B47 31B7 ] ; B03442:'sys-SDL_RenderDrawPoint	; [ 2B47 2B47 ] ; B03446:!	; [ 2B47 2B47 15B ] ; B0344A:DUP	; [ 2B47 ] ; B0344E:"SDL_RenderDrawLine"	; [ 2B47 2B47 ] ; B03452:GETPROC	; [ 2B47 2B47 31F5 ] ; B03456:'sys-SDL_RenderDrawLine	; [ 2B47 2B47 ] ; B0345A:!	; [ 2B47 2B47 15C ] ; B0345E:DUP	; [ 2B47 ] ; B03462:"SDL_RenderDrawRect"	; [ 2B47 2B47 ] ; B03466:GETPROC	; [ 2B47 2B47 3231 ] ; B0346A:'sys-SDL_RenderDrawRect	; [ 2B47 2B47 ] ; B0346E:!	; [ 2B47 2B47 15D ] ; B03472:DUP	; [ 2B47 ] ; B03476:"SDL_RenderFillRect"	; [ 2B47 2B47 ] ; B0347A:GETPROC	; [ 2B47 2B47 326D ] ; B0347E:'sys-SDL_RenderFillRect	; [ 2B47 2B47 ] ; B03482:!	; [ 2B47 2B47 15E ] ; B03486:DUP	; [ 2B47 ] ; B0348A:"SDL_Delay"	; [ 2B47 2B47 ] ; B0348E:GETPROC	; [ 2B47 2B47 32AA ] ; B03492:'sys-SDL_Delay	; [ 2B47 2B47 ] ; B03496:!	; [ 2B47 2B47 15F ] ; B0349A:DUP	; [ 2B47 ] ; B0349E:"SDL_PollEvent"	; [ 2B47 2B47 ] ; B034A2:GETPROC	; [ 2B47 2B47 32D4 ] ; B034A6:'sys-SDL_PollEvent	; [ 2B47 2B47 ] ; B034AA:!	; [ 2B47 2B47 160 ] ; B034AE:DUP	; [ 2B47 ] ; B034B2:"SDL_GetTicks"	; [ 2B47 2B47 ] ; B034B6:GETPROC	; [ 2B47 2B47 3306 ] ; B034BA:'sys-SDL_GetTicks	; [ 2B47 2B47 ] ; B034BE:!	; [ 2B47 2B47 161 ] ; B034C2:DUP	; [ 2B47 ] ; B034C6:"SDL_RWFromFile"	; [ 2B47 2B47 ] ; B034CA:GETPROC	; [ 2B47 2B47 3338 ] ; B034CE:'sys-SDL_RWFromFile	; [ 2B47 2B47 ] ; B034D2:!	; [ 2B47 2B47 164 ] ; B034D6:DUP	; [ 2B47 ] ; B034DA:"SDL_GL_SetAttribute"	; [ 2B47 2B47 ] ; B034DE:GETPROC	; [ 2B47 2B47 336E ] ; B034E2:'sys-SDL_GL_SetAttribute	; [ 2B47 2B47 ] ; B034E6:!	; [ 2B47 2B47 165 ] ; B034EA:DUP	; [ 2B47 ] ; B034EE:"SDL_GL_CreateContext"	; [ 2B47 2B47 ] ; B034F2:GETPROC	; [ 2B47 2B47 33AC ] ; B034F6:'sys-SDL_GL_CreateContext	; [ 2B47 2B47 ] ; B034FA:!	; [ 2B47 2B47 166 ] ; B034FE:DUP	; [ 2B47 ] ; B03502:"SDL_GL_DeleteContext"	; [ 2B47 2B47 ] ; B03506:GETPROC	; [ 2B47 2B47 33EC ] ; B0350A:'sys-SDL_GL_DeleteContext	; [ 2B47 2B47 ] ; B0350E:!	; [ 2B47 2B47 167 ] ; B03512:DUP	; [ 2B47 ] ; B03516:"SDL_GL_SetSwapInterval"	; [ 2B47 2B47 ] ; B0351A:GETPROC	; [ 2B47 2B47 342C ] ; B0351E:'sys-SDL_GL_SetSwapInterval	; [ 2B47 2B47 ] ; B03522:!	; [ 2B47 2B47 168 ] ; B03526:DUP	; [ 2B47 ] ; B0352A:"SDL_GL_SwapWindow"	; [ 2B47 2B47 ] ; B0352E:GETPROC	; [ 2B47 2B47 3470 ] ; B03532:'sys-SDL_GL_SwapWindow	; [ 2B47 2B47 ] ; B03536:!	; [ 2B47 2B47 169 ] ; B0353A:DROP	; [ 2B47 ] ; B0353E:;	; [ ] ;---------ANA;---------GEN; call w47; "SDL2.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str2B47; DUPadd rbp,8mov [rbp],rax; "SDL_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B5F; 'sys-SDL_Init; OPTAV !mov qword[w141],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B87; 'sys-SDL_Quit; OPTAV !mov qword[w142],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetNumVideoDisplays"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2BAF; 'sys-SDL_GetNumVideoDisplays; OPTAV !mov qword[w143],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2BF5; 'sys-SDL_CreateWindow; OPTAV !mov qword[w144],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetWindowFullscreen"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C2D; 'sys-SDL_SetWindowFullscreen; OPTAV !mov qword[w145],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C73; 'sys-SDL_GetWindowSurface; OPTAV !mov qword[w146],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ShowCursor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2CB3; 'sys-SDL_ShowCursor; OPTAV !mov qword[w147],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2CE7; 'sys-SDL_UpdateWindowSurface; OPTAV !mov qword[w148],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D2D; 'sys-SDL_DestroyWindow; OPTAV !mov qword[w149],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D67; 'sys-SDL_CreateRenderer; OPTAV !mov qword[w14A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2DA3; 'sys-SDL_CreateTexture; OPTAV !mov qword[w14B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2DDD; 'sys-SDL_DestroyTexture; OPTAV !mov qword[w14C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E19; 'sys-SDL_DestroyRenderer; OPTAV !mov qword[w14D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E57; 'sys-SDL_UpdateTexture; OPTAV !mov qword[w14E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderClear"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E91; 'sys-SDL_RenderClear; OPTAV !mov qword[w14F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopy"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2EC7; 'sys-SDL_RenderCopy; OPTAV !mov qword[w150],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopyEx"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2EFB; 'sys-SDL_RenderCopyEx; OPTAV !mov qword[w151],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderPresent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2F33; 'sys-SDL_RenderPresent; OPTAV !mov qword[w152],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTextureFromSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2F6D; 'sys-SDL_CreateTextureFromSurface; OPTAV !mov qword[w154],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_QueryTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2FBD; 'sys-SDL_QueryTexture; OPTAV !mov qword[w155],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureColorMod"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2FF5; 'sys-SDL_SetTextureColorMod; OPTAV !mov qword[w16A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawColor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3039; 'sys-SDL_SetRenderDrawColor; OPTAV !mov qword[w153],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_FreeSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str307D; 'sys-SDL_FreeSurface; OPTAV !mov qword[w156],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str30B3; 'sys-SDL_LockTexture; OPTAV !mov qword[w157],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str30E9; 'sys-SDL_UnlockTexture; OPTAV !mov qword[w158],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderSetLogicalSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3123; 'sys-SDL_RenderSetLogicalSize; OPTAV !mov qword[w159],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str316B; 'sys-SDL_SetRenderDrawBlendMode; OPTAV !mov qword[w15A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawPoint"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str31B7; 'sys-SDL_RenderDrawPoint; OPTAV !mov qword[w15B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawLine"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str31F5; 'sys-SDL_RenderDrawLine; OPTAV !mov qword[w15C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3231; 'sys-SDL_RenderDrawRect; OPTAV !mov qword[w15D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderFillRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str326D; 'sys-SDL_RenderFillRect; OPTAV !mov qword[w15E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Delay"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str32AA; 'sys-SDL_Delay; OPTAV !mov qword[w15F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_PollEvent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str32D4; 'sys-SDL_PollEvent; OPTAV !mov qword[w160],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetTicks"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3306; 'sys-SDL_GetTicks; OPTAV !mov qword[w161],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RWFromFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3338; 'sys-SDL_RWFromFile; OPTAV !mov qword[w164],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetAttribute"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str336E; 'sys-SDL_GL_SetAttribute; OPTAV !mov qword[w165],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_CreateContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str33AC; 'sys-SDL_GL_CreateContext; OPTAV !mov qword[w166],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_DeleteContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str33EC; 'sys-SDL_GL_DeleteContext; OPTAV !mov qword[w167],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetSwapInterval"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str342C; 'sys-SDL_GL_SetSwapInterval; OPTAV !mov qword[w168],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SwapWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str3470; 'sys-SDL_GL_SwapWindow; OPTAV !mov qword[w169],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :loadimg  |1001492|e  ;  . I| calls:1 niv:1 len:11 ( a -- b )w1D1:;---------OPT; B0355E:IMG_Load	; [ 0 ] ; B03542:sys-IMG_Load	; [ 0 ] ; B03546:SYS1	; [ 0 1CE ] ; B03562:0?	; [ 0 ] ; B03566:(	; [ 0 ] ; B0356A:;	; [ 0 ] ; B0356E:)	; [ 0 ] ; B03572:SDLrenderer	; [ 0 ] ; B03576:OVER	; [ 0 197 ] ; B0357A:SDL_CreateTextureFromSurface	; [ 0 197 0 ] ; B023C6:sys-SDL_CreateTextureFromSurface	; [ 0 197 0 ] ; B023CA:SYS2	; [ 0 197 0 154 ] ; B0357E:SWAP	; [ 0 197 ] ; B03582:SDL_FreeSurface	; [ 197 0 ] ; B023E2:sys-SDL_FreeSurface	; [ 197 0 ] ; B023E6:SYS1	; [ 197 0 156 ] ; B023EA:DROP	; [ 197 0 ] ; B03586:;	; [ 197 ] ;---------ANA;---------GEN; sys-IMG_Loadadd rbp,8mov [rbp],raxmov rax,qword[w1CE]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; 0?or rax,raxjnz _o10; (; ;ret; )_o10:; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w197]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; sys-SDL_CreateTextureFromSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w154]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxsub rbp,8*2add RSP,$20POP RSP; SWAPxchg rax,[rbp]; sys-SDL_FreeSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w156]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |1001480|l     . I| calls:1 niv:1 len:17 (  --  )w1D3:;---------OPT; B035A6:	; [ ] ; B035AA:"SDL2_image.DLL"	; [ ] ; B035AE:LOADLIB	; [ 7C52 ] ; B035B2:DUP	; [ 7C52 ] ; B035B6:"IMG_Load"	; [ 7C52 7C52 ] ; B035BA:GETPROC	; [ 7C52 7C52 7C70 ] ; B035BE:'sys-IMG_Load	; [ 7C52 7C52 ] ; B035C2:!	; [ 7C52 7C52 1CE ] ; B035C6:DUP	; [ 7C52 ] ; B035CA:"IMG_Init"	; [ 7C52 7C52 ] ; B035CE:GETPROC	; [ 7C52 7C52 7C98 ] ; B035D2:'sys-IMG_Init	; [ 7C52 7C52 ] ; B035D6:!	; [ 7C52 7C52 1CD ] ; B035DA:DROP	; [ 7C52 ] ; B035DE:$3	; [ ] ; B035E2:IMG_Init	; [ 0 ] ; B0354E:sys-IMG_Init	; [ 0 ] ; B03552:SYS1	; [ 0 1CD ] ; B03556:DROP	; [ 0 ] ; B035E6:;	; [ ] ;---------ANA;---------GEN; call w1CC; "SDL2_image.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str7C52; DUPadd rbp,8mov [rbp],rax; "IMG_Load"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7C70; 'sys-IMG_Load; OPTAV !mov qword[w1CE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "IMG_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7C98; 'sys-IMG_Init; OPTAV !mov qword[w1CD],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; $3add rbp,8mov [rbp],raxmov rax,3; sys-IMG_Initadd rbp,8mov [rbp],raxmov rax,qword[w1CD]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :rand  |1082|e     .  | calls:1 niv:0 len:9 (  -- a )w1D7:;---------OPT; B03642:seed	; [ ] ; B03646:$da942042e4dd58b5	; [ 1D6 ] ; B0364A:*	; [ 1D6 0 ] ; B0364E:1	; [ 1D6 ] ; B03652:+	; [ 1D6 1 ] ; B03656:DUP	; [ 1D6 ] ; B0365A:'seed	; [ 1D6 1D6 ] ; B0365E:!	; [ 1D6 1D6 1D6 ] ; B03662:;	; [ 1D6 ] ;---------ANA;---------GEN; seedadd rbp,8mov [rbp],raxmov rax,qword[w1D6]; $da942042e4dd58b5; OPTN *mov rbx,-2696494805208442699imul rax,rbx; 1; OPTN +add rax,1; DUPadd rbp,8mov [rbp],rax; 'seed; OPTAV !mov qword[w1D6],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :mpush  |1082|e     .  | calls:1 niv:0 len:11 (  --  )w1E7:;---------OPT; B037CE:mat>	; [ ] ; B037D2:DUP	; [ 1E5 ] ; B037D6:128	; [ 1E5 1E5 ] ; B037DA:+	; [ 1E5 1E5 0 ] ; B037DE:DUP	; [ 1E5 1E5 ] ; B037E2:'mat>	; [ 1E5 1E5 1E5 ] ; B037E6:!	; [ 1E5 1E5 1E5 1E5 ] ; B037EA:SWAP	; [ 1E5 1E5 ] ; B037EE:16	; [ 1E5 1E5 ] ; B037F2:MOVE	; [ 1E5 1E5 1 ] ; B037F6:;	; [ ] ;---------ANA;---------GEN; mat>add rbp,8mov [rbp],raxmov rax,qword[w1E5]; DUPadd rbp,8mov [rbp],rax; 128; OPTN +add rax,128; DUPadd rbp,8mov [rbp],rax; 'mat>; OPTAV !mov qword[w1E5],raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :mtrans  |1001482|e     . I| calls:1 niv:1 len:94 ( abc --  )w1EA:;---------OPT; B03832:mat>	; [ 2 1 0 ] ; B03836:>A	; [ 2 1 0 1E5 ] ; B0383A:PICK2	; [ 2 1 0 ] ; B0383E:A>	; [ 2 1 0 2 ] ; B03842:96	; [ 2 1 0 2 2 ] ; B03846:+	; [ 2 1 0 2 2 0 ] ; B0384A:@	; [ 2 1 0 2 2 ] ; B0384E:*.	; [ 2 1 0 2 2 ] ; B0030A:16	; [ 2 1 0 2 2 ] ; B0030E:*>>	; [ 2 1 0 2 2 1 ] ; B00312:DUP	; [ 2 1 0 2 ] ; B00316:63	; [ 2 1 0 2 2 ] ; B0031A:>>	; [ 2 1 0 2 2 2 ] ; B0031E:-	; [ 2 1 0 2 2 ] ; B03852:A@	; [ 2 1 0 2 ] ; B03856:+	; [ 2 1 0 2 2 ] ; B0385A:A!+	; [ 2 1 0 2 ] ; B0385E:PICK2	; [ 2 1 0 ] ; B03862:A>	; [ 2 1 0 2 ] ; B03866:96	; [ 2 1 0 2 2 ] ; B0386A:+	; [ 2 1 0 2 2 3 ] ; B0386E:@	; [ 2 1 0 2 2 ] ; B03872:*.	; [ 2 1 0 2 2 ] ; B0030A:16	; [ 2 1 0 2 2 ] ; B0030E:*>>	; [ 2 1 0 2 2 4 ] ; B00312:DUP	; [ 2 1 0 2 ] ; B00316:63	; [ 2 1 0 2 2 ] ; B0031A:>>	; [ 2 1 0 2 2 5 ] ; B0031E:-	; [ 2 1 0 2 2 ] ; B03876:A@	; [ 2 1 0 2 ] ; B0387A:+	; [ 2 1 0 2 2 ] ; B0387E:A!+	; [ 2 1 0 2 ] ; B03882:PICK2	; [ 2 1 0 ] ; B03886:A>	; [ 2 1 0 2 ] ; B0388A:96	; [ 2 1 0 2 2 ] ; B0388E:+	; [ 2 1 0 2 2 6 ] ; B03892:@	; [ 2 1 0 2 2 ] ; B03896:*.	; [ 2 1 0 2 2 ] ; B0030A:16	; [ 2 1 0 2 2 ] ; B0030E:*>>	; [ 2 1 0 2 2 7 ] ; B00312:DUP	; [ 2 1 0 2 ] ; B00316:63	; [ 2 1 0 2 2 ] ; B0031A:>>	; [ 2 1 0 2 2 8 ] ; B0031E:-	; [ 2 1 0 2 2 ] ; B0389A:A@	; [ 2 1 0 2 ] ; B0389E:+	; [ 2 1 0 2 2 ] ; B038A2:A!+	; [ 2 1 0 2 ] ; B038A6:ROT	; [ 2 1 0 ] ; B038AA:A@	; [ 1 0 2 ] ; B038AE:+	; [ 1 0 2 2 ] ; B038B2:A!+	; [ 1 0 2 ] ; B038B6:OVER	; [ 1 0 ] ; B038BA:A>	; [ 1 0 1 ] ; B038BE:64	; [ 1 0 1 1 ] ; B038C2:+	; [ 1 0 1 1 9 ] ; B038C6:@	; [ 1 0 1 1 ] ; B038CA:*.	; [ 1 0 1 1 ] ; B0030A:16	; [ 1 0 1 1 ] ; B0030E:*>>	; [ 1 0 1 1 A ] ; B00312:DUP	; [ 1 0 1 ] ; B00316:63	; [ 1 0 1 1 ] ; B0031A:>>	; [ 1 0 1 1 B ] ; B0031E:-	; [ 1 0 1 1 ] ; B038CE:A@	; [ 1 0 1 ] ; B038D2:+	; [ 1 0 1 1 ] ; B038D6:A!+	; [ 1 0 1 ] ; B038DA:OVER	; [ 1 0 ] ; B038DE:A>	; [ 1 0 1 ] ; B038E2:64	; [ 1 0 1 1 ] ; B038E6:+	; [ 1 0 1 1 C ] ; B038EA:@	; [ 1 0 1 1 ] ; B038EE:*.	; [ 1 0 1 1 ] ; B0030A:16	; [ 1 0 1 1 ] ; B0030E:*>>	; [ 1 0 1 1 D ] ; B00312:DUP	; [ 1 0 1 ] ; B00316:63	; [ 1 0 1 1 ] ; B0031A:>>	; [ 1 0 1 1 E ] ; B0031E:-	; [ 1 0 1 1 ] ; B038F2:A@	; [ 1 0 1 ] ; B038F6:+	; [ 1 0 1 1 ] ; B038FA:A!+	; [ 1 0 1 ] ; B038FE:OVER	; [ 1 0 ] ; B03902:A>	; [ 1 0 1 ] ; B03906:64	; [ 1 0 1 1 ] ; B0390A:+	; [ 1 0 1 1 F ] ; B0390E:@	; [ 1 0 1 1 ] ; B03912:*.	; [ 1 0 1 1 ] ; B0030A:16	; [ 1 0 1 1 ] ; B0030E:*>>	; [ 1 0 1 1 10 ] ; B00312:DUP	; [ 1 0 1 ] ; B00316:63	; [ 1 0 1 1 ] ; B0031A:>>	; [ 1 0 1 1 11 ] ; B0031E:-	; [ 1 0 1 1 ] ; B03916:A@	; [ 1 0 1 ] ; B0391A:+	; [ 1 0 1 1 ] ; B0391E:A!+	; [ 1 0 1 ] ; B03922:SWAP	; [ 1 0 ] ; B03926:A@	; [ 0 1 ] ; B0392A:+	; [ 0 1 1 ] ; B0392E:A!+	; [ 0 1 ] ; B03932:DUP	; [ 0 ] ; B03936:A>	; [ 0 0 ] ; B0393A:32	; [ 0 0 0 ] ; B0393E:+	; [ 0 0 0 12 ] ; B03942:@	; [ 0 0 0 ] ; B03946:*.	; [ 0 0 0 ] ; B0030A:16	; [ 0 0 0 ] ; B0030E:*>>	; [ 0 0 0 13 ] ; B00312:DUP	; [ 0 0 ] ; B00316:63	; [ 0 0 0 ] ; B0031A:>>	; [ 0 0 0 14 ] ; B0031E:-	; [ 0 0 0 ] ; B0394A:A@	; [ 0 0 ] ; B0394E:+	; [ 0 0 0 ] ; B03952:A!+	; [ 0 0 ] ; B03956:DUP	; [ 0 ] ; B0395A:A>	; [ 0 0 ] ; B0395E:32	; [ 0 0 0 ] ; B03962:+	; [ 0 0 0 15 ] ; B03966:@	; [ 0 0 0 ] ; B0396A:*.	; [ 0 0 0 ] ; B0030A:16	; [ 0 0 0 ] ; B0030E:*>>	; [ 0 0 0 16 ] ; B00312:DUP	; [ 0 0 ] ; B00316:63	; [ 0 0 0 ] ; B0031A:>>	; [ 0 0 0 17 ] ; B0031E:-	; [ 0 0 0 ] ; B0396E:A@	; [ 0 0 ] ; B03972:+	; [ 0 0 0 ] ; B03976:A!+	; [ 0 0 ] ; B0397A:DUP	; [ 0 ] ; B0397E:A>	; [ 0 0 ] ; B03982:32	; [ 0 0 0 ] ; B03986:+	; [ 0 0 0 18 ] ; B0398A:@	; [ 0 0 0 ] ; B0398E:*.	; [ 0 0 0 ] ; B0030A:16	; [ 0 0 0 ] ; B0030E:*>>	; [ 0 0 0 19 ] ; B00312:DUP	; [ 0 0 ] ; B00316:63	; [ 0 0 0 ] ; B0031A:>>	; [ 0 0 0 1A ] ; B0031E:-	; [ 0 0 0 ] ; B03992:A@	; [ 0 0 ] ; B03996:+	; [ 0 0 0 ] ; B0399A:A!+	; [ 0 0 ] ; B0399E:A>	; [ 0 ] ; B039A2:+!	; [ 0 0 ] ; B039A6:;	; [ ] ;---------ANA;---------GEN; mat>; OPTV >Amov r14,qword[w1E5]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r14; 96; OPTN +add rax,96; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r14; 96; OPTN +add rax,96; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r14; 96; OPTN +add rax,96; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r14; 64; OPTN +add rax,64; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r14; 32; OPTN +add rax,32; @mov rax,qword[rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r14; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :mtransi  |1001482|e     . I| calls:1 niv:1 len:45 ( abc --  )w1EB:;---------OPT; B039AA:mat>	; [ 2 1 0 ] ; B039AE:>A	; [ 2 1 0 1E5 ] ; B039B2:PICK2	; [ 2 1 0 ] ; B039B6:A@+	; [ 2 1 0 2 ] ; B039BA:*.	; [ 2 1 0 2 2 ] ; B0030A:16	; [ 2 1 0 2 2 ] ; B0030E:*>>	; [ 2 1 0 2 2 0 ] ; B00312:DUP	; [ 2 1 0 2 ] ; B00316:63	; [ 2 1 0 2 2 ] ; B0031A:>>	; [ 2 1 0 2 2 1 ] ; B0031E:-	; [ 2 1 0 2 2 ] ; B039BE:PICK2	; [ 2 1 0 2 ] ; B039C2:A@+	; [ 2 1 0 2 1 ] ; B039C6:*.	; [ 2 1 0 2 1 1 ] ; B0030A:16	; [ 2 1 0 2 1 1 ] ; B0030E:*>>	; [ 2 1 0 2 1 1 2 ] ; B00312:DUP	; [ 2 1 0 2 1 ] ; B00316:63	; [ 2 1 0 2 1 1 ] ; B0031A:>>	; [ 2 1 0 2 1 1 3 ] ; B0031E:-	; [ 2 1 0 2 1 1 ] ; B039CA:+	; [ 2 1 0 2 1 ] ; B039CE:OVER	; [ 2 1 0 2 ] ; B039D2:A@+	; [ 2 1 0 2 0 ] ; B039D6:*.	; [ 2 1 0 2 0 0 ] ; B0030A:16	; [ 2 1 0 2 0 0 ] ; B0030E:*>>	; [ 2 1 0 2 0 0 4 ] ; B00312:DUP	; [ 2 1 0 2 0 ] ; B00316:63	; [ 2 1 0 2 0 0 ] ; B0031A:>>	; [ 2 1 0 2 0 0 5 ] ; B0031E:-	; [ 2 1 0 2 0 0 ] ; B039DA:+	; [ 2 1 0 2 0 ] ; B039DE:A@	; [ 2 1 0 2 ] ; B039E2:+	; [ 2 1 0 2 2 ] ; B039E6:A!+	; [ 2 1 0 2 ] ; B039EA:PICK2	; [ 2 1 0 ] ; B039EE:A@+	; [ 2 1 0 2 ] ; B039F2:*.	; [ 2 1 0 2 2 ] ; B0030A:16	; [ 2 1 0 2 2 ] ; B0030E:*>>	; [ 2 1 0 2 2 6 ] ; B00312:DUP	; [ 2 1 0 2 ] ; B00316:63	; [ 2 1 0 2 2 ] ; B0031A:>>	; [ 2 1 0 2 2 7 ] ; B0031E:-	; [ 2 1 0 2 2 ] ; B039F6:PICK2	; [ 2 1 0 2 ] ; B039FA:A@+	; [ 2 1 0 2 1 ] ; B039FE:*.	; [ 2 1 0 2 1 1 ] ; B0030A:16	; [ 2 1 0 2 1 1 ] ; B0030E:*>>	; [ 2 1 0 2 1 1 8 ] ; B00312:DUP	; [ 2 1 0 2 1 ] ; B00316:63	; [ 2 1 0 2 1 1 ] ; B0031A:>>	; [ 2 1 0 2 1 1 9 ] ; B0031E:-	; [ 2 1 0 2 1 1 ] ; B03A02:+	; [ 2 1 0 2 1 ] ; B03A06:OVER	; [ 2 1 0 2 ] ; B03A0A:A@+	; [ 2 1 0 2 0 ] ; B03A0E:*.	; [ 2 1 0 2 0 0 ] ; B0030A:16	; [ 2 1 0 2 0 0 ] ; B0030E:*>>	; [ 2 1 0 2 0 0 A ] ; B00312:DUP	; [ 2 1 0 2 0 ] ; B00316:63	; [ 2 1 0 2 0 0 ] ; B0031A:>>	; [ 2 1 0 2 0 0 B ] ; B0031E:-	; [ 2 1 0 2 0 0 ] ; B03A12:+	; [ 2 1 0 2 0 ] ; B03A16:A@	; [ 2 1 0 2 ] ; B03A1A:+	; [ 2 1 0 2 2 ] ; B03A1E:A!+	; [ 2 1 0 2 ] ; B03A22:ROT	; [ 2 1 0 ] ; B03A26:A@+	; [ 1 0 2 ] ; B03A2A:*.	; [ 1 0 2 2 ] ; B0030A:16	; [ 1 0 2 2 ] ; B0030E:*>>	; [ 1 0 2 2 C ] ; B00312:DUP	; [ 1 0 2 ] ; B00316:63	; [ 1 0 2 2 ] ; B0031A:>>	; [ 1 0 2 2 D ] ; B0031E:-	; [ 1 0 2 2 ] ; B03A2E:ROT	; [ 1 0 2 ] ; B03A32:A@+	; [ 0 2 1 ] ; B03A36:*.	; [ 0 2 1 1 ] ; B0030A:16	; [ 0 2 1 1 ] ; B0030E:*>>	; [ 0 2 1 1 E ] ; B00312:DUP	; [ 0 2 1 ] ; B00316:63	; [ 0 2 1 1 ] ; B0031A:>>	; [ 0 2 1 1 F ] ; B0031E:-	; [ 0 2 1 1 ] ; B03A3A:+	; [ 0 2 1 ] ; B03A3E:SWAP	; [ 0 2 ] ; B03A42:A@+	; [ 2 0 ] ; B03A46:*.	; [ 2 0 0 ] ; B0030A:16	; [ 2 0 0 ] ; B0030E:*>>	; [ 2 0 0 10 ] ; B00312:DUP	; [ 2 0 ] ; B00316:63	; [ 2 0 0 ] ; B0031A:>>	; [ 2 0 0 11 ] ; B0031E:-	; [ 2 0 0 ] ; B03A4A:+	; [ 2 0 ] ; B03A4E:A@	; [ 2 ] ; B03A52:+	; [ 2 2 ] ; B03A56:A!	; [ 2 ] ; B03A5A:;	; [ ] ;---------ANA;---------GEN; mat>; OPTV >Amov r14,qword[w1E5]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :transform  |1001482|e     . I| calls:1 niv:1 len:48 ( abc -- def )w1F6:;---------OPT; B04806:mat>	; [ 2 1 0 ] ; B0480A:>A	; [ 2 1 0 1E5 ] ; B0480E:PICK2	; [ 2 1 0 ] ; B04812:A@+	; [ 2 1 0 2 ] ; B04816:*.	; [ 2 1 0 2 2 ] ; B0030A:16	; [ 2 1 0 2 2 ] ; B0030E:*>>	; [ 2 1 0 2 2 0 ] ; B00312:DUP	; [ 2 1 0 2 ] ; B00316:63	; [ 2 1 0 2 2 ] ; B0031A:>>	; [ 2 1 0 2 2 1 ] ; B0031E:-	; [ 2 1 0 2 2 ] ; B0481A:PICK2	; [ 2 1 0 2 ] ; B0481E:A@+	; [ 2 1 0 2 1 ] ; B04822:*.	; [ 2 1 0 2 1 1 ] ; B0030A:16	; [ 2 1 0 2 1 1 ] ; B0030E:*>>	; [ 2 1 0 2 1 1 2 ] ; B00312:DUP	; [ 2 1 0 2 1 ] ; B00316:63	; [ 2 1 0 2 1 1 ] ; B0031A:>>	; [ 2 1 0 2 1 1 3 ] ; B0031E:-	; [ 2 1 0 2 1 1 ] ; B04826:+	; [ 2 1 0 2 1 ] ; B0482A:OVER	; [ 2 1 0 2 ] ; B0482E:A@+	; [ 2 1 0 2 0 ] ; B04832:*.	; [ 2 1 0 2 0 0 ] ; B0030A:16	; [ 2 1 0 2 0 0 ] ; B0030E:*>>	; [ 2 1 0 2 0 0 4 ] ; B00312:DUP	; [ 2 1 0 2 0 ] ; B00316:63	; [ 2 1 0 2 0 0 ] ; B0031A:>>	; [ 2 1 0 2 0 0 5 ] ; B0031E:-	; [ 2 1 0 2 0 0 ] ; B04836:+	; [ 2 1 0 2 0 ] ; B0483A:A@+	; [ 2 1 0 2 ] ; B0483E:+	; [ 2 1 0 2 2 ] ; B04842:>R	; [ 2 1 0 2 ] ; B04846:PICK2	; [ 2 1 0 ] ; B0484A:A@+	; [ 2 1 0 2 ] ; B0484E:*.	; [ 2 1 0 2 2 ] ; B0030A:16	; [ 2 1 0 2 2 ] ; B0030E:*>>	; [ 2 1 0 2 2 6 ] ; B00312:DUP	; [ 2 1 0 2 ] ; B00316:63	; [ 2 1 0 2 2 ] ; B0031A:>>	; [ 2 1 0 2 2 7 ] ; B0031E:-	; [ 2 1 0 2 2 ] ; B04852:PICK2	; [ 2 1 0 2 ] ; B04856:A@+	; [ 2 1 0 2 1 ] ; B0485A:*.	; [ 2 1 0 2 1 1 ] ; B0030A:16	; [ 2 1 0 2 1 1 ] ; B0030E:*>>	; [ 2 1 0 2 1 1 8 ] ; B00312:DUP	; [ 2 1 0 2 1 ] ; B00316:63	; [ 2 1 0 2 1 1 ] ; B0031A:>>	; [ 2 1 0 2 1 1 9 ] ; B0031E:-	; [ 2 1 0 2 1 1 ] ; B0485E:+	; [ 2 1 0 2 1 ] ; B04862:OVER	; [ 2 1 0 2 ] ; B04866:A@+	; [ 2 1 0 2 0 ] ; B0486A:*.	; [ 2 1 0 2 0 0 ] ; B0030A:16	; [ 2 1 0 2 0 0 ] ; B0030E:*>>	; [ 2 1 0 2 0 0 A ] ; B00312:DUP	; [ 2 1 0 2 0 ] ; B00316:63	; [ 2 1 0 2 0 0 ] ; B0031A:>>	; [ 2 1 0 2 0 0 B ] ; B0031E:-	; [ 2 1 0 2 0 0 ] ; B0486E:+	; [ 2 1 0 2 0 ] ; B04872:A@+	; [ 2 1 0 2 ] ; B04876:+	; [ 2 1 0 2 2 ] ; B0487A:>R	; [ 2 1 0 2 ] ; B0487E:ROT	; [ 2 1 0 ] ; B04882:A@+	; [ 1 0 2 ] ; B04886:*.	; [ 1 0 2 2 ] ; B0030A:16	; [ 1 0 2 2 ] ; B0030E:*>>	; [ 1 0 2 2 C ] ; B00312:DUP	; [ 1 0 2 ] ; B00316:63	; [ 1 0 2 2 ] ; B0031A:>>	; [ 1 0 2 2 D ] ; B0031E:-	; [ 1 0 2 2 ] ; B0488A:ROT	; [ 1 0 2 ] ; B0488E:A@+	; [ 0 2 1 ] ; B04892:*.	; [ 0 2 1 1 ] ; B0030A:16	; [ 0 2 1 1 ] ; B0030E:*>>	; [ 0 2 1 1 E ] ; B00312:DUP	; [ 0 2 1 ] ; B00316:63	; [ 0 2 1 1 ] ; B0031A:>>	; [ 0 2 1 1 F ] ; B0031E:-	; [ 0 2 1 1 ] ; B04896:+	; [ 0 2 1 ] ; B0489A:SWAP	; [ 0 2 ] ; B0489E:A@+	; [ 2 0 ] ; B048A2:*.	; [ 2 0 0 ] ; B0030A:16	; [ 2 0 0 ] ; B0030E:*>>	; [ 2 0 0 10 ] ; B00312:DUP	; [ 2 0 ] ; B00316:63	; [ 2 0 0 ] ; B0031A:>>	; [ 2 0 0 11 ] ; B0031E:-	; [ 2 0 0 ] ; B048A6:+	; [ 2 0 ] ; B048AA:A@	; [ 2 ] ; B048AE:+	; [ 2 2 ] ; B048B2:R>	; [ 2 ] ; B048B6:R>	; [ 2 2 ] ; B048BA:SWAP	; [ 2 2 2 ] ; B048BE:ROT	; [ 2 2 2 ] ; B048C2:;	; [ 2 2 2 ] ;---------ANA;---------GEN; mat>; OPTV >Amov r14,qword[w1E5]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@+add rbp,8mov [rbp],raxmov rax,qword[r14]add r14,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmov rax,qword[r14]; +add rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ;ret;--------------------------; :whmode  |1001482|e     . I| calls:1 niv:1 len:18 ( ab --  )w1FE:;---------OPT; B04ADA:OVER	; [ 1 0 ] ; B04ADE:1	; [ 1 0 1 ] ; B04AE2:>>	; [ 1 0 1 0 ] ; B04AE6:'ox	; [ 1 0 1 ] ; B04AEA:!	; [ 1 0 1 1E1 ] ; B04AEE:DUP	; [ 1 0 ] ; B04AF2:1	; [ 1 0 0 ] ; B04AF6:>>	; [ 1 0 0 1 ] ; B04AFA:'oy	; [ 1 0 0 ] ; B04AFE:!	; [ 1 0 0 1E2 ] ; B04B02:min	; [ 1 0 ] ; B006E6:OVER	; [ 1 0 ] ; B006EA:-	; [ 1 0 1 ] ; B006EE:DUP	; [ 1 0 ] ; B006F2:63	; [ 1 0 0 ] ; B006F6:>>	; [ 1 0 0 2 ] ; B006FA:AND	; [ 1 0 0 ] ; B006FE:+	; [ 1 0 ] ; B04B06:DUP	; [ 1 ] ; B04B0A:'xf	; [ 1 1 ] ; B04B0E:!	; [ 1 1 1DF ] ; B04B12:'yf	; [ 1 ] ; B04B16:!	; [ 1 1E0 ] ; B04B1A:matini	; [ ] ; B037AE:'mats	; [ ] ; B037B2:DUP	; [ 1E4 ] ; B037B6:'mat>	; [ 1E4 1E4 ] ; B037BA:!	; [ 1E4 1E4 1E5 ] ; B037BE:'mati	; [ 1E4 ] ; B037C2:16	; [ 1E4 1E3 ] ; B037C6:MOVE	; [ 1E4 1E3 3 ] ; B04B1E:;	; [ ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 1; OPTN >>sar rax,1; 'ox; OPTAV !mov qword[w1E1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; 'oy; OPTAV !mov qword[w1E2],raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'xf; OPTAV !mov qword[w1DF],raxmov rax,[rbp]sub rbp,8; 'yf; OPTAV !mov qword[w1E0],raxmov rax,[rbp]sub rbp,8; 'matsadd rbp,8mov [rbp],raxmov rax,w1E4; DUPadd rbp,8mov [rbp],rax; 'mat>; OPTAV !mov qword[w1E5],raxmov rax,[rbp]sub rbp,8; 'matiadd rbp,8mov [rbp],raxmov rax,w1E3; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :project3d  |2001092|e  ;  .  | calls:1 niv:2 len:22 ( abc -- de )w208:;---------OPT; B04D22:transform	; [ 2 1 0 ] ; B04D26:0?	; [ 2 1 0 ] ; B04D2A:(	; [ 2 1 0 ] ; B04D2E:3DROP	; [ 2 1 0 ] ; B04D32:ox	; [ ] ; B04D36:oy	; [ 1E1 ] ; B04D3A:;	; [ 1E1 1E2 ] ; B04D3E:)	; [ 1E1 1E2 ] ; B04D42:>R	; [ 2 1 0 ] ; B04D46:yf	; [ 2 1 ] ; B04D4A:R@	; [ 2 1 1E0 ] ; B04D4E:*/	; [ 2 1 1E0 1E0 ] ; B04D52:oy	; [ 2 1 ] ; B04D56:+	; [ 2 1 1E2 ] ; B04D5A:SWAP	; [ 2 1 ] ; B04D5E:xf	; [ 1 2 ] ; B04D62:R>	; [ 1 2 1DF ] ; B04D66:*/	; [ 1 2 1DF 1DF ] ; B04D6A:ox	; [ 1 2 ] ; B04D6E:+	; [ 1 2 1E1 ] ; B04D72:SWAP	; [ 1 2 ] ; B04D76:;	; [ 2 1 ] ;---------ANA;---------GEN; transformcall w1F6; 0?or rax,raxjnz _o11; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; oxadd rbp,8mov [rbp],raxmov rax,qword[w1E1]; oyadd rbp,8mov [rbp],raxmov rax,qword[w1E2]; ;ret; )_o11:; >Rpush raxmov rax,[rbp]sub rbp,8; yfadd rbp,8mov [rbp],raxmov rax,qword[w1E0]; R@add rbp,8mov [rbp],raxmov rax,[rsp]; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; oy; OPTV +add rax,qword[w1E2]; SWAPxchg rax,[rbp]; xfadd rbp,8mov [rbp],raxmov rax,qword[w1DF]; R>add rbp,8mov [rbp],raxpop rax; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; ox; OPTV +add rax,qword[w1E1]; SWAPxchg rax,[rbp]; ;ret;--------------------------; :p.ini  |2082|e     .  | calls:2 niv:0 len:10 ( ab --  )w243:;---------OPT; B0551A:here	; [ 1 0 ] ; B0551E:DUP	; [ 1 0 213 ] ; B05522:ROT	; [ 1 0 213 213 ] ; B05526:!+	; [ 1 213 213 0 ] ; B0552A:!	; [ 1 213 213 ] ; B0552E:7	; [ 1 ] ; B05532:<<	; [ 1 0 ] ; B05536:'here	; [ 1 ] ; B0553A:+!	; [ 1 213 ] ; B0553E:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[w213]; DUPadd rbp,8mov [rbp],rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 7; OPTN <<shl rax,7; 'here; OPTAV +!add [w213],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :delp  |1080|l     .  | calls:1 niv:0 len:15 ( abc -- def )w249:;---------OPT; B055D6:NIP	; [ 2 1 0 ] ; B055DA:OVER	; [ 2 0 ] ; B055DE:@	; [ 2 0 2 ] ; B055E2:128	; [ 2 0 2 ] ; B055E6:-	; [ 2 0 2 0 ] ; B055EA:2DUP	; [ 2 0 2 ] ; B055EE:16	; [ 2 0 2 0 2 ] ; B055F2:MOVE	; [ 2 0 2 0 2 1 ] ; B055F6:DUP	; [ 2 0 2 ] ; B055FA:PICK3	; [ 2 0 2 2 ] ; B055FE:!	; [ 2 0 2 2 2 ] ; B05602:SWAP	; [ 2 0 2 ] ; B05606:128	; [ 2 2 0 ] ; B0560A:-	; [ 2 2 0 2 ] ; B0560E:;	; [ 2 2 0 ] ;---------ANA;---------GEN; NIPsub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; @mov rax,qword[rax]; 128; OPTN -sub rax,128; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmov rsi,qword[rbp]mov rdi,qword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 128; OPTN -sub rax,128; ;ret;--------------------------; :p.draw  |1001082|e     .  | calls:1 niv:1 len:20 ( a --  )w24A:;---------OPT; B05612:DUP	; [ 0 ] ; B05616:@+	; [ 0 0 ] ; B0561A:SWAP	; [ 0 0 0 ] ; B0561E:@	; [ 0 0 0 ] ; B05622:(	; [ 0 0 0 ] ; B05626:OVER	; [ 0 0 0 ] ; B0562A:<?	; [ 0 0 0 0 ] ; B0562E:DUP	; [ 0 0 0 ] ; B05632:@+	; [ 0 0 0 0 ] ; B05636:EX	; [ 0 0 0 0 0 ] ; B0563A:0?	; [ 0 0 0 0 0 ] ; B0563E:(	; [ 0 0 0 0 0 ] ; B05642:DROP	; [ 0 0 0 0 0 ] ; B05646:delp	; [ 0 0 0 0 ] ; B0564A:)	; [ 0 2 1 0 ] ; B0564E:128	; [ 0 0 0 0 0 ] ; B05652:+	; [ 0 0 0 0 0 0 ] ; B05656:)	; [ 0 0 0 0 0 ] ; B0565A:3DROP	; [ 0 0 0 ] ; B0565E:;	; [ ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @mov rax,qword[rax]; (_i12:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o12; DUPadd rbp,8mov [rbp],rax; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 0?or rax,raxjnz _o13; (; DROPmov rax,[rbp]sub rbp,8; delpcall w249; )_o13:; 128; OPTN +add rax,128; )jmp _i12_o12:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :p.map2  |1001082|e     .  | calls:1 niv:1 len:23 ( ab --  )w24F:;---------OPT; B0572A:@+	; [ 1 0 ] ; B0572E:SWAP	; [ 1 0 0 ] ; B05732:@	; [ 1 0 0 ] ; B05736:(	; [ 1 0 0 ] ; B0573A:OVER	; [ 1 0 0 ] ; B0573E:<?	; [ 1 0 0 0 ] ; B05742:DUP	; [ 1 0 0 ] ; B05746:128	; [ 1 0 0 0 ] ; B0574A:+	; [ 1 0 0 0 0 ] ; B0574E:(	; [ 1 0 0 0 ] ; B05752:PICK2	; [ 1 0 0 0 ] ; B05756:<?	; [ 1 0 0 0 0 ] ; B0575A:PICK3	; [ 1 0 0 0 ] ; B0575E:EX	; [ 1 0 0 0 1 ] ; B05762:128	; [ 1 0 0 0 1 ] ; B05766:+	; [ 1 0 0 0 1 1 ] ; B0576A:)	; [ 1 0 0 0 1 ] ; B0576E:DROP	; [ 1 0 0 0 ] ; B05772:128	; [ 1 0 0 ] ; B05776:+	; [ 1 0 0 2 ] ; B0577A:)	; [ 1 0 0 ] ; B0577E:3DROP	; [ 1 0 0 ] ; B05782:;	; [ ] ;---------ANA;---------GEN; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @mov rax,qword[rax]; (_i14:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o14; DUPadd rbp,8mov [rbp],rax; 128; OPTN +add rax,128; (_i15:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o15; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 128; OPTN +add rax,128; )jmp _i15_o15:; DROPmov rax,[rbp]sub rbp,8; 128; OPTN +add rax,128; )jmp _i14_o14:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :drawball  |2001080|l     .  | calls:1 niv:2 len:15 (  --  )w255:;---------OPT; B057B2:0	; [ ] ; B057B6:0	; [ 0 ] ; B057BA:0	; [ 0 1 ] ; B057BE:project3d	; [ 0 1 2 ] ; B057C2:14	; [ 1 0 ] ; B057C6:-	; [ 1 0 3 ] ; B057CA:SWAP	; [ 1 0 ] ; B057CE:14	; [ 0 1 ] ; B057D2:-	; [ 0 1 4 ] ; B057D6:SWAP	; [ 0 1 ] ; B057DA:28	; [ 1 0 ] ; B057DE:28	; [ 1 0 5 ] ; B057E2:spr_ball	; [ 1 0 5 6 ] ; B057E6:SDLimages	; [ 1 0 5 6 250 ] ; B057EA:;	; [ ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w208; 14; OPTN -sub rax,14; SWAPxchg rax,[rbp]; 14; OPTN -sub rax,14; SWAPxchg rax,[rbp]; 28add rbp,8mov [rbp],raxmov rax,28; 28add rbp,8mov [rbp],raxmov rax,28; spr_balladd rbp,8mov [rbp],raxmov rax,qword[w250]; SDLimagesjmp w1B6; ;;--------------------------; :hitwall  |3080|l     .  | calls:3 niv:0 len:13 ( a --  )w256:;---------OPT; B057EE:B>	; [ 0 ] ; B057F2:8	; [ 0 0 ] ; B057F6:-	; [ 0 0 0 ] ; B057FA:!	; [ 0 0 ] ; B057FE:B>	; [ ] ; B05802:8	; [ 0 ] ; B05806:+	; [ 0 1 ] ; B0580A:DUP	; [ 0 ] ; B0580E:@	; [ 0 0 ] ; B05812:NEG	; [ 0 0 ] ; B05816:SWAP	; [ 0 0 ] ; B0581A:!	; [ 0 0 ] ; B0581E:;	; [ ] ;---------ANA;---------GEN; B>add rbp,8mov [rbp],raxmov rax,r15; 8; OPTN -sub rax,8; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; B>add rbp,8mov [rbp],raxmov rax,r15; 8; OPTN +add rax,8; DUPadd rbp,8mov [rbp],rax; @mov rax,qword[rax]; NEGneg rax; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :bub  |1001484|l'    . I| calls:1 niv:1 len:42 ( a --  )w257:;---------OPT; B05822:>B	; [ 0 ] ; B05826:mpush	; [ ] ; B0582A:B@+	; [ ] ; B0582E:26.0	; [ 0 ] ; B05832:>?	; [ 0 0 ] ; B05836:(	; [ 0 ] ; B0583A:26.0	; [ 0 ] ; B0583E:hitwall	; [ 0 1 ] ; B05842:)	; [ 0 ] ; B05846:-26.0	; [ 0 ] ; B0584A:<?	; [ 0 2 ] ; B0584E:(	; [ 0 ] ; B05852:-26.0	; [ 0 ] ; B05856:hitwall	; [ 0 3 ] ; B0585A:)	; [ 0 ] ; B0585E:B@+	; [ 0 ] ; B05862:-20.0	; [ 0 0 ] ; B05866:<?	; [ 0 0 4 ] ; B0586A:(	; [ 0 0 ] ; B0586E:-20.0	; [ 0 0 ] ; B05872:hitwall	; [ 0 0 5 ] ; B05876:)	; [ 0 0 ] ; B0587A:0	; [ 0 0 ] ; B0587E:mtransi	; [ 0 0 6 ] ; B05882:B@+	; [ ] ; B05886:B>	; [ 0 ] ; B0588A:24	; [ 0 0 ] ; B0588E:-	; [ 0 0 7 ] ; B05892:+!	; [ 0 0 ] ; B05896:B@	; [ ] ; B0589A:0.01	; [ 0 ] ; B0589E:-	; [ 0 8 ] ; B058A2:B>	; [ 0 ] ; B058A6:!	; [ 0 0 ] ; B058AA:B@+	; [ ] ; B058AE:B>	; [ 0 ] ; B058B2:24	; [ 0 0 ] ; B058B6:-	; [ 0 0 9 ] ; B058BA:+!	; [ 0 0 ] ; B058BE:drawball	; [ ] ; B058C2:mpop	; [ ] ; B037FA:mat>	; [ ] ; B037FE:128	; [ 1E5 ] ; B03802:-	; [ 1E5 A ] ; B03806:'mat>	; [ 1E5 ] ; B0380A:!	; [ 1E5 1E5 ] ; B058C6:;	; [ ] ;---------ANA;---------GEN; >Bmov r15,raxmov rax,[rbp]sub rbp,8; mpushcall w1E7; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; 26.0; OPTN >?cmp rax,1703936jle _o16; (; 26.0add rbp,8mov [rbp],raxmov rax,1703936; hitwallcall w256; )_o16:; -26.0; OPTN <?cmp rax,-1703936jge _o17; (; -26.0add rbp,8mov [rbp],raxmov rax,-1703936; hitwallcall w256; )_o17:; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; -20.0; OPTN <?cmp rax,-1310720jge _o18; (; -20.0add rbp,8mov [rbp],raxmov rax,-1310720; hitwallcall w256; )_o18:; 0add rbp,8mov [rbp],raxxor rax,rax; mtransicall w1EB; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; B>add rbp,8mov [rbp],raxmov rax,r15; 24; OPTN -sub rax,24; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; B@add rbp,8mov [rbp],raxmov rax,qword[r15]; 0.01; OPTN -sub rax,655; B>add rbp,8mov [rbp],raxmov rax,r15; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; B@+add rbp,8mov [rbp],raxmov rax,qword[r15]add r15,8; B>add rbp,8mov [rbp],raxmov rax,r15; 24; OPTN -sub rax,24; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; drawballcall w255; mat>add rbp,8mov [rbp],raxmov rax,qword[w1E5]; 128; OPTN -sub rax,128; 'mat>; OPTAV !mov qword[w1E5],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+buble  |3001480|l     . I| calls:1 niv:3 len:13 (  --  )w258:;---------OPT; B058CA:'bub	; [ ] ; B058CE:'bubles	; [ 257 ] ; B058D2:p!+	; [ 257 251 ] ; B0559A:DUP	; [ 257 251 ] ; B0559E:>R	; [ 257 251 251 ] ; B055A2:@	; [ 257 251 ] ; B055A6:!+	; [ 257 251 ] ; B055AA:128	; [ 257 ] ; B055AE:R>	; [ 257 0 ] ; B055B2:+!	; [ 257 0 0 ] ; B058D6:>A	; [ 257 ] ; B058DA:r.8	; [ ] ; B057A6:8.0	; [ ] ; B057AA:randmax	; [ 1 ] ; B03686:rand	; [ 1 ] ; B0368A:1	; [ 1 0 ] ; B0368E:>>>	; [ 1 0 2 ] ; B03692:63	; [ 1 0 ] ; B03696:*>>	; [ 1 0 3 ] ; B058DE:r.8	; [ 1 ] ; B057A6:8.0	; [ 1 ] ; B057AA:randmax	; [ 1 4 ] ; B03686:rand	; [ 1 4 ] ; B0368A:1	; [ 1 4 0 ] ; B0368E:>>>	; [ 1 4 0 5 ] ; B03692:63	; [ 1 4 0 ] ; B03696:*>>	; [ 1 4 0 6 ] ; B058E2:A!+	; [ 1 4 ] ; B058E6:A!+	; [ 1 ] ; B058EA:r.1	; [ ] ; B0579A:1.0	; [ ] ; B0579E:randmax	; [ 7 ] ; B03686:rand	; [ 7 ] ; B0368A:1	; [ 7 0 ] ; B0368E:>>>	; [ 7 0 8 ] ; B03692:63	; [ 7 0 ] ; B03696:*>>	; [ 7 0 9 ] ; B058EE:r.1	; [ 7 ] ; B0579A:1.0	; [ 7 ] ; B0579E:randmax	; [ 7 A ] ; B03686:rand	; [ 7 A ] ; B0368A:1	; [ 7 A 0 ] ; B0368E:>>>	; [ 7 A 0 B ] ; B03692:63	; [ 7 A 0 ] ; B03696:*>>	; [ 7 A 0 C ] ; B058F2:A!+	; [ 7 A ] ; B058F6:A!	; [ 7 ] ; B058FA:;	; [ ] ;---------ANA;---------GEN; 'bubadd rbp,8mov [rbp],raxmov rax,w257; 'bublesadd rbp,8mov [rbp],raxmov rax,w251; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; !+mov rcx,[rbp]mov [rax],rcxadd rax,8sub rbp,8; 128add rbp,8mov [rbp],raxmov rax,128; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; >Amov r14,raxmov rax,[rbp]sub rbp,8; 8.0add rbp,8mov [rbp],raxmov rax,524288; randcall w1D7; 1; OPTN >>>shr rax,1; 63; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,63; 8.0add rbp,8mov [rbp],raxmov rax,524288; randcall w1D7; 1; OPTN >>>shr rax,1; 63; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,63; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; 1.0add rbp,8mov [rbp],raxmov rax,65536; randcall w1D7; 1; OPTN >>>shr rax,1; 63; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,63; 1.0add rbp,8mov [rbp],raxmov rax,65536; randcall w1D7; 1; OPTN >>>shr rax,1; 63; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,63; A!+mov qword[r14],raxadd r14,8mov rax,[rbp]sub rbp,8; A!mov qword[r14],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :collision  |1001494|l' ;  . I| calls:1 niv:1 len:101 ( ab -- cd )w259:;---------OPT; B058FE:OVER	; [ 1 0 ] ; B05902:8	; [ 1 0 1 ] ; B05906:+	; [ 1 0 1 0 ] ; B0590A:@	; [ 1 0 1 ] ; B0590E:OVER	; [ 1 0 1 ] ; B05912:8	; [ 1 0 1 0 ] ; B05916:+	; [ 1 0 1 0 1 ] ; B0591A:@	; [ 1 0 1 0 ] ; B0591E:-	; [ 1 0 1 0 ] ; B05922:DUP	; [ 1 0 1 ] ; B05926:*.	; [ 1 0 1 1 ] ; B0030A:16	; [ 1 0 1 1 ] ; B0030E:*>>	; [ 1 0 1 1 2 ] ; B00312:DUP	; [ 1 0 1 ] ; B00316:63	; [ 1 0 1 1 ] ; B0031A:>>	; [ 1 0 1 1 3 ] ; B0031E:-	; [ 1 0 1 1 ] ; B0592A:PICK2	; [ 1 0 1 ] ; B0592E:16	; [ 1 0 1 1 ] ; B05932:+	; [ 1 0 1 1 4 ] ; B05936:@	; [ 1 0 1 1 ] ; B0593A:PICK2	; [ 1 0 1 1 ] ; B0593E:16	; [ 1 0 1 1 0 ] ; B05942:+	; [ 1 0 1 1 0 5 ] ; B05946:@	; [ 1 0 1 1 0 ] ; B0594A:-	; [ 1 0 1 1 0 ] ; B0594E:DUP	; [ 1 0 1 1 ] ; B05952:*.	; [ 1 0 1 1 1 ] ; B0030A:16	; [ 1 0 1 1 1 ] ; B0030E:*>>	; [ 1 0 1 1 1 6 ] ; B00312:DUP	; [ 1 0 1 1 ] ; B00316:63	; [ 1 0 1 1 1 ] ; B0031A:>>	; [ 1 0 1 1 1 7 ] ; B0031E:-	; [ 1 0 1 1 1 ] ; B05956:+	; [ 1 0 1 1 ] ; B0595A:4.0	; [ 1 0 1 ] ; B0595E:>=?	; [ 1 0 1 8 ] ; B05962:(	; [ 1 0 1 ] ; B05966:DROP	; [ 1 0 1 ] ; B0596A:;	; [ 1 0 ] ; B0596E:)	; [ 1 0 ] ; B05972:sqrt.	; [ 1 0 1 ] ; B05976:2.0	; [ 1 0 0 ] ; B0597A:SWAP	; [ 1 0 0 9 ] ; B0597E:-	; [ 1 0 9 0 ] ; B05982:1	; [ 1 0 9 ] ; B05986:>>	; [ 1 0 9 A ] ; B0598A:>A	; [ 1 0 9 ] ; B0598E:OVER	; [ 1 0 ] ; B05992:8	; [ 1 0 1 ] ; B05996:+	; [ 1 0 1 B ] ; B0599A:@	; [ 1 0 1 ] ; B0599E:OVER	; [ 1 0 1 ] ; B059A2:8	; [ 1 0 1 0 ] ; B059A6:+	; [ 1 0 1 0 C ] ; B059AA:@	; [ 1 0 1 0 ] ; B059AE:-	; [ 1 0 1 0 ] ; B059B2:PICK2	; [ 1 0 1 ] ; B059B6:16	; [ 1 0 1 1 ] ; B059BA:+	; [ 1 0 1 1 D ] ; B059BE:@	; [ 1 0 1 1 ] ; B059C2:PICK2	; [ 1 0 1 1 ] ; B059C6:16	; [ 1 0 1 1 0 ] ; B059CA:+	; [ 1 0 1 1 0 E ] ; B059CE:@	; [ 1 0 1 1 0 ] ; B059D2:-	; [ 1 0 1 1 0 ] ; B059D6:atan2	; [ 1 0 1 1 ] ; B059DA:sincos	; [ 1 0 0 ] ; B00482:DUP	; [ 1 0 0 ] ; B00486:sin	; [ 1 0 0 0 ] ; B0048A:SWAP	; [ 1 0 0 0 ] ; B0048E:cos	; [ 1 0 0 0 ] ; B059DE:A>	; [ 1 0 0 0 ] ; B059E2:*.	; [ 1 0 0 0 0 ] ; B0030A:16	; [ 1 0 0 0 0 ] ; B0030E:*>>	; [ 1 0 0 0 0 F ] ; B00312:DUP	; [ 1 0 0 0 ] ; B00316:63	; [ 1 0 0 0 0 ] ; B0031A:>>	; [ 1 0 0 0 0 10 ] ; B0031E:-	; [ 1 0 0 0 0 ] ; B059E6:DUP	; [ 1 0 0 0 ] ; B059EA:PICK4	; [ 1 0 0 0 0 ] ; B059EE:16	; [ 1 0 0 0 0 1 ] ; B059F2:+	; [ 1 0 0 0 0 1 11 ] ; B059F6:+!	; [ 1 0 0 0 0 1 ] ; B059FA:DUP	; [ 1 0 0 0 ] ; B059FE:PICK4	; [ 1 0 0 0 0 ] ; B05A02:32	; [ 1 0 0 0 0 1 ] ; B05A06:+	; [ 1 0 0 0 0 1 12 ] ; B05A0A:+!	; [ 1 0 0 0 0 1 ] ; B05A0E:NEG	; [ 1 0 0 0 ] ; B05A12:DUP	; [ 1 0 0 0 ] ; B05A16:PICK3	; [ 1 0 0 0 0 ] ; B05A1A:16	; [ 1 0 0 0 0 0 ] ; B05A1E:+	; [ 1 0 0 0 0 0 13 ] ; B05A22:+!	; [ 1 0 0 0 0 0 ] ; B05A26:PICK2	; [ 1 0 0 0 ] ; B05A2A:32	; [ 1 0 0 0 0 ] ; B05A2E:+	; [ 1 0 0 0 0 14 ] ; B05A32:+!	; [ 1 0 0 0 0 ] ; B05A36:A>	; [ 1 0 0 ] ; B05A3A:*.	; [ 1 0 0 0 ] ; B0030A:16	; [ 1 0 0 0 ] ; B0030E:*>>	; [ 1 0 0 0 15 ] ; B00312:DUP	; [ 1 0 0 ] ; B00316:63	; [ 1 0 0 0 ] ; B0031A:>>	; [ 1 0 0 0 16 ] ; B0031E:-	; [ 1 0 0 0 ] ; B05A3E:DUP	; [ 1 0 0 ] ; B05A42:PICK3	; [ 1 0 0 0 ] ; B05A46:8	; [ 1 0 0 0 1 ] ; B05A4A:+	; [ 1 0 0 0 1 17 ] ; B05A4E:+!	; [ 1 0 0 0 1 ] ; B05A52:DUP	; [ 1 0 0 ] ; B05A56:PICK3	; [ 1 0 0 0 ] ; B05A5A:24	; [ 1 0 0 0 1 ] ; B05A5E:+	; [ 1 0 0 0 1 18 ] ; B05A62:+!	; [ 1 0 0 0 1 ] ; B05A66:NEG	; [ 1 0 0 ] ; B05A6A:DUP	; [ 1 0 0 ] ; B05A6E:PICK2	; [ 1 0 0 0 ] ; B05A72:8	; [ 1 0 0 0 0 ] ; B05A76:+	; [ 1 0 0 0 0 19 ] ; B05A7A:+!	; [ 1 0 0 0 0 ] ; B05A7E:OVER	; [ 1 0 0 ] ; B05A82:24	; [ 1 0 0 0 ] ; B05A86:+	; [ 1 0 0 0 1A ] ; B05A8A:+!	; [ 1 0 0 0 ] ; B05A8E:;	; [ 1 0 ] ;---------ANA;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN +add rax,8; @mov rax,qword[rax]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN +add rax,8; @mov rax,qword[rax]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN +add rax,16; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN +add rax,16; @mov rax,qword[rax]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 4.0; OPTN >=?cmp rax,262144jl _o19; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o19:; sqrt.call w6B; 2.0add rbp,8mov [rbp],raxmov rax,131072; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; >Amov r14,raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN +add rax,8; @mov rax,qword[rax]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN +add rax,8; @mov rax,qword[rax]; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN +add rax,16; @mov rax,qword[rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN +add rax,16; @mov rax,qword[rax]; -neg raxadd rax,[rbp]sub rbp,8; atan2call w60; DUPadd rbp,8mov [rbp],rax; sincall w57; SWAPxchg rax,[rbp]; coscall w56; A>add rbp,8mov [rbp],raxmov rax,r14; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; 16; OPTN +add rax,16; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; DUPadd rbp,8mov [rbp],rax; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; 32; OPTN +add rax,32; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; NEGneg rax; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 16; OPTN +add rax,16; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 32; OPTN +add rax,32; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; A>add rbp,8mov [rbp],raxmov rax,r14; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 8; OPTN +add rax,8; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 24; OPTN +add rax,24; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; NEGneg rax; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 8; OPTN +add rax,8; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 24; OPTN +add rax,24; +!mov rcx,[rbp]add [rax],rcxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :main  |4001484|l'    . I| calls:1 niv:4 len:28 (  --  )w25A:;---------OPT; B05A92:$0	; [ ] ; B05A96:SDLclear	; [ 0 ] ; B02A4E:SDLcolor	; [ 0 ] ; B02A52:SDLrenderer	; [ ] ; B02A56:SDL_RenderClear	; [ 197 ] ; B02386:sys-SDL_RenderClear	; [ 197 ] ; B0238A:SYS1	; [ 197 14F ] ; B0238E:DROP	; [ 197 ] ; B05A9A:800	; [ ] ; B05A9E:600	; [ 1 ] ; B05AA2:whmode	; [ 1 2 ] ; B05AA6:0	; [ ] ; B05AAA:0	; [ 3 ] ; B05AAE:-45.0	; [ 3 4 ] ; B05AB2:mtrans	; [ 3 4 5 ] ; B05AB6:'bubles	; [ ] ; B05ABA:p.draw	; [ 251 ] ; B05ABE:SDLRedraw	; [ ] ; B02A5E:SDLrenderer	; [ ] ; B02A62:SDL_RenderPresent	; [ 197 ] ; B023B6:sys-SDL_RenderPresent	; [ 197 ] ; B023BA:SYS1	; [ 197 152 ] ; B023BE:DROP	; [ 197 ] ; B05AC2:'collision	; [ ] ; B05AC6:'bubles	; [ 259 ] ; B05ACA:p.map2	; [ 259 251 ] ; B05ACE:SDLkey	; [ ] ; B05AD2:>esc<	; [ 1A3 ] ; INLINE CTE; B05AD6:=?	; [ 1A3 6 ] ; B05ADA:(	; [ 1A3 ] ; B05ADE:exit	; [ 1A3 ] ; B0289E:1	; [ 1A3 ] ; B028A2:'.exit	; [ 1A3 7 ] ; B028A6:!	; [ 1A3 7 1AB ] ; B05AE2:)	; [ 1A3 ] ; B05AE6:<F1>	; [ 1A3 ] ; INLINE CTE; B05AEA:=?	; [ 1A3 8 ] ; B05AEE:(	; [ 1A3 ] ; B05AF2:+buble	; [ 1A3 ] ; B05AF6:)	; [ 1A3 ] ; B05AFA:DROP	; [ 1A3 ] ; B05AFE:;	; [ ] ;---------ANA;---------GEN; $0add rbp,8mov [rbp],raxxor rax,rax; SDLcolorcall w1AE; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w197]; sys-SDL_RenderClearadd rbp,8mov [rbp],raxmov rax,qword[w14F]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; 800add rbp,8mov [rbp],raxmov rax,800; 600add rbp,8mov [rbp],raxmov rax,600; whmodecall w1FE; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; -45.0add rbp,8mov [rbp],raxmov rax,-2949120; mtranscall w1EA; 'bublesadd rbp,8mov [rbp],raxmov rax,w251; p.drawcall w24A; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w197]; sys-SDL_RenderPresentadd rbp,8mov [rbp],raxmov rax,qword[w152]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; 'collisionadd rbp,8mov [rbp],raxmov rax,w259; 'bublesadd rbp,8mov [rbp],raxmov rax,w251; p.map2call w24F; SDLkeyadd rbp,8mov [rbp],raxmov rax,qword[w1A3]; $101b; OPTN =?cmp rax,4123jne _o1A; (; 1add rbp,8mov [rbp],raxmov rax,1; '.exit; OPTAV !mov qword[w1AB],raxmov rax,[rbp]sub rbp,8; )_o1A:; $403a; OPTN =?cmp rax,16442jne _o1B; (; +bublecall w258; )_o1B:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :inicio  |2001480|l     . I| calls:1 niv:2 len:20 (  --  )w25B:;---------OPT; B05B02:1000	; [ ] ; B05B06:'bubles	; [ 0 ] ; B05B0A:p.ini	; [ 0 251 ] ; B05B0E:"r3sdl"	; [ ] ; B05B12:800	; [ 551 ] ; B05B16:600	; [ 551 1 ] ; B05B1A:SDLinit	; [ 551 1 2 ] ; B05B1E:"media/img/ball.png"	; [ ] ; B05B22:loadimg	; [ 56D ] ; B05B26:'spr_ball	; [ 0 ] ; B05B2A:!	; [ 0 250 ] ; B05B2E:1000	; [ ] ; B05B32:'bubles	; [ 3 ] ; B05B36:p.ini	; [ 3 251 ] ; B05B3A:'bubles	; [ ] ; B05B3E:p.clear	; [ 251 ] ; B05542:DUP	; [ 251 ] ; B05546:8	; [ 251 251 ] ; B0554A:+	; [ 251 251 4 ] ; B0554E:@	; [ 251 251 ] ; B05552:SWAP	; [ 251 251 ] ; B05556:!	; [ 251 251 ] ; B05B42:'main	; [ ] ; B05B46:SDLshow	; [ 25A ] ; B05B4A:SDLquit	; [ ] ; B0264E:SDL_windows	; [ ] ; B02652:SDL_DestroyWindow	; [ 195 ] ; B02316:sys-SDL_DestroyWindow	; [ 195 ] ; B0231A:SYS1	; [ 195 149 ] ; B0231E:DROP	; [ 195 ] ; B02656:SDL_Quit	; [ ] ; B022B2:sys-SDL_Quit	; [ ] ; B022B6:SYS0	; [ 142 ] ; B022BA:DROP	; [ 142 ] ; B05B4E:;	; [ ] ;---------ANA;---------GEN; 1000add rbp,8mov [rbp],raxmov rax,1000; 'bublesadd rbp,8mov [rbp],raxmov rax,w251; p.inicall w243; "r3sdl"add rbp,8mov [rbp],raxmov rax,str551; 800add rbp,8mov [rbp],raxmov rax,800; 600add rbp,8mov [rbp],raxmov rax,600; SDLinitcall w19D; "media/img/ball.png"add rbp,8mov [rbp],raxmov rax,str56D; loadimgcall w1D1; 'spr_ball; OPTAV !mov qword[w250],raxmov rax,[rbp]sub rbp,8; 1000add rbp,8mov [rbp],raxmov rax,1000; 'bublesadd rbp,8mov [rbp],raxmov rax,w251; p.inicall w243; 'bublesadd rbp,8mov [rbp],raxmov rax,w251; DUPadd rbp,8mov [rbp],rax; 8; OPTN +add rax,8; @mov rax,qword[rax]; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov qword[rax],rcxmov rax,[rbp-8]sub rbp,8*2; 'mainadd rbp,8mov [rbp],raxmov rax,w25A; SDLshowcall w1AC; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w195]; sys-SDL_DestroyWindowadd rbp,8mov [rbp],raxmov rax,qword[w149]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20mov rcx,[rbp]call raxsub rbp,8add RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-SDL_Quitadd rbp,8mov [rbp],raxmov rax,qword[w142]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,$F0sub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |3001580|l     .iI| calls:1 niv:3 len:3 (  --  )INICIO:;---------OPT; B05B52:	; [ ] ; B05506:	; [ ] ; B0550A:MEM	; [ ] ; B0550E:'here	; [ 0 ] ; B05512:!	; [ 0 213 ] ; B05B56:inicio	; [ ] ; B05B5A:;	; [ ] ;---------ANA;---------GEN; call w1D3; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[w213],raxmov rax,[rbp]sub rbp,8; iniciojmp w25B; ; 